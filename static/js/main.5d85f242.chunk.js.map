{"version":3,"sources":["State/index.ts","Utility/Scry/index.ts","State/Reducers.ts","Utility/CollectionParser.ts","Utility/GoogleApi.ts","Components/DrawerDeckList.tsx","Components/Styled/Theme.ts","Components/Styled/Grid.tsx","Components/Applets/AddDeck.tsx","Components/CardPreview.tsx","Components/Applets/DeckPreview.tsx","Components/Applets/CardSearchh.tsx","Components/Applets/UserInfo.tsx","Components/Home.tsx","Components/NotFound.tsx","Components/SignInButton.tsx","Components/SignIn.tsx","Components/App.tsx","serviceWorker.ts","index.tsx"],"names":["DeckName","Api","endpoint","Axios","create","baseURL","responseType","headers","Symbology","All","get","then","l","data","ParseMana","cost","params","getPlaceholder","cardName","replace","Scry","getImage","card","type","images","layout","card_faces","image_uris","name","reducers","initialState","files","Collection","Wishlist","decks","cards","cardList","symbolList","selectedDeck","State","React","createContext","undefined","reducer","state","action","link","omit","symbols","reduce","obj","s","symbol","temp","i","parseSimple","collection","split","filter","line","match","startsWith","map","isNull","amount","parseInt","set","parseCsv","result","Papa","parse","header","dynamicTyping","skipEmptyLines","errors","length","forEach","console","error","c","card_name","isFoil","is_foil","set_code","comment","CollectionParser","GoogleApiInit","apiKey","process","clientId","discoveryDocs","scope","createNewFile","a","async","props","fileContent","folder","file","Blob","metadata","mimeType","appProperties","parents","accessToken","gapi","auth","getToken","access_token","form","FormData","append","JSON","stringify","fetch","method","Headers","Authorization","body","res","json","val","id","getFileContents","client","drive","fileId","alt","deleteFile","delete","createNewDeck","dispatch","restProps","GoogleApi","initClient","onUpdateStatus","load","init","auth2","getAuthInstance","isSignedIn","listen","getProfile","currentUser","getBasicProfile","signIn","signOut","prepareAppData","list","spaces","fields","response","collectionFile","find","f","info","wishlistFile","otherFiles","previewUrl","updateFile","deleteDeck","DrawerDeckList","useContext","selectDeck","List","ListItem","button","onClick","ListItemIcon","ListItemText","primary","Divider","Object","values","deck","key","Avatar","src","MainTheme","createMuiTheme","palette","main","colors","deepOrange","secondary","blueGrey","constants","drawerWidth","appletHeight","css","ThemeProv","styledCss","styled","baseStyled","FlexCol","div","AppletPaper","Paper","p","theme","spacing","AppletActions","Title","Typography","attrs","component","variant","color","gutterBottom","AddDeck","useState","importText","setImportText","deckName","setDeckName","open","setOpen","invalidName","setInvalidName","handleClose","handleImport","keys","n","Grid","item","xs","md","TextField","label","helperText","value","onChange","e","target","ButtonGroup","size","Button","Dialog","onClose","aria-labelledby","fullWidth","maxWidth","DialogTitle","DialogContent","DialogContentText","autoFocus","multiline","rows","DialogActions","CardPreview","style","scryCard","title","mana_cost","ScryHelpers","DeckPreview","setStyle","useEffect","missingCards","byName","on","container","direction","justify","IconButton","log","disabled","aria-label","CardSearch","UserInfo","Home","Container","NotFound","SignInButton","noWrap","SignIn","alignItems","bodyOpen","transitions","easing","sharp","duration","enteringScreen","bodyClose","leavingScreen","CustomAppBar","AppBar","zIndex","drawer","MenuButton","drawerOpen","drawerClose","CustomDrawer","Drawer","DrawerToolbar","Toolbar","MainContent","ProfileAvatar","App","useReducer","profile","setProfile","setIsSignedIn","Provider","position","edge","isNullOrUndefined","Tooltip","getGivenName","getEmail","getImageUrl","basename","to","exact","path","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StylesProvider","injectFirst","CssBaseline","document","getElementById","URL","href","origin","addEventListener","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5d85f242.chunk.js","sourcesContent":["import React from \"react\";\nimport Scry from \"scryfall-sdk\";\nimport DeepReadonly from \"../Utility/DeepReadonly\";\nimport { ScryCardSymbol } from \"../Utility/Scry/Types\";\nimport { Action } from \"./Actions\";\n\nexport enum DeckName {\n    Collection = \"_collection\",\n    Wishlist = \"_wishlist\",\n}\n\nexport type DeckCard = DeepReadonly<{\n    amount: number;\n    name: string;\n    isFoil?: boolean;\n    set?: string;\n    comment?: string;\n}>;\n\nexport type DeckProps = Omit<Deck, \"cards\">;\n\nexport type Deck = DeepReadonly<{\n    name: string;\n    previewUrl?: string;\n    cards: DeckCard[];\n}>;\n\nexport type FileIds = DeepReadonly<{\n    [DeckName.Collection]: string;\n    [DeckName.Wishlist]: string;\n    [deckName: string]: string;\n}>;\n\nexport type Decks = DeepReadonly<{\n    [DeckName.Collection]: Deck;\n    [DeckName.Wishlist]: Deck;\n    [deckName: string]: Deck;\n}>;\n\nexport type CardList = DeepReadonly<{\n    [cardName: string]: Scry.Card;\n}>;\n\nexport type SymbolList = DeepReadonly<{\n    [symbol: string]: ScryCardSymbol;\n}>;\n\nexport type AppState = DeepReadonly<{\n    files: FileIds;\n    decks: Decks;\n    cardList: CardList;\n    symbolList: SymbolList;\n    selectedDeck: string | null;\n}>;\n\nexport const initialState: AppState = {\n    files: {\n        [DeckName.Collection]: \"\",\n        [DeckName.Wishlist]: \"\",\n    },\n    decks: {\n        [DeckName.Collection]: { name: DeckName.Collection, cards: [] },\n        [DeckName.Wishlist]: { name: DeckName.Wishlist, cards: [] },\n    },\n    cardList: {},\n    symbolList: {},\n    selectedDeck: null,\n};\n\nexport const State = React.createContext<[AppState, React.Dispatch<Action>]>([initialState, undefined as any]);\n","import ScrySdk from \"scryfall-sdk\";\nimport DeepReadonly from \"../DeepReadonly\";\nimport Axios from \"axios\";\nimport { ScryCardSymbol, ScryManaCost } from \"./Types\";\n\ntype List<T = any> = {\n    data: T[];\n};\n\nconst Api = (() => {\n    let endpoint = Axios.create({\n        baseURL: \"https://api.scryfall.com\",\n        responseType: \"json\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n    });\n\n    return {\n        endpoint,\n        Symbology: {\n            All: () => endpoint.get<List<ScryCardSymbol>>(\"/symbology\").then(l => l.data.data),\n            ParseMana: (cost: string) => endpoint.get<ScryManaCost>(\"/symbology/parse-mana\", { params: { cost } }),\n        },\n    };\n})();\n\nconst getImage = (card: DeepReadonly<ScrySdk.Card>, type: keyof ScrySdk.ImageUris): string => {\n    var images: ScrySdk.ImageUris | null | undefined;\n    switch (card.layout) {\n        case \"transform\":\n        case \"double_faced_token\":\n            images = card.card_faces![0].image_uris;\n            break;\n        default:\n            images = card.image_uris;\n    }\n    return images?.[type] ?? getPlaceholder(card.name);\n};\n\nconst getPlaceholder = (cardName: string): string => `https://via.placeholder.com/146x204?text=${cardName.replace(/\\s/, \"+\")}`;\n\nconst Scry = {\n    ...Api,\n    getImage,\n    getPlaceholder,\n};\nexport default Scry;\n","import { omit } from \"lodash\";\nimport { AppState, CardList, Decks, FileIds, SymbolList } from \".\";\nimport { Action } from \"./Actions\";\n\nconst filesReducer = (state: FileIds, action: Action): FileIds => {\n    switch (action.type) {\n        case \"CreateDeck\":\n            return {\n                ...state,\n                [action.name]: action.link,\n            };\n        case \"DeleteDeck\":\n            return { ...omit(state, [action.name]) } as FileIds;\n    }\n    return state;\n};\n\nconst cardListReducer = (state: CardList, action: Action): CardList => {\n    switch (action.type) {\n        case \"AddCard\":\n            return {\n                ...state,\n                [action.card.name]: action.card,\n            };\n    }\n    return state;\n};\n\nconst symbolListReducer = (state: SymbolList, action: Action): SymbolList => {\n    switch (action.type) {\n        case \"AddSymbols\":\n            return action.symbols.reduce((obj, s) => ({ ...obj, [s.symbol]: s }), {});\n    }\n    return state;\n};\n\nconst decksReducer = (state: Decks, action: Action): Decks => {\n    switch (action.type) {\n        case \"CreateDeck\":\n            return {\n                ...state,\n                [action.name]: {\n                    cards: [],\n                    ...omit(action, [\"type\", \"link\"]),\n                },\n            };\n        case \"UpdateDeck\":\n            return {\n                ...state,\n                [action.name]: {\n                    ...state[action.name],\n                    ...omit(action, [\"type\"]),\n                },\n            };\n        case \"DeleteDeck\":\n            return { ...omit(state, [action.name]) } as Decks;\n    }\n    return state;\n};\n\nconst selectedDeckReducer = (state: string | null, action: Action): string | null => {\n    switch (action.type) {\n        case \"SelectDeck\":\n            return action.name;\n        case \"DeleteDeck\":\n            return action.name === state ? null : state;\n    }\n    return state;\n};\n\nconst combineReducers = <State, Action>(reducers: { [P in keyof State]: (state: State[P], action: Action) => State[P] }) => {\n    return (state: State, action: Action) => {\n        const temp: State = {} as any;\n        for (const i in reducers) {\n            temp[i] = reducers[i](state[i], action);\n        }\n        return temp;\n    };\n};\n\nexport const reducer = combineReducers<AppState, Action>({\n    files: filesReducer,\n    cardList: cardListReducer,\n    symbolList: symbolListReducer,\n    decks: decksReducer,\n    selectedDeck: selectedDeckReducer,\n});\n","import { isNull } from \"lodash\";\nimport Papa from \"papaparse\";\nimport { DeckCard } from \"../State\";\n\nconst parse = (collection?: string): DeckCard[] => {\n    if (!collection || collection === \"\") {\n        return [];\n    }\n    if (collection.match(/^([\\D_]+,?)+/)) {\n        return parseCsv(collection);\n    }\n    return parseSimple(collection);\n};\n\nconst parseSimple = (collection: string): DeckCard[] =>\n    collection\n        .split(\"\\n\")\n        .filter(line => !line.match(/^\\s*$/) && !line.startsWith(\"//\"))\n        .map(line => line.match(/^(\\d*) (?:\\[(.*)\\] )?(.*)$/))\n        .filter(match => !isNull(match))\n        .map(match => ({\n            amount: parseInt(match![1]),\n            name: match![3],\n            set: match![2],\n        }));\n\nconst parseCsv = (collection: string): DeckCard[] => {\n    const result = Papa.parse(collection, {\n        header: true,\n        dynamicTyping: true,\n        skipEmptyLines: \"greedy\",\n    });\n    if (result.errors?.length > 0) {\n        result.errors.forEach(console.error);\n    }\n    return result.data.map(c => ({\n        amount: c.amount,\n        name: c.name ?? c.card_name,\n        isFoil: c.isFoil ?? c.is_foil === 1,\n        set: c.set ?? c.set_code,\n        comment: c.comment,\n    }));\n};\n\nconst CollectionParser = {\n    parse,\n};\n\nexport default CollectionParser;\n","/* global gapi */\nimport React from \"react\";\nimport { DeckName, DeckProps } from \"../State\";\nimport { Action } from \"../State/Actions\";\nimport CollectionParser from \"./CollectionParser\";\n\nconst GoogleApiInit = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    clientId: process.env.REACT_APP_CLIENT_ID,\n    discoveryDocs: [\"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\"],\n    scope: \"profile https://www.googleapis.com/auth/drive.appdata https://www.googleapis.com/auth/drive.file\",\n};\n\nconst initClient = (onUpdateStatus: (isSignedIn: boolean) => void) => {\n    gapi.load(\"client:auth2\", () => {\n        gapi.client.init(GoogleApiInit).then(() => {\n            gapi.auth2.getAuthInstance().isSignedIn.listen(onUpdateStatus);\n            onUpdateStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n        }, console.error);\n    });\n};\n\nconst prepareAppData = () => async (dispatch: React.Dispatch<Action>) => {\n    var response = await gapi.client.drive.files.list({\n        spaces: \"appDataFolder\",\n        fields: \"nextPageToken, files(id, name, appProperties)\",\n    });\n\n    const collectionFile = response.result?.files?.find(f => f.appProperties?.name === DeckName.Collection);\n    if (!collectionFile) {\n        console.info(\"Creating collection...\");\n        createNewDeck(dispatch, { name: DeckName.Collection });\n    } else {\n        console.info(\"Loading collection...\");\n        dispatch({ type: \"CreateDeck\", name: DeckName.Collection, link: collectionFile.id! });\n        dispatch({ type: \"UpdateDeck\", name: DeckName.Collection, cards: CollectionParser.parse(await getFileContents({ id: collectionFile.id! })) });\n    }\n\n    const wishlistFile = response.result?.files?.find(f => f.appProperties?.name === DeckName.Wishlist);\n    if (!wishlistFile) {\n        console.info(\"Creating wishlist...\");\n        createNewDeck(dispatch, { name: DeckName.Wishlist });\n    } else {\n        console.info(\"Loading wishlist...\");\n        dispatch({ type: \"CreateDeck\", name: DeckName.Wishlist, link: wishlistFile.id! });\n        dispatch({ type: \"UpdateDeck\", name: DeckName.Wishlist, cards: CollectionParser.parse(await getFileContents({ id: wishlistFile.id! })) });\n    }\n\n    const otherFiles = response.result?.files?.filter(f => f.appProperties?.name !== DeckName.Collection && f.appProperties?.name !== DeckName.Wishlist)!;\n    for (let i = 0; i < otherFiles.length; i++) {\n        const file = otherFiles[i];\n        const name = file.appProperties?.name ?? file.name?.match(/(.*?)\\.txt/)?.[0] ?? \"unnamed\";\n        dispatch({ type: \"CreateDeck\", name, link: file.id! });\n        dispatch({\n            type: \"UpdateDeck\",\n            name,\n            previewUrl: file.appProperties?.previewUrl,\n            cards: CollectionParser.parse(await getFileContents({ id: file.id! })),\n        });\n    }\n};\n\nconst createNewFile = async ({\n    name,\n    props,\n    fileContent,\n    folder,\n}: {\n    name: string;\n    props?: object;\n    fileContent?: string;\n    folder?: string[];\n}): Promise<string> => {\n    const file = new Blob([fileContent ?? \"\"], { type: \"text/plain\" });\n    const metadata = {\n        name,\n        mimeType: \"text/plain\",\n        appProperties: props ?? {},\n        parents: [\"appDataFolder\", ...(folder ?? [])],\n    };\n\n    const accessToken = gapi.auth.getToken().access_token;\n    const form = new FormData();\n    form.append(\"metadata\", new Blob([JSON.stringify(metadata)], { type: \"application/json\" }));\n    form.append(\"file\", file);\n\n    const res = await fetch(\"https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart&fields=id\", {\n        method: \"POST\",\n        headers: new Headers({ Authorization: \"Bearer \" + accessToken }),\n        body: form,\n    });\n    const val = await res.json();\n    return val.id;\n};\n\nconst updateFile = async ({ id, fileContent }: { id: string; fileContent: string }) => {\n    const file = new Blob([fileContent], { type: \"text/plain\" });\n\n    const accessToken = gapi.auth.getToken().access_token;\n    const form = new FormData();\n    form.append(\"file\", file);\n\n    const res = await fetch(`https://www.googleapis.com/upload/drive/v3/files/${id}?uploadType=media&fields=id`, {\n        method: \"PATCH\",\n        headers: new Headers({ Authorization: \"Bearer \" + accessToken }),\n        body: form,\n    });\n    const val = await res.json();\n    return val.id;\n};\n\nconst getFileContents = async ({ id }: { id: string }) => {\n    const res = await gapi.client.drive.files.get({\n        fileId: id,\n        alt: \"media\",\n    });\n    return res.body;\n};\n\nconst deleteFile = async ({ id }: { id: string }) => gapi.client.drive.files.delete({ fileId: id });\n\nconst createNewDeck = async (dispatch: React.Dispatch<Action>, { name, fileContent, ...restProps }: DeckProps & { fileContent?: string }) => {\n    dispatch({\n        type: \"CreateDeck\",\n        name,\n        link: await createNewFile({\n            name: `${name}.txt`,\n            props: {\n                name,\n                ...restProps,\n            },\n            fileContent,\n        }),\n        cards: CollectionParser.parse(fileContent),\n    });\n};\n\nconst deleteDeck = async (dispatch: React.Dispatch<Action>, { name, id }: { name: string; id: string }) => {\n    await deleteFile({id});\n    dispatch({ type: \"DeleteDeck\", name });\n};\n\nconst getProfile = () => {\n    return gapi.auth2\n        .getAuthInstance()\n        .currentUser.get()\n        .getBasicProfile();\n};\n\nconst signIn = () => gapi.auth2.getAuthInstance().signIn();\nconst signOut = () => gapi.auth2.getAuthInstance().signOut();\n\nexport type GoogleProfile = gapi.auth2.BasicProfile;\n\nconst GoogleApi = {\n    initClient,\n    getProfile,\n    signIn,\n    signOut,\n    prepareAppData,\n    createNewFile,\n    updateFile,\n    deleteFile,\n    createNewDeck,\n    deleteDeck,\n    getFileContents,\n};\nexport default GoogleApi;\n","import { Avatar, Divider, List, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\r\nimport CollectionsIcon from \"@material-ui/icons/Collections\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport React from \"react\";\r\nimport { DeckName, State } from \"../State\";\r\n\r\nconst DrawerDeckList: React.FC = () => {\r\n    const [state, dispatch] = React.useContext(State);\r\n    const selectDeck = (name: string) => () => {\r\n        dispatch({ type: \"SelectDeck\", name });\r\n    };\r\n    return (\r\n        <>\r\n            <List>\r\n                <ListItem button onClick={selectDeck(DeckName.Collection)}>\r\n                    <ListItemIcon>\r\n                        <CollectionsIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Collection\" />\r\n                </ListItem>\r\n                <ListItem button onClick={selectDeck(DeckName.Wishlist)}>\r\n                    <ListItemIcon>\r\n                        <FavoriteIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Wishlist\" />\r\n                </ListItem>\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                {Object.values(state.decks)\r\n                    .filter(deck => deck.name !== DeckName.Collection && deck.name !== DeckName.Wishlist)\r\n                    .map(deck => (\r\n                        <ListItem button key={deck.name} onClick={selectDeck(deck.name)}>\r\n                            <ListItemIcon>{deck.previewUrl ? <Avatar alt={deck.name} src={deck.previewUrl} /> : <CollectionsIcon />}</ListItemIcon>\r\n                            <ListItemText primary={deck.name} />\r\n                        </ListItem>\r\n                    ))}\r\n            </List>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DrawerDeckList;\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport baseStyled, { css as styledCss, ThemedStyledInterface, ThemedStyledProps, ThemeProvider as ThemeProv } from \"styled-components\";\r\nimport { colors } from \"@material-ui/core\";\r\n\r\nconst additionalArgs = {\r\n    constants: {\r\n        drawerWidth: \"240px\",\r\n        appletHeight: \"240px\",\r\n    },\r\n};\r\n\r\nexport const MainTheme = createMuiTheme(\r\n    {\r\n        palette: {\r\n            type: \"dark\",\r\n            primary: { main: colors.deepOrange[700] },\r\n            secondary: { main: colors.blueGrey[500] },\r\n        },\r\n    },\r\n    additionalArgs\r\n);\r\n\r\nexport const ThemeProvider = ThemeProv;\r\nexport const css = styledCss;\r\n\r\nexport type Theme = typeof MainTheme & typeof additionalArgs;\r\nexport type ComponentProps<T = {}> = ThemedStyledProps<T, Theme>;\r\nconst styled = baseStyled as ThemedStyledInterface<Theme>;\r\nexport default styled;\r\n","import { Paper, Typography } from \"@material-ui/core\";\r\nimport styled from \"./Theme\";\r\n\r\nexport const FlexCol = styled.div`\r\n    flex: 1 1 auto;\r\n`;\r\n\r\nexport const AppletPaper = styled(Paper)`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: stretch;\r\n    min-height: ${p => p.theme.constants.appletHeight};\r\n    padding: ${p => p.theme.spacing(2)}px;\r\n`;\r\n\r\nexport const AppletActions = styled.div`\r\n    align-self: flex-end;\r\n`;\r\n\r\nexport const Title = styled(Typography).attrs(p => ({\r\n    component: \"h2\",\r\n    variant: \"h6\",\r\n    color: \"primary\",\r\n    gutterBottom: true,\r\n}))``;\r\n","import { Button, ButtonGroup, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, TextField } from \"@material-ui/core\";\nimport React from \"react\";\nimport { State } from \"../../State\";\nimport GoogleApi from \"../../Utility/GoogleApi\";\nimport { AppletActions, AppletPaper, FlexCol, Title } from \"../Styled/Grid\";\n\nconst AddDeck = () => {\n    const [state, dispatch] = React.useContext(State);\n\n    const [importText, setImportText] = React.useState<string>(\"\");\n    const [deckName, setDeckName] = React.useState<string>(\"\");\n    const [open, setOpen] = React.useState(false);\n    const [invalidName, setInvalidName] = React.useState<boolean>(false);\n\n    const handleClickOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n\n    const handleImport = () => {\n        setOpen(false);\n        if (deckName === \"\" || Object.keys(state.decks).find(n => n === deckName)) {\n            setInvalidName(true);\n            return;\n        }\n        GoogleApi.createNewDeck(dispatch, { name: deckName, fileContent: importText });\n        setImportText(\"\");\n        setDeckName(\"\");\n        setInvalidName(false);\n    };\n\n    return (\n        <Grid item xs={12} md={3}>\n            <AppletPaper>\n                <Title>Add deck</Title>\n                <FlexCol>\n                    <TextField\n                        label=\"Deck name\"\n                        variant=\"outlined\"\n                        error={invalidName}\n                        helperText={\n                            deckName === \"\"\n                                ? \"Deck name can't be empty\"\n                                : Object.keys(state.decks).find(n => n === deckName)\n                                    ? \"Deck with this name already exists\"\n                                    : \"\"\n                        }\n                        value={deckName}\n                        onChange={e => setDeckName(e.target.value)}\n                    />\n                </FlexCol>\n                <AppletActions>\n                    <ButtonGroup size=\"small\">\n                        <Button onClick={handleClickOpen}>Import</Button>\n                        <Button color=\"primary\" onClick={handleImport}>\n                            Create\n                        </Button>\n                    </ButtonGroup>\n                </AppletActions>\n                <Dialog open={open} onClose={handleClose} aria-labelledby=\"import-deck-dialog\" fullWidth maxWidth=\"md\">\n                    <DialogTitle id=\"import-deck-dialog\">Import</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>Paste exported deck below.</DialogContentText>\n                        <TextField\n                            autoFocus\n                            fullWidth\n                            label=\"Import\"\n                            multiline\n                            rows=\"15\"\n                            variant=\"outlined\"\n                            value={importText}\n                            onChange={e => setImportText(e.target.value)}\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={handleImport} color=\"primary\">\n                            Import\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </AppletPaper>\n        </Grid>\n    );\n};\n\nexport default AddDeck;\n","import { DeckCard, State } from \"../State\";\nimport React from \"react\";\nimport { PreviewStyle } from \"./Applets/DeckPreview\";\nimport ScryHelpers from \"../Utility/Scry\";\n\ntype Props = DeckCard & {\n    style: PreviewStyle;\n};\n\nconst CardPreview = ({ style, ...card }: Props) => {\n    const [state] = React.useContext(State);\n    const scryCard = state.cardList[card.name];\n\n    switch (style) {\n        case \"Minimal\":\n            return (\n                <tr title={card.comment}>\n                    <td>{card.amount}x</td>\n                    <td>\n                        {card.isFoil && <div>(Foil)</div>}\n                        {card.name}\n                    </td>\n                    <td>{card.set ?? \"-\"}</td>\n                </tr>\n            );\n        case \"Checklist\":\n            return (\n                <tr>\n                    <td>{card.amount}x</td>\n                    <td>\n                        {card.isFoil && <div>(Foil)</div>}\n                        {card.name}\n                    </td>\n                    <td>{scryCard ? scryCard.mana_cost : \"???\"}</td>\n                    <td>{card.set}</td>\n                </tr>\n            );\n        case \"Images\":\n            return <img title={card.name} alt={card.name} src={scryCard ? ScryHelpers.getImage(scryCard, \"small\") : ScryHelpers.getPlaceholder(card.name)} />;\n        case \"Full\":\n            return <div>PLACEHOLDER</div>;\n    }\n};\n\nexport default CardPreview;\n","import { Grid, IconButton, Typography } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport React from \"react\";\nimport * as Scry from \"scryfall-sdk\";\nimport { DeckName, State } from \"../../State\";\nimport GoogleApi from \"../../Utility/GoogleApi\";\nimport CardPreview from \"../CardPreview\";\nimport { AppletActions, AppletPaper, FlexCol, Title } from \"../Styled/Grid\";\n\nexport type PreviewStyle = \"Minimal\" | \"Checklist\" | \"Images\" | \"Full\";\n\ntype Props = {\n    deckName: string;\n};\n\nconst DeckPreview = ({ deckName }: Props) => {\n    const [state, dispatch] = React.useContext(State);\n    const deck = state.decks[deckName];\n\n    const [style, setStyle] = React.useState<PreviewStyle>(\"Minimal\");\n\n    React.useEffect(() => {\n        const missingCards = deck.cards.filter(card => !state.cardList[card.name]);\n        Scry.Cards.collection(\n            ...missingCards.map(card => (card.set ? Scry.CardIdentifier.byName(card.name, card.set) : Scry.CardIdentifier.byName(card.name)))\n        ).on(\"data\", (card: any) => dispatch({ type: \"AddCard\", card }));\n    }, [deck, dispatch, state.cardList]);\n\n    const exportCollection = async () => {\n        console.log(await GoogleApi.getFileContents({ id: state.files.collection }));\n    };\n\n    const closePreview = () => {\n        dispatch({ type: \"SelectDeck\", name: null });\n    };\n\n    const onDeleteDeck = () => {\n        GoogleApi.deleteDeck(dispatch, { name: deckName, id: state.files[deckName] });\n    };\n\n    return (\n        <Grid item xs={12} md={6}>\n            <AppletPaper>\n                <Grid container direction=\"row\" justify=\"space-between\">\n                    <Grid item>\n                        <Title>Deck preview</Title>\n                    </Grid>\n                    <Grid item>\n                        <IconButton size=\"small\" onClick={closePreview}>\n                            <CloseIcon />\n                            <Typography variant=\"srOnly\">Close preview</Typography>\n                        </IconButton>\n                    </Grid>\n                </Grid>\n\n                <FlexCol>\n                    <div>Deck: {deckName}</div>\n                    <button onClick={exportCollection}>Export collection</button>\n                    <div>\n                        <div>Style:</div>\n                        <button disabled={style === \"Minimal\"} onClick={() => setStyle(\"Minimal\")}>\n                            Minimal\n                        </button>\n                        <button disabled={style === \"Checklist\"} onClick={() => setStyle(\"Checklist\")}>\n                            Checklist\n                        </button>\n                        <button disabled={style === \"Images\"} onClick={() => setStyle(\"Images\")}>\n                            Images\n                        </button>\n                        <button disabled={style === \"Full\"} onClick={() => setStyle(\"Full\")}>\n                            Full\n                        </button>\n                    </div>\n                    {style === \"Minimal\" || style === \"Checklist\" ? (\n                        <table>\n                            {style === \"Minimal\" && (\n                                <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Card name</th>\n                                        <th>Set</th>\n                                    </tr>\n                                </thead>\n                            )}\n                            {style === \"Checklist\" && (\n                                <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Card name</th>\n                                        <th>Mana cost</th>\n                                        <th>Set</th>\n                                    </tr>\n                                </thead>\n                            )}\n                            <tbody>\n                                {deck.cards.map((card, i) => (\n                                    <CardPreview style={style} key={i} {...card} />\n                                ))}\n                            </tbody>\n                        </table>\n                    ) : (\n                        <div>\n                            {deck.cards.map((card, i) => (\n                                <CardPreview style={style} key={i} {...card} />\n                            ))}\n                        </div>\n                    )}\n                </FlexCol>\n                <AppletActions>\n                    {deckName !== DeckName.Collection && deckName !== DeckName.Wishlist && (\n                        <IconButton aria-label=\"delete\" onClick={onDeleteDeck}>\n                            <DeleteIcon />\n                        </IconButton>\n                    )}\n                </AppletActions>\n            </AppletPaper>\n        </Grid>\n    );\n};\n\nexport default DeckPreview;\n","import { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport { AppletPaper, Title } from \"../Styled/Grid\";\n\nconst CardSearch: React.FC = () => {\n    return (\n        <Grid item xs={12} md>\n            <AppletPaper>\n                <Title>Card search</Title>\n            </AppletPaper>\n        </Grid>\n    );\n};\n\nexport default CardSearch;\n","import { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport { AppletPaper, Title } from \"../Styled/Grid\";\n\nconst UserInfo: React.FC = () => {\n    return (\n        <Grid item xs={12} md={9}>\n            <AppletPaper>\n                <Title>User info</Title>\n                UserInfo paceholder\n            </AppletPaper>\n        </Grid>\n    );\n};\n\nexport default UserInfo;\n","import { Container, Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport AddDeck from \"./Applets/AddDeck\";\r\nimport DeckPreview from \"./Applets/DeckPreview\";\r\nimport CardSearch from \"./Applets/CardSearchh\";\r\nimport UserInfo from \"./Applets/UserInfo\";\r\nimport { State } from \"../State\";\r\n\r\nconst Home: React.FC = () => {\r\n    const [state] = React.useContext(State);\r\n    return (\r\n        <Container maxWidth=\"lg\">\r\n            <Grid container spacing={3}>\r\n                <UserInfo />\r\n                <AddDeck />\r\n                <CardSearch />\r\n                { state.selectedDeck !== null && <DeckPreview deckName={state.selectedDeck} />}\r\n            </Grid>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nconst NotFound: React.FC = () => {\r\n    return <div>Not found</div>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Button, Typography } from \"@material-ui/core\";\r\n\r\ntype Props = {\r\n    variant?: \"text\" | \"outlined\" | \"contained\";\r\n    onClick: () => void;\r\n};\r\n\r\nconst SignInButton: React.FC<Props> = ({ variant, onClick }: Props) => {\r\n    return (\r\n        <Button variant={variant} onClick={onClick}>\r\n            <Typography noWrap>Sign in with Google</Typography>\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport default SignInButton;\r\n","import React from \"react\";\r\nimport GoogleApi from \"../Utility/GoogleApi\";\r\nimport SignInButton from \"./SignInButton\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst SignIn: React.FC = () => {\r\n    return (\r\n        <Grid container justify=\"center\" alignItems=\"center\">\r\n            <SignInButton variant=\"contained\" onClick={GoogleApi.signIn} />\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default SignIn;\r\n","import { AppBar, Avatar, Divider, Drawer, IconButton, Toolbar, Tooltip, Typography } from \"@material-ui/core\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport React from \"react\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport Scry from \"../Utility/Scry\";\nimport { isNullOrUndefined } from \"util\";\nimport { initialState, State } from \"../State\";\nimport { reducer } from \"../State/Reducers\";\nimport GoogleApi, { GoogleProfile } from \"../Utility/GoogleApi\";\nimport DrawerDeckList from \"./DrawerDeckList\";\nimport Home from \"./Home\";\nimport NotFound from \"./NotFound\";\nimport SignIn from \"./SignIn\";\nimport SignInButton from \"./SignInButton\";\nimport { FlexCol } from \"./Styled/Grid\";\nimport styled, { ComponentProps, css, MainTheme } from \"./Styled/Theme\";\n\nconst bodyOpen = css<ComponentProps<any>>`\n    margin-left: ${p => p.theme.constants.drawerWidth};\n    width: calc(100% - ${p => p.theme.constants.drawerWidth});\n    transition: ${p =>\n        p.theme.transitions.create([\"width\", \"margin\"], {\n            easing: p.theme.transitions.easing.sharp,\n            duration: p.theme.transitions.duration.enteringScreen,\n        })};\n`;\n\nconst bodyClose = css<ComponentProps<any>>`\n    transition: ${p =>\n        p.theme.transitions.create([\"width\", \"margin\"], {\n            easing: p.theme.transitions.easing.sharp,\n            duration: p.theme.transitions.duration.leavingScreen,\n        })};\n`;\n\nconst CustomAppBar = styled(AppBar)<{ open: boolean }>`\n    z-index: ${p => p.theme.zIndex.drawer + 1};\n    ${bodyClose}\n    ${p => p.open && bodyOpen}\n`;\n\nconst MenuButton = styled(IconButton)<{ open: boolean }>`\n    margin-right: 36px;\n    ${p =>\n        p.open &&\n        css`\n            display: none;\n        `}\n`;\n\nconst drawerOpen = css<ComponentProps<any>>`\n    width: ${p => p.theme.constants.drawerWidth};\n    transition: ${p =>\n        p.theme.transitions.create(\"width\", {\n            easing: p.theme.transitions.easing.sharp,\n            duration: p.theme.transitions.duration.enteringScreen,\n        })};\n`;\n\nconst drawerClose = css<ComponentProps<any>>`\n    transition: ${p =>\n        p.theme.transitions.create(\"width\", {\n            easing: p.theme.transitions.easing.sharp,\n            duration: p.theme.transitions.duration.leavingScreen,\n        })};\n    overflow-x: hidden;\n    width: ${p => p.theme.spacing(7) + 1}px;\n`;\n\nconst CustomDrawer = styled(Drawer).attrs(() => ({\n    variant: \"permanent\",\n}))<{ open?: boolean }>`\n    width: ${p => p.theme.constants.drawerWidth};\n    flex-shrink: 0;\n    white-space: nowrap;\n    ${p => (p.open ? drawerOpen : drawerClose)}\n\n    .MuiDrawer-paper {\n        ${p => (p.open ? drawerOpen : drawerClose)}\n    }\n`;\n\nconst DrawerToolbar = styled(Toolbar)`\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    padding: ${p => p.theme.spacing(0, 1)}px;\n`;\n\nconst MainContent = styled.div<{ open: boolean }>`\n    flex-grow: 1;\n    padding: ${p => p.theme.spacing(3)}px;\n    margin-left: ${p => p.theme.spacing(7) + 1}px;\n    ${bodyClose}\n    ${p => p.open && bodyOpen}\n`;\n\nconst ProfileAvatar = styled.div`\n    margin-right: ${p => p.theme.spacing(1)}px;\n`;\n\nconst App: React.FC = () => {\n    const [state, dispatch] = React.useReducer(reducer, initialState);\n\n    const [profile, setProfile] = React.useState<GoogleProfile>();\n    const [isSignedIn, setIsSignedIn] = React.useState(false);\n\n    const handleSignoutClick = () => {\n        GoogleApi.signOut();\n        setProfile(undefined);\n    };\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleDrawerOpen = () => setOpen(true);\n    const handleDrawerClose = () => setOpen(false);\n\n    /**\n     * Called at app init, sets Google API signin callback\n     * info stored in React profile state\n     */\n    React.useEffect(() => {\n        GoogleApi.initClient(async (isSignedIn: boolean) => {\n            setIsSignedIn(isSignedIn);\n            if (!isSignedIn) {\n                return;\n            }\n            setProfile(GoogleApi.getProfile());\n            GoogleApi.prepareAppData()(dispatch);\n        });\n        Scry.Symbology.All().then(symbols => dispatch({ type: \"AddSymbols\", symbols }));\n    }, []);\n\n    return (\n        <State.Provider value={[state, dispatch]}>\n            <CustomAppBar position=\"sticky\" open={open}>\n                <Toolbar>\n                    <MenuButton color=\"inherit\" aria-label=\"open drawer\" onClick={handleDrawerOpen} edge=\"start\" open={open}>\n                        <MenuIcon />\n                    </MenuButton>\n                    <Typography variant=\"h6\">MTGCollection</Typography>\n                    <FlexCol />\n                    {isSignedIn ? (\n                        <>\n                            {!isNullOrUndefined(profile) && (\n                                <ProfileAvatar>\n                                    <Tooltip title={`Signed in as ${profile.getGivenName()} (${profile.getEmail()})`}>\n                                        <Avatar alt={profile.getGivenName()} src={profile.getImageUrl()} />\n                                    </Tooltip>\n                                </ProfileAvatar>\n                            )}\n                            <IconButton onClick={handleSignoutClick}>\n                                <ExitToAppIcon />\n                                <Typography variant=\"srOnly\">SignOut</Typography>\n                            </IconButton>\n                        </>\n                    ) : (\n                        <SignInButton onClick={GoogleApi.signIn} />\n                    )}\n                </Toolbar>\n            </CustomAppBar>\n            <CustomDrawer open={open}>\n                <DrawerToolbar>\n                    <IconButton onClick={handleDrawerClose}>{MainTheme.direction === \"rtl\" ? <ChevronRightIcon /> : <ChevronLeftIcon />}</IconButton>\n                </DrawerToolbar>\n                <Divider />\n                <DrawerDeckList />\n            </CustomDrawer>\n            <MainContent open={open}>\n                <BrowserRouter basename={process.env.PUBLIC_URL}>\n                    <Redirect to={isSignedIn ? \"/\" : \"/signin/\"} />\n                    <Switch>\n                        <Route exact path=\"/\" component={Home} />\n                        <Route exact path=\"/signin/\" component={SignIn} />\n                        <Route component={NotFound} />\n                    </Switch>\n                </BrowserRouter>\n            </MainContent>\n        </State.Provider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\"This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA\");\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\"New content is available and will be used when all tabs for this page are closed. See https://bit.ly/CRA-PWA.\");\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\"No internet connection found. App is running in offline mode.\");\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import { CssBaseline } from \"@material-ui/core\";\nimport { ThemeProvider as MUIThemeProvider, StylesProvider } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./Components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { MainTheme } from \"./Components/Styled/Theme\";\n\nReactDOM.render(\n    <StylesProvider injectFirst>\n        <ThemeProvider theme={MainTheme}>\n            <MUIThemeProvider theme={MainTheme}>\n                <CssBaseline />\n                <App />\n            </MUIThemeProvider>\n        </ThemeProvider>\n    </StylesProvider>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}