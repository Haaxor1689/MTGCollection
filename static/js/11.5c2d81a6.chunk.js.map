{"version":3,"sources":["Components/Styled/SymbolIcon.tsx","Components/Styled/SymbolTypography.tsx","Utility/useThunk.ts","Utility/Assert.ts","Utility/useCardAction.ts","Components/Styled/IncrementNumber.tsx","Components/Previews/CompressedCard.tsx","Components/Styled/IndentedTypography.tsx","Components/Previews/CompressedCollection.tsx","Components/Previews/ActionButtons/WishlistButton.tsx","Components/Previews/ActionButtons/ChangeSectionButton.tsx","Components/Previews/ActionButtons/DeleteButton.tsx","Assets/scryfallLogo.svg","Components/Previews/ActionButtons/OpenScryfallButton.tsx","Components/Previews/ActionButtons/CardActions.tsx","Components/Previews/ImagesCard.tsx","Components/Previews/ImagesCollection.tsx","Components/Styled/SetIcon.tsx","Components/Previews/ListCard.tsx","Components/Previews/ListCollection.tsx","Components/Previews/CollectionPreview.tsx","Components/Previews/Common/PreviewStyleToggle.tsx","Components/Previews/Common/ShowGroupsToggle.tsx","Components/Previews/Common/SortToggle.tsx","Components/Applets/DeckPreview.tsx"],"names":["Symbol","styled","svg","map","v","size","css","SymbolIcon","symbol","React","useContext","AppState","state","useState","symbolObj","setSymbolObj","useEffect","symbolList","Object","values","find","s","loose_variant","dangerouslySetInnerHTML","__html","SymbolTypography","text","typographyProps","parsed","setParsed","match","m","i","key","Typography","useThunk","context","func","assert","condition","message","AssertionError","useCardActions","card","deckName","sectionName","dispatch","targetDeck","selectedDeck","isOnWishlist","undefined","decks","DeckName","Wishlist","cards","SectionName","Default","name","sections","keys","filter","updateCardQuantity","val","isNullOrUndefined","type","amount","openScryfallPage","scryfall_uri","window","open","openScryfallSetPage","scryfall_set_uri","toggleWishlist","wishlistTooltip","removeCard","changeSection","newSection","addToDeck","section","StyledAvatar","Avatar","attrs","p","className","theme","palette","primary","grey","spacing","Body","div","PxFromAvatarSize","Arrows","IconButton","IncrementNumber","onChange","anchorEl","setAnchorEl","onIncrement","incr","e","stopPropagation","title","onClick","currentTarget","Popper","ClickAwayListener","onClickAway","CustomChip","Chip","CompressedCard","props","variant","label","deleteIcon","mana_cost","noWrap","avatar","onDelete","IndentedTypography","CompressedCollecion","sortBy","sortOrder","showGroups","Grid","container","direction","length","c","item","xs","zeroMinWidth","color","WishlistButton","actions","background","TooltipButton","ChangeSectionButton","setOpen","anchorRef","useRef","handleClose","event","current","contains","target","ref","prevOpen","disabled","role","transition","TransitionProps","placement","Grow","style","transformOrigin","Paper","elevation","MenuList","MenuItem","DeleteButton","_extends","assign","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","transform","fill","fillRule","cx","cy","r","d","_ref","svgRef","focusable","width","height","viewBox","ForwardRef","forwardRef","OpenScryfallButton","CardActions","Image","img","Actions","StyledIncrement","default","ImagesCard","src","Scry","getImage","ImagesCollecion","alignItems","sm","lg","xl","Set","rarity","SetIcon","set","setObj","setSetObj","setList","id","offset","stopColor","gradientTransform","icon_svg","StyledRow","TableRow","breakpoints","down","ActionsMenu","ListCard","actionsOpen","setActionsOpen","SetWidthCell","component","scope","align","NameCell","Link","href","TableCell","position","prev","CustomPaddingTable","Table","ListCollecion","aria-label","TableHead","TableBody","colSpan","desc","a","b","orderBy","getSorting","order","StableSort","array","cmp","stabilizedThis","el","index","sort","rarityOrder","GetSortFunction","CollectionPreview","passedProps","omit","renderCollection","PreviewStyleToggle","onToggle","ButtonGroup","Button","Tooltip","Error","IconForStyle","ShowGroupsToggle","show","setShow","SortToggle","setSortBy","setSortOrder","startIcon","by","selected","SectionRow","scrollable","ExportRow","FlexCol","AppletBackground","fade","paper","DeckPreview","useParams","decodeURIComponent","history","useHistory","deleteDeck","GoogleApi","deck","expanded","setExpanded","exportOpened","setExportOpened","setStyle","setShowGroups","Loading","previewUrl","alt","justify","getDeckName","push","RouteNames","Home","entries","cardList","Collection","files","isDirty","updateFile","fileContent","CollectionParser","deserialize","then","Dialog","onClose","aria-labelledby","fullWidth","maxWidth","DialogTitle","DialogContent","DialogContentText","copy","TextField","multiline","rows","value","InputProps","readOnly"],"mappings":"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","file":"static/js/11.5c2d81a6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { AppState } from \"../../State\";\r\nimport { ScryCardSymbol } from \"../../Utility/Scry/Types\";\r\nimport styled, { css } from \"./Theme\";\r\nimport { TypographyProps } from \"@material-ui/core/Typography\";\r\n\r\nconst sizeMap: [TypographyProps[\"variant\"], number][] = [\r\n    [\"h1\", 80],\r\n    [\"h2\", 51],\r\n    [\"h3\", 42],\r\n    [\"h4\", 30],\r\n    [\"h5\", 25],\r\n    [\"h6\", 20],\r\n    [\"subtitle1\", 16],\r\n    [\"subtitle2\", 14],\r\n    [\"body1\", 16],\r\n    [\"body2\", 14],\r\n    [\"caption\", 12],\r\n    [\"button\", 16],\r\n    [\"overline\", 14],\r\n];\r\n\r\nconst Symbol = styled.svg`\r\n    display: inline-block;\r\n    height: 16px;\r\n    width: 16px;\r\n    margin: 1px 1px -2px 1px;\r\n\r\n    ${sizeMap.map(\r\n        ([v, size]) => css`\r\n            .MuiTypography-${v} & {\r\n                height: ${size}px;\r\n                width: ${size}px;\r\n            }\r\n        `\r\n    )}\r\n`;\r\n\r\ntype Props = {\r\n    symbol: string;\r\n};\r\n\r\nconst SymbolIcon: React.FC<Props> = ({ symbol }) => {\r\n    const [state] = React.useContext(AppState);\r\n    const [symbolObj, setSymbolObj] = React.useState<ScryCardSymbol>();\r\n    React.useEffect(() => {\r\n        setSymbolObj(state.symbolList[symbol] ?? Object.values(state.symbolList).find(s => s.loose_variant === symbol));\r\n    }, [symbol, state.symbolList]);\r\n    return symbolObj ? <Symbol dangerouslySetInnerHTML={{ __html: symbolObj.svg }} /> : <>{symbol}</>;\r\n};\r\n\r\nexport default SymbolIcon;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { TypographyProps } from \"@material-ui/core/Typography\";\r\nimport SymbolIcon from \"./SymbolIcon\";\r\n\r\ntype Props = TypographyProps & {\r\n    text: string;\r\n};\r\n\r\nconst SymbolTypography: React.FC<Props> = ({ text, ...typographyProps }) => {\r\n    const [parsed, setParsed] = React.useState<JSX.Element[]>([]);\r\n    React.useEffect(() => {\r\n        setParsed((text.match(/({.*?})|([^{]+)/g) ?? []).map((m, i) => (m[0] === \"{\" ? <SymbolIcon key={i} symbol={m} /> : <span key={i}>{m}</span>)));\r\n    }, [text]);\r\n    return <Typography {...typographyProps}>{parsed}</Typography>;\r\n};\r\n\r\nexport default SymbolTypography;\r\n","import React from \"react\";\r\n\r\nexport const useThunk = <StateT, DispatchT, Func>(\r\n    context: React.Context<[StateT, React.Dispatch<DispatchT>]>,\r\n    func: (dispatch: React.Dispatch<DispatchT>, state: StateT) => Func\r\n) => {\r\n    const [state, dispatch] = React.useContext(context);\r\n    return func(dispatch, state);\r\n};\r\nexport default useThunk;\r\n","import { AssertionError } from \"assert\";\r\n\r\nfunction assert(condition: any, message: string): asserts condition {\r\n    if (!condition) {\r\n        throw new AssertionError({ message });\r\n    }\r\n}\r\nexport default assert;","import React from \"react\";\r\nimport { isNullOrUndefined } from \"util\";\r\nimport { CollectionCardProps } from \"../Components/Previews/CollectionPreview\";\r\nimport { AppState, DeckName, SectionName } from \"../State\";\r\nimport assert from \"./Assert\";\r\n\r\nconst useCardActions = ({ card, deckName, sectionName }: CollectionCardProps) => {\r\n    const [state, dispatch] = React.useContext(AppState);\r\n\r\n    const targetDeck = deckName ?? state.selectedDeck ?? null;\r\n    const isOnWishlist = () => state.decks[DeckName.Wishlist].cards[SectionName.Default][card.name] !== undefined;\r\n    const sections = (targetDeck ? Object.keys(state.decks[targetDeck].cards) : []).filter(s => s !== sectionName);\r\n    return {\r\n        updateCardQuantity: (val: number) => {\r\n            assert(!isNullOrUndefined(deckName), \"DeckName should not be empty if the preview actions are Deck\");\r\n            dispatch({\r\n                type: \"UpdateDeckCard\",\r\n                deckName,\r\n                sectionName: sectionName ?? SectionName.Default,\r\n                card: {\r\n                    ...card,\r\n                    amount: val,\r\n                },\r\n            });\r\n        },\r\n        openScryfallPage: () => card.scryfall_uri && window.open(card.scryfall_uri, \"_blank\"),\r\n        openScryfallSetPage: () => card.scryfall_set_uri && window.open(card.scryfall_set_uri, \"_blank\"),\r\n        isOnWishlist,\r\n        toggleWishlist: () =>\r\n            isOnWishlist()\r\n                ? dispatch({\r\n                    type: \"UpdateDeckCard\",\r\n                    deckName: DeckName.Wishlist,\r\n                    sectionName: SectionName.Default,\r\n                    card: {\r\n                        ...card,\r\n                        amount: 0,\r\n                    },\r\n                })\r\n                : dispatch({\r\n                    type: \"UpdateDeckCard\",\r\n                    deckName: DeckName.Wishlist,\r\n                    sectionName: SectionName.Default,\r\n                    card: {\r\n                        ...card,\r\n                        amount: 1,\r\n                    },\r\n                }),\r\n        wishlistTooltip: () => (isOnWishlist() ? \"Remove from wishlist\" : \"Add to wishlist\"),\r\n        removeCard: () => {\r\n            assert(!isNullOrUndefined(deckName), \"DeckName should not be empty if the preview actions are Deck\");\r\n            dispatch({\r\n                type: \"UpdateDeckCard\",\r\n                deckName,\r\n                sectionName: sectionName ?? SectionName.Default,\r\n                card: {\r\n                    ...card,\r\n                    amount: 0,\r\n                },\r\n            });\r\n        },\r\n        sections,\r\n        changeSection: (newSection: string) => {\r\n            assert(!isNullOrUndefined(deckName), \"DeckName should not be empty if the preview actions are Deck\");\r\n            dispatch({\r\n                type: \"UpdateDeckCard\",\r\n                deckName,\r\n                sectionName: sectionName ?? SectionName.Default,\r\n                card: {\r\n                    ...card,\r\n                    amount: 0,\r\n                },\r\n            });\r\n            dispatch({\r\n                type: \"UpdateDeckCard\",\r\n                deckName,\r\n                sectionName: newSection,\r\n                card: {\r\n                    ...card,\r\n                    amount: card.amount,\r\n                },\r\n            });\r\n        },\r\n        addToDeck: (section: string = SectionName.Default) => {\r\n            assert(!isNullOrUndefined(targetDeck), \"TargetDeck should not be empty if the preview actions are SearchDeck\");\r\n            dispatch({\r\n                type: \"UpdateDeckCard\",\r\n                deckName: targetDeck,\r\n                sectionName: section,\r\n                card: {\r\n                    ...card,\r\n                    amount: 1,\r\n                },\r\n            });\r\n        }\r\n    } as const;\r\n};\r\nexport default useCardActions;\r\n","import { Avatar, ClickAwayListener, IconButton, Popper } from \"@material-ui/core\";\r\nimport { AvatarProps } from \"@material-ui/core/Avatar\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\r\nimport React from \"react\";\r\nimport styled, { css } from \"./Theme\";\r\nimport { PxFromAvatarSize } from \"../../Utility\";\r\n\r\ntype StyledAvatarProps = { size: Props[\"size\"]; open: boolean } & AvatarProps;\r\n\r\nconst StyledAvatar = styled(Avatar).attrs<StyledAvatarProps>(p => ({\r\n    className: p.size === \"chip\" ? p.className + \" MuiChip-avatar MuiChip-avatarSmall\" : p.className,\r\n}))<StyledAvatarProps>`\r\n    cursor: pointer;\r\n    color: ${p => p.theme.palette.text.primary};\r\n\r\n    ${p =>\r\n        p.open &&\r\n        css`\r\n            background-color: ${p.theme.palette.grey[500]};\r\n        `}\r\n\r\n    ${p =>\r\n        p.size === \"inline\" &&\r\n        css`\r\n            width: ${p.theme.spacing(3)}px;\r\n            height: ${p.theme.spacing(3)}px;\r\n            font-size: 0.875rem;\r\n        `}\r\n\r\n    ${p =>\r\n        !p.size &&\r\n        css`\r\n            width: 48px;\r\n            height: 48px;\r\n            font-size: 2rem;\r\n        `}\r\n`;\r\n\r\nconst Body = styled.div<{ size: Props[\"size\"] }>`\r\n    display: flex;\r\n    flex-direction: column;\r\n    transform: translate(calc(50% + ${p => PxFromAvatarSize(p.size)}px), calc(-100% + ${p => PxFromAvatarSize(p.size)}px));\r\n    background-color: ${p => p.theme.palette.grey[600]};\r\n    border-radius: ${p => PxFromAvatarSize(p.size)}px;\r\n`;\r\n\r\nconst Arrows = styled(IconButton)<{ s: Props[\"size\"] }>`\r\n    height: ${p => (!p.s ? 48 : p.s === \"chip\" ? 18 : 24)}px;\r\n    width: ${p => (!p.s ? 48 : p.s === \"chip\" ? 18 : 24)}px;\r\n    padding: 0;\r\n    ${p =>\r\n        p.s === \"chip\" &&\r\n        css`\r\n            & .MuiIconButton-label {\r\n                margin-top: -3px;\r\n            }\r\n        `}\r\n    &:first-of-type {\r\n        border-bottom-left-radius: 0;\r\n        border-bottom-right-radius: 0;\r\n    }\r\n    &:last-of-type {\r\n        border-top-left-radius: 0;\r\n        border-top-right-radius: 0;\r\n    }\r\n`;\r\n\r\ntype Props = {\r\n    val: number;\r\n    onChange: (val: number) => void;\r\n    size?: \"chip\" | \"inline\";\r\n    className?: string;\r\n};\r\n\r\nconst IncrementNumber: React.FC<Props> = ({ val, onChange, size, className }) => {\r\n    const [anchorEl, setAnchorEl] = React.useState<HTMLDivElement | null>(null);\r\n    const open = !!anchorEl;\r\n\r\n    const handleClick = (e: React.MouseEvent<HTMLDivElement>) => {\r\n        setAnchorEl(!anchorEl ? e.currentTarget : null);\r\n        e.stopPropagation();\r\n    };\r\n\r\n    const handleClose = () => setAnchorEl(null);\r\n\r\n    const onIncrement = (incr: number) => (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        e.stopPropagation();\r\n        onChange(val + incr);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <StyledAvatar className={className} title=\"\" size={size} onClick={handleClick} open={open}>\r\n                {val}\r\n            </StyledAvatar>\r\n            <Popper open={open} anchorEl={anchorEl}>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                    <Body size={size}>\r\n                        <Arrows s={size} onClick={onIncrement(1)}>\r\n                            <ArrowDropUpIcon />\r\n                        </Arrows>\r\n                        <Arrows s={size} onClick={onIncrement(-1)}>\r\n                            <ArrowDropDownIcon />\r\n                        </Arrows>\r\n                    </Body>\r\n                </ClickAwayListener>\r\n            </Popper>\r\n        </>\r\n    );\r\n};\r\nexport default IncrementNumber;\r\n","import { Chip } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport useCardActions from \"../../Utility/useCardAction\";\r\nimport IncrementNumber from \"../Styled/IncrementNumber\";\r\nimport styled from \"../Styled/Theme\";\r\nimport SymbolTypography from \"../Styled/SymbolTypography\";\r\nimport { CollectionCardProps } from \"./CollectionPreview\";\r\n\r\nconst CustomChip = styled(Chip)`\r\n    width: 100%;\r\n\r\n    & .MuiChip-label {\r\n        flex: 1 1 auto;\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n    }\r\n\r\n    & .MuiChip-deleteIcon {\r\n        width: unset;\r\n        height: unset;\r\n        flex-shrink: 0;\r\n        margin-left: ${p => p.theme.spacing(1)}px;\r\n        margin-top: 1px;\r\n    }\r\n`;\r\n\r\nconst CompressedCard: React.FC<CollectionCardProps> = props => {\r\n    const { updateCardQuantity, openScryfallPage } = useCardActions(props);\r\n    const { card } = props;\r\n    return (\r\n        <CustomChip\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            label={card.name}\r\n            deleteIcon={<SymbolTypography text={card.mana_cost ?? \"\"} noWrap />}\r\n            avatar={<IncrementNumber size=\"chip\" val={card.amount} onChange={updateCardQuantity} />}\r\n            onDelete={openScryfallPage}\r\n            onClick={openScryfallPage}\r\n            title=\"Open on scryfall\"\r\n        />\r\n    );\r\n};\r\nexport default CompressedCard;\r\n","import styled from \"./Theme\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst IndentedTypography = styled(Typography)`\r\n    text-indent: ${p => p.theme.spacing(1)}px;\r\n`;\r\nexport default IndentedTypography;\r\n","import { Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { CollectionPreviewProps } from \"./CollectionPreview\";\r\nimport CompressedCard from \"./CompressedCard\";\r\nimport IndentedTypography from \"../Styled/IndentedTypography\";\r\n\r\nconst CompressedCollecion: React.FC<CollectionPreviewProps> = ({ cards, sortBy, sortOrder, showGroups, ...props }) => {\r\n    return (\r\n        <Grid container direction=\"column\">\r\n            {cards.length >= 1 ? (\r\n                cards.map(c => (\r\n                    <Grid item key={c.name} xs zeroMinWidth>\r\n                        <CompressedCard card={c} {...props} />\r\n                    </Grid>\r\n                ))\r\n            ) : (\r\n                <Grid item xs={12}>\r\n                    <IndentedTypography color=\"textSecondary\" variant=\"subtitle2\">Empty</IndentedTypography>\r\n                </Grid>\r\n            )}\r\n        </Grid>\r\n    );\r\n};\r\nexport default CompressedCollecion;\r\n","import { IconButtonProps } from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport React from \"react\";\r\nimport useCardActions from \"../../../Utility/useCardAction\";\r\nimport TooltipButton from \"../../Styled/TooltipButton\";\r\n\r\ntype Props = {\r\n    actions: ReturnType<typeof useCardActions>;\r\n    size?: IconButtonProps[\"size\"];\r\n    background?: \"primary\" | \"secondary\";\r\n};\r\n\r\nconst WishlistButton: React.FC<Props> = ({ actions, size, background }) => {\r\n    return (\r\n        <TooltipButton title={actions.wishlistTooltip()} onClick={actions.toggleWishlist} background={background} size={size}>\r\n            {actions.isOnWishlist() ? <FavoriteIcon /> : <FavoriteBorderIcon />}\r\n        </TooltipButton>\r\n    );\r\n};\r\nexport default WishlistButton;\r\n","import { IconButtonProps } from \"@material-ui/core/IconButton\";\r\nimport React from \"react\";\r\nimport useCardActions from \"../../../Utility/useCardAction\";\r\nimport SwapVertIcon from \"@material-ui/icons/SwapVert\";\r\nimport TooltipButton from \"../../Styled/TooltipButton\";\r\nimport { ClickAwayListener, Grow, MenuItem, MenuList, Paper, Popper } from \"@material-ui/core\";\r\nimport { SectionName } from \"../../../State\";\r\n\r\ntype Props = {\r\n    actions: ReturnType<typeof useCardActions>;\r\n    size?: IconButtonProps[\"size\"];\r\n    background?: \"primary\" | \"secondary\";\r\n};\r\n\r\nconst ChangeSectionButton: React.FC<Props> = ({ actions, size, background }) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef<HTMLDivElement>(null);\r\n\r\n    const handleToggle = () => setOpen(prevOpen => !prevOpen);\r\n    const handleClose = (event: React.MouseEvent<Document, MouseEvent>) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <span ref={anchorRef}>\r\n                <TooltipButton title=\"Change section\" onClick={handleToggle} disabled={actions.sections.length <= 0} background={background} size={size}>\r\n                    <SwapVertIcon />\r\n                </TooltipButton>\r\n            </span>\r\n            <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition>\r\n                {({ TransitionProps, placement }) => (\r\n                    <Grow\r\n                        {...TransitionProps}\r\n                        style={{\r\n                            transformOrigin: placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n                        }}\r\n                    >\r\n                        <Paper elevation={5}>\r\n                            <ClickAwayListener onClickAway={handleClose}>\r\n                                <MenuList>\r\n                                    {(actions.sections).map(s => (\r\n                                        <MenuItem\r\n                                            key={s}\r\n                                            onClick={() => actions.changeSection(s)}\r\n                                        >\r\n                                            {s === SectionName.Default ? \"Default\" : s}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </MenuList>\r\n                            </ClickAwayListener>\r\n                        </Paper>\r\n                    </Grow>\r\n                )}\r\n            </Popper>\r\n        </>\r\n    );\r\n};\r\nexport default ChangeSectionButton;\r\n","import { IconButtonProps } from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport React from \"react\";\r\nimport useCardActions from \"../../../Utility/useCardAction\";\r\nimport TooltipButton from \"../../Styled/TooltipButton\";\r\n\r\ntype Props = {\r\n    actions: ReturnType<typeof useCardActions>;\r\n    size?: IconButtonProps[\"size\"];\r\n    background?: \"primary\" | \"secondary\";\r\n};\r\n\r\nconst DeleteButton: React.FC<Props> = ({ actions, size, background }) => {\r\n    return (\r\n        <TooltipButton title=\"Remove card\" onClick={actions.removeCard} background={background} size={size}>\r\n            <DeleteIcon />\r\n        </TooltipButton>\r\n    );\r\n};\r\nexport default DeleteButton;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(-60 -58)\",\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, React.createElement(\"circle\", {\n  cx: 290,\n  cy: 288,\n  r: 230\n}), React.createElement(\"path\", {\n  d: \"M343.058 89.985c-109.36-29.303-221.77 35.597-251.073 144.957-29.303 109.36 35.597 221.77 144.957 251.073 109.36 29.303 221.77-35.597 251.073-144.957 29.303-109.36-35.597-221.77-144.957-251.073zM256.342 451.95l.276.71c1.172 3.187 3.562 5.776 6.644 7.2 3.082 1.422 6.603 1.562 9.788.387l48.355-17.774c3.184-1.175 6.706-1.035 9.787.388 3.082 1.424 5.472 4.013 6.644 7.2l.19.56c2.105 5.852-.304 12.37-5.71 15.448-93.23 22.17-187.912-30.724-217.912-121.736s14.67-189.84 102.81-227.453c5.144.502 9.544 3.91 11.32 8.762 2.578 6.977 10.317 10.55 17.3 7.99l15.73-5.803c3.186-1.176 6.707-1.036 9.79.387 3.08 1.423 5.47 4.012 6.643 7.198l.19.56c1.174 3.185 1.034 6.706-.39 9.788-1.422 3.082-4.01 5.472-7.197 6.644l-109.46 40.366c-3.187 1.172-5.777 3.562-7.2 6.644-1.422 3.082-1.562 6.603-.388 9.788l.19.56c1.172 3.186 3.562 5.775 6.643 7.198 3.082 1.423 6.603 1.563 9.788.388l80.06-29.483c3.184-1.174 6.705-1.034 9.787.388 3.082 1.423 5.472 4.013 6.644 7.2l.19.56c1.173 3.184 1.034 6.705-.39 9.787-1.422 3.08-4.01 5.47-7.197 6.643l-127.814 47.08c-3.186 1.17-5.776 3.56-7.2 6.643-1.42 3.082-1.56 6.603-.387 9.788l.19.56c1.172 3.186 3.562 5.775 6.643 7.198 3.08 1.423 6.602 1.563 9.787.388L297.72 226.4c3.184-1.175 6.705-1.036 9.787.387 3.082 1.423 5.472 4.012 6.644 7.198l.467 1.27c1.174 3.186 1.035 6.707-.388 9.79-1.424 3.08-4.014 5.47-7.2 6.643l-113 41.54c-3.187 1.172-5.777 3.562-7.2 6.644-1.422 3.08-1.562 6.603-.387 9.787l.19.56c1.17 3.185 3.56 5.775 6.643 7.198 3.08 1.423 6.603 1.562 9.787.388l51.798-19.06c3.186-1.174 6.707-1.034 9.79.39 3.08 1.422 5.47 4.01 6.643 7.197l.19.56c1.174 3.185 1.034 6.706-.39 9.788-1.422 3.083-4.01 5.473-7.197 6.644l-89.085 32.754c-3.185 1.17-5.774 3.56-7.197 6.643-1.423 3.083-1.562 6.604-.388 9.79l.19.56c1.17 3.185 3.56 5.775 6.643 7.197 3.082 1.423 6.603 1.563 9.788.388L304.563 336.3c3.185-1.173 6.706-1.034 9.788.39 3.083 1.422 5.473 4.01 6.644 7.197l.19.56c1.174 3.185 1.035 6.706-.388 9.788s-4.013 5.472-7.198 6.644l-74.954 27.54c-3.186 1.17-5.776 3.56-7.2 6.643-1.422 3.082-1.56 6.603-.387 9.788l.19.56c1.172 3.187 3.562 5.777 6.643 7.2 3.082 1.422 6.603 1.562 9.788.387l94.147-34.537c3.185-1.175 6.706-1.035 9.788.388s5.472 4.012 6.644 7.198c2.428 6.58-.893 13.887-7.447 16.384l-86.903 33.168c-3.18 1.18-5.764 3.574-7.18 6.658-1.414 3.083-1.547 6.603-.367 9.784l-.018-.09z\",\n  fill: \"#FFF\"\n}));\n\nvar SvgScryfallLogo = function SvgScryfallLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    className: \"\",\n    width: 460,\n    height: 460,\n    viewBox: \"0 0 460 460\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgScryfallLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/scryfallLogo.89ac5845.svg\";\nexport { ForwardRef as ReactComponent };","import { IconButtonProps } from \"@material-ui/core/IconButton\";\r\nimport React from \"react\";\r\nimport { ReactComponent as ScryfallIcon } from \"../../../Assets/scryfallLogo.svg\";\r\nimport useCardActions from \"../../../Utility/useCardAction\";\r\nimport TooltipButton from \"../../Styled/TooltipButton\";\r\n\r\n\r\ntype Props = {\r\n    actions: ReturnType<typeof useCardActions>;\r\n    size?: IconButtonProps[\"size\"];\r\n    background?: \"primary\" | \"secondary\";\r\n};\r\n\r\nconst OpenScryfallButton: React.FC<Props> = ({ actions, size, background }) => {\r\n    return (\r\n        <TooltipButton title=\"Open on scryfall\" onClick={actions.openScryfallPage} background={background} size={size}>\r\n            <ScryfallIcon width=\"24\" height=\"24\" />\r\n        </TooltipButton>\r\n    );\r\n};\r\nexport default OpenScryfallButton;\r\n","import React from \"react\";\r\nimport { IconButtonProps } from \"@material-ui/core/IconButton\";\r\nimport { CollectionCardProps } from \"../CollectionPreview\";\r\nimport useCardActions from \"../../../Utility/useCardAction\";\r\nimport WishlistButton from \"./WishlistButton\";\r\nimport ChangeSectionButton from \"./ChangeSectionButton\";\r\nimport DeleteButton from \"./DeleteButton\";\r\nimport OpenScryfallButton from \"./OpenScryfallButton\";\r\n\r\ntype Props = {\r\n    size?: IconButtonProps[\"size\"];\r\n    className?: string;\r\n} & CollectionCardProps;\r\n\r\nconst CardActions: React.FC<Props> = ({ size, className, ...props}) => {\r\n    const actions = useCardActions(props);\r\n    return (\r\n        <div className={className}>\r\n            <WishlistButton actions={actions} size={size} />\r\n            <ChangeSectionButton actions={actions} size={size} />\r\n            <DeleteButton actions={actions} size={size} />\r\n            <OpenScryfallButton actions={actions} size={size} />\r\n        </div>\r\n    );\r\n};\r\nexport default CardActions;\r\n","import React from \"react\";\r\nimport { isNullOrUndefined } from \"util\";\r\nimport { PxFromAvatarSize } from \"../../Utility\";\r\nimport Scry from \"../../Utility/Scry\";\r\nimport useCardActions from \"../../Utility/useCardAction\";\r\nimport IncrementNumber from \"../Styled/IncrementNumber\";\r\nimport styled from \"../Styled/Theme\";\r\nimport CardActions from \"./ActionButtons/CardActions\";\r\nimport { CollectionCardProps } from \"./CollectionPreview\";\r\n\r\nconst Body = styled.div`\r\n    padding-bottom: 139.344262295%;\r\n    width: 100%;\r\n    height: 0;\r\n    position: relative;\r\n`;\r\n\r\nconst Image = styled.img`\r\n    border-radius: 4.75% / 3.5%;\r\n    background-image: repeating-linear-gradient(-55deg, #ddd, #ddd 5px, #ccc 5px, #ccc 10px);\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst Actions = styled(CardActions)`\r\n    position: absolute;\r\n    top: ${p => p.theme.spacing(1)}px;\r\n    right: ${p => p.theme.spacing(1)}px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: ${p => p.theme.palette.grey[600]};\r\n    border-radius: ${PxFromAvatarSize(undefined)}px;\r\n\r\n    display: none;\r\n    ${Body}:hover & {\r\n        display: flex;\r\n    }\r\n`;\r\n\r\nconst StyledIncrement = styled(IncrementNumber)`\r\n    position: absolute;\r\n    top: ${p => p.theme.spacing(7)}px;\r\n    left: ${p => p.theme.spacing(3)}px;\r\n    background-color: ${p => p.theme.palette.background.default};\r\n`;\r\n\r\nconst ImagesCard: React.FC<CollectionCardProps> = props => {\r\n    const actions = useCardActions(props);\r\n    const { card } = props;\r\n\r\n    return (\r\n        <Body>\r\n            <Image src={Scry.getImage(card, \"normal\") ?? \"\"} title={card.name} />\r\n            {!isNullOrUndefined(card.amount) && <StyledIncrement val={card.amount} onChange={actions.updateCardQuantity} />}\r\n            <Actions {...props} />\r\n        </Body>\r\n    );\r\n};\r\nexport default ImagesCard;\r\n","import { Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport IndentedTypography from \"../Styled/IndentedTypography\";\r\nimport { CollectionPreviewProps } from \"./CollectionPreview\";\r\nimport ImagesCard from \"./ImagesCard\";\r\n\r\nconst ImagesCollecion: React.FC<CollectionPreviewProps> = ({ cards, sortBy, sortOrder, showGroups, ...props }) => {\r\n    return (\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n            {cards.length >= 1 ? (\r\n                cards.map(c => (\r\n                    <Grid key={c.name} item xs={12} sm={6} lg={4} xl={3}>\r\n                        <ImagesCard card={c} {...props} />\r\n                    </Grid>\r\n                ))\r\n            ) : (\r\n                <Grid item xs={12}>\r\n                    <IndentedTypography color=\"textSecondary\">Empty</IndentedTypography>\r\n                </Grid>\r\n            )}\r\n        </Grid>\r\n    );\r\n};\r\nexport default ImagesCollecion;\r\n","import React from \"react\";\r\nimport { AppState } from \"../../State\";\r\nimport { ScryCardRarity, ScrySet } from \"../../Utility/Scry/Types\";\r\nimport styled from \"./Theme\";\r\n\r\nconst Set = styled.svg<{ rarity: ScryCardRarity }>`\r\n    width: 25px;\r\n    height: 20px;\r\n    fill: url(#rarity-${p => p.rarity});\r\n`;\r\n\r\ntype Props = {\r\n    set: string;\r\n    rarity: ScryCardRarity;\r\n};\r\n\r\nconst SetIcon: React.FC<Props> = ({ set, rarity }) => {\r\n    const [state] = React.useContext(AppState);\r\n    const [setObj, setSetObj] = React.useState<ScrySet>();\r\n    React.useEffect(() => {\r\n        setSetObj(state.setList[set]);\r\n    }, [set, state.setList]);\r\n    return setObj ? (\r\n        <Set rarity={rarity}>\r\n            <defs>\r\n                <linearGradient id=\"rarity-common\">\r\n                    <stop offset=\"0%\" stopColor=\"#000\" />\r\n                </linearGradient>\r\n                <linearGradient id=\"rarity-uncommon\" gradientTransform=\"rotate(90)\">\r\n                    <stop offset=\"0%\" stopColor=\"#4d565a\" />\r\n                    <stop offset=\"50%\" stopColor=\"#a0c3d3\" />\r\n                    <stop offset=\"100%\" stopColor=\"#4d565a\" />\r\n                </linearGradient>\r\n                <linearGradient id=\"rarity-rare\" gradientTransform=\"rotate(90)\">\r\n                    <stop offset=\"0%\" stopColor=\"#85723e\" />\r\n                    <stop offset=\"50%\" stopColor=\"#d4b975\" />\r\n                    <stop offset=\"100%\" stopColor=\"#85723e\" />\r\n                </linearGradient>\r\n                <linearGradient id=\"rarity-mythic\" gradientTransform=\"rotate(90)\">\r\n                    <stop offset=\"0%\" stopColor=\"#b02911\" />\r\n                    <stop offset=\"50%\" stopColor=\"#e87f03\" />\r\n                    <stop offset=\"100%\" stopColor=\"#b02911\" />\r\n                </linearGradient>\r\n            </defs>\r\n            <svg dangerouslySetInnerHTML={{ __html: setObj.icon_svg }} />\r\n        </Set>\r\n    ) : (\r\n        <>{set}</>\r\n    );\r\n};\r\n\r\nexport default SetIcon;\r\n","import { Link, TableCell, TableRow } from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport React from \"react\";\r\nimport { isNullOrUndefined } from \"util\";\r\nimport { PxFromAvatarSize } from \"../../Utility\";\r\nimport useCardActions from \"../../Utility/useCardAction\";\r\nimport IncrementNumber from \"../Styled/IncrementNumber\";\r\nimport SetIcon from \"../Styled/SetIcon\";\r\nimport SymbolTypography from \"../Styled/SymbolTypography\";\r\nimport styled, { css } from \"../Styled/Theme\";\r\nimport TooltipButton from \"../Styled/TooltipButton\";\r\nimport CardActions from \"./ActionButtons/CardActions\";\r\nimport { CollectionCardProps } from \"./CollectionPreview\";\r\nimport { NameCell, SetWidthCell } from \"./ListCollection\";\r\n\r\nconst StyledRow = styled(TableRow)`\r\n    &:hover {\r\n        background-image: linear-gradient(\r\n            90deg,\r\n            rgba(0, 0, 0, 0),\r\n            ${p => p.theme.palette.background.default} 10%,\r\n            ${p => p.theme.palette.background.default} 90%,\r\n            rgba(0, 0, 0, 0)\r\n        );\r\n    }\r\n`;\r\n\r\nconst Actions = styled(CardActions)<{ open: boolean }>`\r\n    white-space: nowrap;\r\n\r\n    & > *:not(:last-child) {\r\n        margin-right: ${p => p.theme.spacing(0.5)}px;\r\n    }\r\n\r\n    ${p => p.theme.breakpoints.down(\"xs\")} {\r\n        & {\r\n            ${p =>\r\n        !p.open &&\r\n                css`\r\n                    display: none;\r\n                `}\r\n\r\n            ${p =>\r\n        p.open &&\r\n                css`\r\n                    background-color: ${p => p.theme.palette.grey[600]};\r\n                    border-radius: ${p => PxFromAvatarSize(\"inline\")}px;\r\n                    position: absolute;\r\n                    transform: translateX(calc(-100% - 4px));\r\n                `}\r\n        }\r\n    }\r\n`;\r\n\r\nconst ActionsMenu = styled.div`\r\n    display: none;\r\n    ${p => p.theme.breakpoints.down(\"xs\")} {\r\n        & {\r\n            display: initial;\r\n        }\r\n    }\r\n`;\r\n\r\nconst ListCard: React.FC<CollectionCardProps> = props => {\r\n    const actions = useCardActions(props);\r\n    const { card } = props;\r\n\r\n    const [actionsOpen, setActionsOpen] = React.useState(false);\r\n    const toggleActionsOpen = () => setActionsOpen(prev => !prev);\r\n\r\n    return (\r\n        <StyledRow>\r\n            <SetWidthCell width=\"40px\" component=\"th\" scope=\"row\" align=\"center\">\r\n                {!isNullOrUndefined(card.amount) ? <IncrementNumber size=\"inline\" val={card.amount} onChange={actions.updateCardQuantity} /> : \"-\"}\r\n            </SetWidthCell>\r\n            <NameCell>{card.name}</NameCell>\r\n            <SetWidthCell width=\"40px\" align=\"center\">\r\n                <Link href=\"#\" onClick={actions.openScryfallSetPage} color=\"inherit\" title=\"Open set on scryfall\">\r\n                    <SetIcon set={card.set} rarity={card.rarity} />\r\n                </Link>\r\n            </SetWidthCell>\r\n            <TableCell>\r\n                <SymbolTypography text={card.mana_cost ?? \"\"} noWrap />\r\n            </TableCell>\r\n            <TableCell style={{ position: \"relative\" }}>\r\n                <Actions {...props} open={actionsOpen} size=\"small\" />\r\n                <ActionsMenu>\r\n                    <TooltipButton title=\"Actions\" onClick={toggleActionsOpen} size=\"small\">\r\n                        <MenuIcon />\r\n                    </TooltipButton>\r\n                </ActionsMenu>\r\n            </TableCell>\r\n        </StyledRow>\r\n    );\r\n};\r\nexport default ListCard;\r\n","import { Table, TableBody, TableCell, TableHead, TableRow } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport IndentedTypography from \"../Styled/IndentedTypography\";\r\nimport styled from \"../Styled/Theme\";\r\nimport { CollectionPreviewProps } from \"./CollectionPreview\";\r\nimport ListCard from \"./ListCard\";\r\n\r\nconst CustomPaddingTable = styled(Table)`\r\n    width: 100%;\r\n    overflow-y: scroll;\r\n    & .MuiTableCell-sizeSmall {\r\n        padding: ${p => p.theme.spacing(0.25, 1)};\r\n    }\r\n`;\r\n\r\nexport const SetWidthCell = styled(TableCell).attrs<{ width: string }>(p => ({\r\n    width: p.width,\r\n}))<{ width: string }>``;\r\n\r\nexport const NameCell = styled(TableCell)`\r\n    width: 60%;\r\n    max-width: 120px;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst ListCollecion: React.FC<CollectionPreviewProps> = ({ cards, sortBy, sortOrder, showGroups, ...props }) => {\r\n    return (\r\n        <CustomPaddingTable size=\"small\" aria-label=\"card table\">\r\n            <TableHead>\r\n                <TableRow>\r\n                    <SetWidthCell width=\"40px\" align=\"center\">\r\n                        #\r\n                    </SetWidthCell>\r\n                    <NameCell>Name</NameCell>\r\n                    <SetWidthCell width=\"40px\" align=\"center\">\r\n                        Set\r\n                    </SetWidthCell>\r\n                    <TableCell>Cost</TableCell>\r\n                    <TableCell>Actions</TableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                {cards.length >= 1 ? (\r\n                    cards.map(c => <ListCard key={c.name} card={c} {...props} />)\r\n                ) : (\r\n                    <TableRow>\r\n                        <TableCell colSpan={6}>\r\n                            <IndentedTypography color=\"textSecondary\">Empty</IndentedTypography>\r\n                        </TableCell>\r\n                    </TableRow>\r\n                )}\r\n            </TableBody>\r\n        </CustomPaddingTable>\r\n    );\r\n};\r\nexport default ListCollecion;\r\n","import { Typography } from \"@material-ui/core\";\r\nimport omit from \"lodash-es/omit\";\r\nimport React from \"react\";\r\nimport { DeckCard, SectionName } from \"../../State\";\r\nimport { ScryCard } from \"../../Utility/Scry/Types\";\r\nimport CompressedCollecion from \"./CompressedCollection\";\r\nimport ImagesCollecion from \"./ImagesCollection\";\r\nimport ListCollecion from \"./ListCollection\";\r\n\r\nexport type PreviewStyle = \"Standard\" | \"List\" | \"Images\" | \"Compressed\";\r\nexport type PreviewActions = \"SearchDeck\" | \"SearchWishlist\" | \"Deck\";\r\nexport type SortByOptions = \"Name\" | \"Cmc\" | \"Type\" | \"Rarity\";\r\nexport type SortOrderOptions = \"Asc\" | \"Desc\";\r\n\r\nexport type CollectionPreviewProps = {\r\n    cards: (DeckCard & ScryCard)[];\r\n    actions: PreviewActions;\r\n    sortBy: SortByOptions;\r\n    sortOrder: SortOrderOptions;\r\n    showGroups: boolean;\r\n    deckName?: string;\r\n    sectionName?: string;\r\n};\r\n\r\nexport type CollectionCardProps = {\r\n    card: DeckCard & ScryCard;\r\n    actions: PreviewActions;\r\n    deckName?: string;\r\n    sectionName?: string;\r\n};\r\n\r\nconst desc = <T extends object>(a: T, b: T, orderBy: keyof T, func: <U extends any>(v: U) => U | number) => {\r\n    if (func(b[orderBy]) < func(a[orderBy])) {\r\n        return -1;\r\n    }\r\n    if (func(b[orderBy]) > func(a[orderBy])) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n};\r\n\r\nconst getSorting = <T extends object>(\r\n    order: SortOrderOptions,\r\n    orderBy: keyof T,\r\n    func: <U extends any>(v: U) => U | number = v => v\r\n): ((a: T, b: T) => number) => {\r\n    return order === \"Desc\" ? (a, b) => desc(a, b, orderBy, func) : (a, b) => -desc(a, b, orderBy, func);\r\n};\r\n\r\nconst StableSort = <T extends object>(array: T[], cmp: (a: T, b: T) => number) => {\r\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = cmp(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map(el => el[0]);\r\n};\r\n\r\nconst rarityOrder = [\"common\", \"uncommon\", \"rare\", \"mythic\"] as const;\r\nconst GetSortFunction = (sortBy: SortByOptions, sortOrder: SortOrderOptions) => {\r\n    switch (sortBy) {\r\n        case \"Name\":\r\n            return getSorting<DeckCard & ScryCard>(sortOrder, \"name\");\r\n        case \"Cmc\":\r\n            return getSorting<DeckCard & ScryCard>(sortOrder, \"mana_cost\");\r\n        case \"Type\":\r\n            return getSorting<DeckCard & ScryCard>(sortOrder, \"type_line\");\r\n        case \"Rarity\":\r\n            return getSorting<DeckCard & ScryCard>(sortOrder, \"rarity\", v => rarityOrder.indexOf(v));\r\n    }\r\n};\r\n\r\ntype Props = CollectionPreviewProps & {\r\n    style: PreviewStyle;\r\n};\r\n\r\nconst CollectionPreview: React.FC<Props> = props => {\r\n    const renderCollection = () => {\r\n        const passedProps = {\r\n            ...omit(props, \"style\", \"cards\"),\r\n            cards: StableSort(props.cards, GetSortFunction(props.sortBy, props.sortOrder)),\r\n        };\r\n        switch (props.style) {\r\n            case \"List\":\r\n                return <ListCollecion {...passedProps} />;\r\n            case \"Images\":\r\n                return <ImagesCollecion {...passedProps} />;\r\n            case \"Compressed\":\r\n                return <CompressedCollecion {...passedProps} />;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {props.sectionName !== SectionName.Default && <Typography variant=\"h6\">{props.sectionName}</Typography>}\r\n            {renderCollection()}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CollectionPreview;\r\n","import { Button, ButtonGroup, Tooltip, Typography } from \"@material-ui/core\";\r\nimport ViewHeadlineIcon from \"@material-ui/icons/ViewHeadline\";\r\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\r\nimport ViewModuleIcon from \"@material-ui/icons/ViewModule\";\r\nimport React from \"react\";\r\nimport styled from \"../../Styled/Theme\";\r\nimport { PreviewStyle } from \"../CollectionPreview\";\r\n\r\nconst Body = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: ${p => p.theme.spacing(1)}px;\r\n\r\n    & .MuiTypography-root {\r\n        margin-right: ${p => p.theme.spacing(1)}px;\r\n    }\r\n\r\n    & .MuiButton-root {\r\n        padding-left: 0;\r\n        padding-right: 0;\r\n    }\r\n`;\r\n\r\nconst IconForStyle = (style: PreviewStyle) => {\r\n    switch (style) {\r\n        case \"Standard\":\r\n            return <ViewListIcon />;\r\n        case \"List\":\r\n            return <ViewHeadlineIcon />;\r\n        case \"Images\":\r\n            return <ViewModuleIcon />;\r\n    }\r\n    throw Error(`Style ${style} does not have an icon.`);\r\n};\r\n\r\ntype Props = {\r\n    style: PreviewStyle;\r\n    onToggle: (style: PreviewStyle) => void;\r\n};\r\n\r\nconst PreviewStyleToggle: React.FC<Props> = ({ style, onToggle }) => {\r\n    return (\r\n        <Body>\r\n            <Typography variant=\"caption\">Display:</Typography>\r\n            <ButtonGroup variant=\"outlined\" size=\"small\">\r\n                {([\"Standard\", \"List\", \"Images\"] as const).map(s => (\r\n                    <Button key={s} onClick={() => onToggle(s)} variant={style === s ? \"contained\" : undefined}>\r\n                        <Tooltip title={s}>{IconForStyle(s)}</Tooltip>\r\n                    </Button>\r\n                ))}\r\n            </ButtonGroup>\r\n        </Body>\r\n    );\r\n};\r\nexport default PreviewStyleToggle;\r\n","import ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport React from \"react\";\r\nimport TooltipButton from \"../../Styled/TooltipButton\";\r\nimport styled from \"../../Styled/Theme\";\r\n\r\nconst Body = styled.div`\r\n    margin-bottom: ${p => p.theme.spacing(1)}px;\r\n    margin-left: ${p => p.theme.spacing(1)}px;\r\n`;\r\n\r\ntype Props = {\r\n    show: boolean;\r\n    setShow: (show: boolean) => void;\r\n};\r\n\r\nconst ShowGroupsToggle: React.FC<Props> = ({ show, setShow }) => {\r\n    return (\r\n        <Body>\r\n            <TooltipButton size=\"small\" title={show ? \"Hide groups\" : \"Show groups\"} onClick={() => setShow(!show)}>\r\n                <ListAltIcon />\r\n            </TooltipButton>\r\n        </Body>\r\n    );\r\n};\r\nexport default ShowGroupsToggle;\r\n","import { Button, ClickAwayListener, Grow, MenuItem, MenuList, Paper, Popper } from \"@material-ui/core\";\r\nimport SortIcon from \"@material-ui/icons/Sort\";\r\nimport React from \"react\";\r\nimport styled from \"../../Styled/Theme\";\r\nimport { SortByOptions, SortOrderOptions } from \"../CollectionPreview\";\r\n\r\nconst Body = styled.div`\r\n    margin-bottom: ${p => p.theme.spacing(1)}px;\r\n`;\r\n\r\ntype Props = {\r\n    sortBy: SortByOptions;\r\n    setSortBy: (sortBy: SortByOptions) => void;\r\n    sortOrder: SortOrderOptions;\r\n    setSortOrder: (sortOrder: SortOrderOptions) => void;\r\n};\r\n\r\nconst SortToggle: React.FC<Props> = ({ sortBy, setSortBy, sortOrder, setSortOrder }) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef<HTMLButtonElement>(null);\r\n\r\n    const handleToggle = () => setOpen(prevOpen => !prevOpen);\r\n    const handleClose = (event: React.MouseEvent<Document, MouseEvent>) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Body>\r\n            <Button ref={anchorRef} size=\"small\" onClick={handleToggle} startIcon={<SortIcon />}>\r\n                Sort by\r\n            </Button>\r\n            <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition>\r\n                {({ TransitionProps, placement }) => (\r\n                    <Grow\r\n                        {...TransitionProps}\r\n                        style={{\r\n                            transformOrigin: placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n                        }}\r\n                    >\r\n                        <Paper elevation={5}>\r\n                            <ClickAwayListener onClickAway={handleClose}>\r\n                                <MenuList>\r\n                                    {([\r\n                                        [\"Name\", \"Asc\"],\r\n                                        [\"Name\", \"Desc\"],\r\n                                        [\"Cmc\", \"Asc\"],\r\n                                        [\"Cmc\", \"Desc\"],\r\n                                        [\"Type\", \"Asc\"],\r\n                                        [\"Type\", \"Desc\"],\r\n                                        [\"Rarity\", \"Asc\"],\r\n                                        [\"Rarity\", \"Desc\"],\r\n                                    ] as const).map(([by, order]) => (\r\n                                        <MenuItem\r\n                                            key={`${by} (${order})`}\r\n                                            selected={by === sortBy && order === sortOrder}\r\n                                            onClick={event => {\r\n                                                setSortBy(by);\r\n                                                setSortOrder(order);\r\n                                            }}\r\n                                        >\r\n                                            {`${by} (${order})`}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </MenuList>\r\n                            </ClickAwayListener>\r\n                        </Paper>\r\n                    </Grow>\r\n                )}\r\n            </Popper>\r\n        </Body>\r\n    );\r\n};\r\nexport default SortToggle;\r\n","import { Dialog, DialogContent, DialogContentText, DialogTitle, Grid, TextField } from \"@material-ui/core\";\nimport { fade } from \"@material-ui/core/styles\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport copy from \"clipboard-copy\";\nimport React from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { RouteNames } from \"../../Routes/Routes\";\nimport { AppState, DeckName, getDeckName } from \"../../State\";\nimport CollectionParser from \"../../Utility/CollectionParser\";\nimport GoogleApi from \"../../Utility/GoogleApi\";\nimport useThunk from \"../../Utility/useThunk\";\nimport Loading from \"../Loading\";\nimport CollectionPreview, { PreviewStyle, SortByOptions, SortOrderOptions } from \"../Previews/CollectionPreview\";\nimport PreviewStyleToggle from \"../Previews/Common/PreviewStyleToggle\";\nimport ShowGroupsToggle from \"../Previews/Common/ShowGroupsToggle\";\nimport SortToggle from \"../Previews/Common/SortToggle\";\nimport { AppletActions, AppletContent, FlexCol, Title } from \"../Styled/Grid\";\nimport { ClipboardIcon, CompressIcon, ExpandIcon } from \"../Styled/Icons\";\nimport styled, { css } from \"../Styled/Theme\";\nimport TooltipButton from \"../Styled/TooltipButton\";\n\nconst SectionRow = styled.div<{ scrollable: boolean }>`\n    margin-bottom: ${p => p.theme.spacing(2)}px;\n    ${p =>\n        p.scrollable &&\n        css`\n            width: 100%;\n            overflow-x: auto;\n            overflow-y: hidden;\n        `}\n`;\n\nconst ExportRow = styled(FlexCol)`\n    display: flex;\n    align-items: center;\n    margin-bottom: ${p => p.theme.spacing(1)}px;\n\n    & .MuiDialogContentText-root {\n        flex-grow: 1;\n        margin-bottom: 0;\n    }\n`;\n\nconst AppletBackground = styled.div`\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 75%;\n    z-index: 0;\n\n    & img {\n        width: 100%;\n    }\n\n    &:after {\n        content: \"\";\n        position: absolute;\n        top: 0;\n        right: 0;\n        width: 100%;\n        height: 100%;\n        display: inline-block;\n        background-image: radial-gradient(\n            ellipse at top 35% right 35%,\n            ${p => fade(p.theme.palette.background.paper, 0.8)} 0%,\n            ${p => p.theme.palette.background.paper} 70%\n        );\n    }\n`;\n\nconst Body = styled.div`\n    z-index: 0;\n    display: flex;\n    flex-direction: column;\n`;\n\ntype Params = {\n    deckName: string;\n};\n\nconst DeckPreview: React.FC = () => {\n    let { deckName } = useParams<Params>();\n    deckName = decodeURIComponent(deckName);\n\n    const history = useHistory();\n    const [state, dispatch] = React.useContext(AppState);\n    const deleteDeck = useThunk(AppState, GoogleApi.deleteDeck);\n    const deck = state.decks[deckName];\n\n    const [expanded, setExpanded] = React.useState(true);\n    const [exportOpened, setExportOpened] = React.useState(false);\n    const [style, setStyle] = React.useState<PreviewStyle>(\"List\");\n    const [sortBy, setSortBy] = React.useState<SortByOptions>(\"Cmc\");\n    const [sortOrder, setSortOrder] = React.useState<SortOrderOptions>(\"Asc\");\n    const [showGroups, setShowGroups] = React.useState(false);\n\n    React.useEffect(() => {\n        dispatch({ type: \"SelectDeck\", name: deckName });\n        // eslint-disable-next-line\n    }, [deckName, deck]);\n\n    const closePreview = () => history.push(RouteNames.Home);\n    const toggleExpanded = () => setExpanded(e => !e);\n    const onDeleteDeck = () => {\n        history.push(RouteNames.Home);\n        deleteDeck({ name: deckName, id: state.files[deckName] });\n    };\n    const onSaveChanges = () =>\n        GoogleApi.updateFile({ id: state.files[deckName], fileContent: CollectionParser.deserialize(deck.cards) }).then(() =>\n            dispatch({ type: \"UpdateDeck\", name: deckName, isDirty: false })\n        );\n    const onExportOpen = () => setExportOpened(true);\n    const onExportClose = () => setExportOpened(false);\n\n    if (deck === undefined) {\n        return <Loading />;\n    }\n\n    return (\n        <AppletContent>\n            <AppletBackground>\n                <img src={deck.previewUrl} alt=\"\" />\n            </AppletBackground>\n            <Body>\n                <Grid container direction=\"row\" justify=\"space-between\">\n                    <Grid item>\n                        <Title>{getDeckName(deck.name)}</Title>\n                    </Grid>\n                    <Grid item>\n                        <TooltipButton title={expanded ? \"Compress\" : \"Expand\"} size=\"small\" onClick={toggleExpanded}>\n                            {expanded ? <CompressIcon /> : <ExpandIcon />}\n                        </TooltipButton>\n                        <TooltipButton title=\"Close preview\" size=\"small\" onClick={closePreview}>\n                            <CloseIcon />\n                        </TooltipButton>\n                    </Grid>\n                </Grid>\n                <Grid container justify=\"space-between\">\n                    <SortToggle sortBy={sortBy} setSortBy={setSortBy} sortOrder={sortOrder} setSortOrder={setSortOrder} />\n                    <ShowGroupsToggle show={showGroups} setShow={setShowGroups} />\n                    <FlexCol />\n                    {expanded && <PreviewStyleToggle style={style} onToggle={setStyle} />}\n                </Grid>\n                <FlexCol>\n                    {Object.entries(deck.cards).map(([sectionName, cards]) => (\n                        <SectionRow key={sectionName} scrollable={expanded && style === \"List\"}>\n                            <CollectionPreview\n                                cards={Object.values(cards).map(c => ({ ...c, ...(state.cardList[c.name] ?? {}) })) as any}\n                                style={expanded ? style : \"Compressed\"}\n                                actions={deckName === DeckName.Wishlist ? \"SearchWishlist\" : \"Deck\"}\n                                sortBy={sortBy}\n                                sortOrder={sortOrder}\n                                showGroups={showGroups}\n                                deckName={deckName}\n                                sectionName={sectionName}\n                            />\n                        </SectionRow>\n                    ))}\n                </FlexCol>\n                <AppletActions>\n                    <TooltipButton title=\"Export deck\" onClick={onExportOpen}>\n                        <GetAppIcon />\n                    </TooltipButton>\n                    {deckName !== DeckName.Collection && deckName !== DeckName.Wishlist && (\n                        <TooltipButton title=\"Delete deck\" onClick={onDeleteDeck}>\n                            <DeleteIcon />\n                        </TooltipButton>\n                    )}\n                    {deck.isDirty && (\n                        <TooltipButton title=\"Save changes\" onClick={onSaveChanges} background=\"primary\">\n                            <SaveIcon />\n                        </TooltipButton>\n                    )}\n                </AppletActions>\n            </Body>\n            <Dialog open={exportOpened} onClose={onExportClose} aria-labelledby=\"export-deck-dialog\" fullWidth maxWidth=\"md\">\n                <DialogTitle id=\"import-deck-dialog\">Export</DialogTitle>\n                <DialogContent>\n                    <ExportRow>\n                        <DialogContentText>Copy exported text below.</DialogContentText>\n                        <TooltipButton title=\"Copy to clipboard\" onClick={() => copy(CollectionParser.deserialize(deck.cards))}>\n                            <ClipboardIcon />\n                        </TooltipButton>\n                    </ExportRow>\n                    <TextField\n                        label=\"Export\"\n                        multiline\n                        rows=\"15\"\n                        fullWidth\n                        variant=\"outlined\"\n                        value={CollectionParser.deserialize(deck.cards)}\n                        InputProps={{\n                            readOnly: true,\n                        }}\n                    />\n                </DialogContent>\n            </Dialog>\n        </AppletContent>\n    );\n};\n\nexport default DeckPreview;\n"],"sourceRoot":""}