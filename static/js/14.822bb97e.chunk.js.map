{"version":3,"sources":["Components/Styled/SymbolIcon.tsx","Components/Styled/SymbolTypography.tsx","State/Lifecounter/index.ts","State/Lifecounter/Reducers.ts","Utility/useDimensions.ts","Components/Applets/Lifecounter/PlayerCard.tsx","Components/Applets/Lifecounter/LifecounterDialog.tsx","Components/Applets/Lifecounter/PlayerSettings.tsx","Components/Applets/Lifecounter/index.tsx"],"names":["Symbol","styled","svg","map","v","size","css","SymbolIcon","symbol","React","useContext","AppState","state","useState","symbolObj","setSymbolObj","useEffect","symbolList","Object","values","find","s","loose_variant","dangerouslySetInnerHTML","__html","SymbolTypography","text","typographyProps","parsed","setParsed","match","m","i","key","Typography","instantiatePlayers","count","Array","from","_","name","life","counters","Counters","MakeTuple","initialState","players","startingLife","startingPlayer","LifecounterState","createContext","undefined","combinedReducer","combineReducers","action","type","length","slice","p","player","counter","omit","value","reducer","chainReducers","mapValues","useDimensions","ref","useRef","width","setWidth","height","setHeight","current","clientWidth","clientHeight","Wrapper","div","flexBasis","Body","Flex","theme","palette","background","paper","default","rotate","Math","abs","h","w","Counter","IncrementButton","Button","position","CounterBackground","DebouncedValue","IconButton","selected","tight","StartingPlayerOverlay","PlayerTransforms","2","3","4","5","6","PlayerCard","dispatch","activeCounter","setActiveCounter","debouncedValue","setDebouncedValue","activeValue","activeDiff","debouncedSet","useCallback","debounce","setCounter","isMobile","useMediaQuery","MainTheme","breakpoints","down","valueTextVariant","useMemo","flexGrow","flexDirection","justifyContent","Fade","in","onClick","py","alignItems","variant","align","color","mx","keys","c","OptionsButton","LifecounterDialog","open","setOpen","optionsOpen","setOptionsOpen","noSleep","NoSleep","disable","handleClose","handleOptionsClose","setStartingPlayer","round","random","restartGame","TooltipButton","title","enable","Dialog","fullScreen","onClose","flexWrap","SymbolButton","CenteredTextField","TextField","PlayerSettings","toggleCounter","my","pb","onChange","e","target","fullWidth","ButtonGroup","SliderLabel","SliderValue","Lifecounter","useReducer","playersCount","setPlayersCount","Provider","Slider","onChangeCommitted","step","min","max","marks","valueLabelDisplay"],"mappings":"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","file":"static/js/14.822bb97e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { AppState } from \"../../State\";\r\nimport { ScryCardSymbol } from \"../../Utility/Scry/Types\";\r\nimport styled, { css } from \"./Theme\";\r\nimport { TypographyProps } from \"@material-ui/core/Typography\";\r\n\r\nconst sizeMap: [TypographyProps[\"variant\"], number][] = [\r\n    [\"h1\", 80],\r\n    [\"h2\", 51],\r\n    [\"h3\", 42],\r\n    [\"h4\", 30],\r\n    [\"h5\", 25],\r\n    [\"h6\", 20],\r\n    [\"subtitle1\", 16],\r\n    [\"subtitle2\", 14],\r\n    [\"body1\", 16],\r\n    [\"body2\", 14],\r\n    [\"caption\", 12],\r\n    [\"button\", 16],\r\n    [\"overline\", 14],\r\n];\r\n\r\nconst Symbol = styled.svg`\r\n    display: inline-block;\r\n    height: 16px;\r\n    width: 16px;\r\n    margin: 1px 1px -2px 1px;\r\n\r\n    ${sizeMap.map(\r\n        ([v, size]) => css`\r\n            .MuiTypography-${v} & {\r\n                height: ${size}px;\r\n                width: ${size}px;\r\n            }\r\n        `\r\n    )}\r\n`;\r\n\r\ntype Props = {\r\n    symbol: string;\r\n};\r\n\r\nconst SymbolIcon: React.FC<Props> = ({ symbol }) => {\r\n    const [state] = React.useContext(AppState);\r\n    const [symbolObj, setSymbolObj] = React.useState<ScryCardSymbol>();\r\n    React.useEffect(() => {\r\n        setSymbolObj(state.symbolList[symbol] ?? Object.values(state.symbolList).find(s => s.loose_variant === symbol));\r\n    }, [symbol, state.symbolList]);\r\n    return symbolObj ? <Symbol dangerouslySetInnerHTML={{ __html: symbolObj.svg }} /> : <>{symbol}</>;\r\n};\r\n\r\nexport default SymbolIcon;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { TypographyProps } from \"@material-ui/core/Typography\";\r\nimport SymbolIcon from \"./SymbolIcon\";\r\n\r\ntype Props = TypographyProps & {\r\n    text: string;\r\n};\r\n\r\nconst SymbolTypography: React.FC<Props> = ({ text, ...typographyProps }) => {\r\n    const [parsed, setParsed] = React.useState<JSX.Element[]>([]);\r\n    React.useEffect(() => {\r\n        setParsed((text.match(/({.*?})|([^{]+)/g) ?? []).map((m, i) => (m[0] === \"{\" ? <SymbolIcon key={i} symbol={m} /> : <span key={i}>{m}</span>)));\r\n    }, [text]);\r\n    return <Typography {...typographyProps}>{parsed}</Typography>;\r\n};\r\n\r\nexport default SymbolTypography;\r\n","import React from \"react\";\r\nimport { MakeTuple } from \"../../Utility\";\r\nimport DeepReadonly from \"../../Utility/DeepReadonly\";\r\nimport { Action } from \"./Actions\";\r\n\r\nexport const instantiatePlayers = (count: number): PlayerInfoArray => Array.from(Array(count), (_, i) => ({ name: `Player ${i + 1}`, life: 20, counters: {} }));\r\n\r\nexport const Counters = MakeTuple(\"{W}\", \"{U}\", \"{B}\", \"{R}\", \"{G}\", \"{C}\", \"{S}\", \"{E}\", \"{B/P}\");\r\nexport type CounterVariant = typeof Counters[number];\r\nexport type PlayerCounters = Partial<Record<CounterVariant, number>>;\r\n\r\nexport type PlayerInfo = {\r\n    name: string;\r\n    life: number;\r\n    counters: PlayerCounters;\r\n};\r\n\r\nexport type PlayerInfoArray = DeepReadonly<PlayerInfo[]>;\r\n\r\nexport type LifecounterStateT = DeepReadonly<{\r\n    players: PlayerInfoArray;\r\n    startingLife: number;\r\n    startingPlayer: number | null;\r\n}>;\r\n\r\nexport const initialState: LifecounterStateT = {\r\n    players: instantiatePlayers(2),\r\n    startingLife: 20,\r\n    startingPlayer: null,\r\n};\r\n\r\nexport const LifecounterState = React.createContext<[LifecounterStateT, React.Dispatch<Action>]>([initialState, undefined as any]);\r\n","import omit from \"lodash-es/omit\";\r\nimport { instantiatePlayers, LifecounterStateT, PlayerInfoArray } from \".\";\r\nimport { chainReducers, combineReducers } from \"../../Utility\";\r\nimport { Action } from \"./Actions\";\r\nimport { mapValues } from \"lodash-es\";\r\n\r\nconst playerReducer = (state: PlayerInfoArray, action: Action): PlayerInfoArray => {\r\n    switch (action.type) {\r\n        case \"SetPlayers\":\r\n            return state.length < action.count ? [...state, ...instantiatePlayers(action.count).slice(state.length)] : state.slice(0, action.count);\r\n        case \"SetName\":\r\n            return state.map((p, i) => (i === action.player ? { ...p, name: action.name } : p));\r\n        case \"ToggleCounter\":\r\n            return state.map((p, i) =>\r\n                i === action.player\r\n                    ? { ...p, counters: p.counters[action.counter] === undefined ? { ...p.counters, [action.counter]: 0 } : omit(p.counters, action.counter) }\r\n                    : p\r\n            );\r\n        case \"SetPlayerCounter\":\r\n            return state.map((p, i) =>\r\n                i === action.player\r\n                    ? action.counter\r\n                        ? { ...p, counters: { ...p.counters, [action.counter]: p.counters[action.counter]! + action.value } }\r\n                        : { ...p, life: p.life + action.value }\r\n                    : p\r\n            );\r\n        case \"SetStartingLife\":\r\n            return state.map(p => ({ ...p, life: action.value }));\r\n    }\r\n    return state;\r\n};\r\n\r\nconst startingLifeReducer = (state: number, action: Action): number => {\r\n    switch (action.type) {\r\n        case \"SetStartingLife\":\r\n            return action.value;\r\n    }\r\n    return state;\r\n};\r\n\r\nconst startingPlayerReducer = (state: number | null, action: Action): number | null => {\r\n    switch (action.type) {\r\n        case \"SetStartingPlayer\":\r\n            return action.player;\r\n    }\r\n    return state;\r\n};\r\n\r\nexport const combinedReducer = combineReducers<LifecounterStateT, Action>({\r\n    players: playerReducer,\r\n    startingLife: startingLifeReducer,\r\n    startingPlayer: startingPlayerReducer,\r\n});\r\n\r\nconst restartReducer = (state: LifecounterStateT, action: Action): LifecounterStateT => {\r\n    switch (action.type) {\r\n        case \"Restart\":\r\n            return {\r\n                ...state,\r\n                players: state.players.map(p => ({ ...p, life: state.startingLife, counters: mapValues(p.counters, () => 0) })),\r\n                startingPlayer: null,\r\n            };\r\n    }\r\n    return state;\r\n};\r\n\r\nexport const reducer = chainReducers<LifecounterStateT, Action>(combinedReducer, restartReducer);\r\n","import React from \"react\";\r\n\r\nconst useDimensions = <T extends HTMLElement>() => {\r\n    const ref = React.useRef<T>(null);\r\n    const [width, setWidth] = React.useState(0);\r\n    const [height, setHeight] = React.useState(0);\r\n\r\n    React.useEffect(() => {\r\n        setWidth(ref.current?.clientWidth ?? 0);\r\n        setHeight(ref.current?.clientHeight ?? 0);\r\n    }, []);\r\n    \r\n    return [ref, width, height] as const;\r\n};\r\nexport default useDimensions;\r\n","import { Button, Fade, Typography, TypographyTypeMap, useMediaQuery } from \"@material-ui/core\";\r\nimport debounce from \"lodash-es/debounce\";\r\nimport React from \"react\";\r\nimport { Flex } from \"reflexbox\";\r\nimport { CounterVariant, LifecounterState } from \"../../../State/Lifecounter\";\r\nimport useDimensions from \"../../../Utility/useDimensions\";\r\nimport SymbolTypography from \"../../Styled/SymbolTypography\";\r\nimport styled, { css, MainTheme } from \"../../Styled/Theme\";\r\n\r\nconst Wrapper = styled.div<{ flexBasis: string; players: number }>`\r\n    position: relative;\r\n    height: ${p => (p.players > 4 ? 100.0 / 3.0 : 50)}%;\r\n    flex-basis: ${p => p.flexBasis};\r\n`;\r\n\r\nconst Body = styled(Flex)<{ rotate: number; w: number; h: number }>`\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    background: radial-gradient(circle, ${p => p.theme.palette.background.paper} 0%, ${p => p.theme.palette.background.default} 75%);\r\n    border: 2px dashed ${p => p.theme.palette.background.paper};\r\n    transform: rotate(${p => p.rotate}deg) translate(-50%, -50%);\r\n    transform-origin: top left;\r\n    ${p =>\r\n        Math.abs(p.rotate) === 90\r\n            ? css`\r\n                  width: ${p.h}px;\r\n                  height: ${p.w}px;\r\n              `\r\n            : css`\r\n                  width: ${p.w}px;\r\n                  height: ${p.h}px;\r\n              `}\r\n`;\r\n\r\nconst Counter = styled(Flex)`\r\n    position: relative;\r\n`;\r\n\r\nconst IncrementButton = styled(Button)<{ position: \"left\" | \"right\" }>`\r\n    position: absolute;\r\n    ${p => p.position}: 0;\r\n    ${p => `padding-${p.position}`}: 10%;\r\n    justify-content: ${p => `flex-${p.position === \"left\" ? \"start\" : \"end\"}`};\r\n    top: 0;\r\n    bottom: 0;\r\n    width: 50%;\r\n`;\r\n\r\nconst CounterBackground = styled(SymbolTypography)`\r\n    position: absolute;\r\n    opacity: 0.1;\r\n    transform: scale(2);\r\n    line-height: 0;\r\n`;\r\n\r\nconst DebouncedValue = styled(Typography)`\r\n    position: absolute;\r\n    top: 0;\r\n`;\r\n\r\nconst IconButton = styled(Button)<{ styled: { selected: boolean; tight?: boolean } }>`\r\n    min-width: unset;\r\n    ${p =>\r\n        !p.styled.selected &&\r\n        css`\r\n            filter: grayscale(1);\r\n            opacity: 0.25;\r\n        `}\r\n    ${p =>\r\n        p.styled.tight &&\r\n        css`\r\n            padding: 4px;\r\n        `}\r\n`;\r\n\r\nconst StartingPlayerOverlay = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background-color: rgba(0, 0, 0, 0.25);\r\n    z-index: 1;\r\n`;\r\n\r\ntype PlayerCount = 2 | 3 | 4 | 5 | 6;\r\ntype PlayerTransform = {\r\n    rotate: number;\r\n    flexBasis: string;\r\n    counter?: TypographyTypeMap[\"props\"][\"variant\"];\r\n};\r\n\r\nconst PlayerTransforms: Record<PlayerCount, PlayerTransform[]> = {\r\n    2: [\r\n        { rotate: 180, flexBasis: \"100%\" },\r\n        { rotate: 0, flexBasis: \"100%\" },\r\n    ],\r\n    3: [\r\n        { rotate: 90, flexBasis: \"50%\", counter: \"body1\" },\r\n        { rotate: -90, flexBasis: \"50%\", counter: \"body1\" },\r\n        { rotate: 0, flexBasis: \"100%\" },\r\n    ],\r\n    4: [\r\n        { rotate: 90, flexBasis: \"50%\", counter: \"body1\" },\r\n        { rotate: -90, flexBasis: \"50%\", counter: \"body1\" },\r\n        { rotate: 90, flexBasis: \"50%\", counter: \"body1\" },\r\n        { rotate: -90, flexBasis: \"50%\", counter: \"body1\" },\r\n    ],\r\n    5: [\r\n        { rotate: 180, flexBasis: \"100%\" },\r\n        { rotate: 90, flexBasis: \"50%\", counter: \"body2\" },\r\n        { rotate: -90, flexBasis: \"50%\", counter: \"body2\" },\r\n        { rotate: 90, flexBasis: \"50%\", counter: \"body2\" },\r\n        { rotate: -90, flexBasis: \"50%\", counter: \"body2\" },\r\n    ],\r\n    6: [\r\n        { rotate: 90, flexBasis: \"50%\", counter: \"body2\" },\r\n        { rotate: -90, flexBasis: \"50%\", counter: \"body2\" },\r\n        { rotate: 90, flexBasis: \"50%\", counter: \"body2\" },\r\n        { rotate: -90, flexBasis: \"50%\", counter: \"body2\" },\r\n        { rotate: 90, flexBasis: \"50%\", counter: \"body2\" },\r\n        { rotate: -90, flexBasis: \"50%\", counter: \"body2\" },\r\n    ],\r\n};\r\n\r\ntype Props = {\r\n    player: number;\r\n};\r\nconst PlayerCard: React.FC<Props> = ({ player }) => {\r\n    const [state, dispatch] = React.useContext(LifecounterState);\r\n    const [ref, width, height] = useDimensions<HTMLDivElement>();\r\n\r\n    const [activeCounter, setActiveCounter] = React.useState<CounterVariant>();\r\n    const [debouncedValue, setDebouncedValue] = React.useState<number>(0);\r\n\r\n    const { name, life, counters } = state.players[player];\r\n    const { startingPlayer } = state;\r\n    const activeValue = activeCounter ? counters[activeCounter]! : life;\r\n    const activeDiff = activeValue - debouncedValue;\r\n\r\n    // Reset debounce after counter changes\r\n    React.useEffect(\r\n        () => setDebouncedValue(activeValue),\r\n        // eslint-disable-next-line\r\n        [activeCounter]\r\n    );\r\n\r\n    // Reset state after restart\r\n    React.useEffect(\r\n        () => {\r\n            setDebouncedValue(activeValue);\r\n            setActiveCounter(undefined);\r\n        },\r\n        // eslint-disable-next-line\r\n        [startingPlayer]\r\n    );\r\n\r\n    const debouncedSet = React.useCallback(debounce(setDebouncedValue, 1000), []);\r\n    const setCounter = (value: number) => {\r\n        debouncedSet(activeValue + value);\r\n        dispatch({ type: \"SetPlayerCounter\", player, value, counter: activeCounter });\r\n    };\r\n\r\n    const clearStartingPlayer = () => dispatch({ type: \"SetStartingPlayer\", player: null });\r\n\r\n    const isMobile = useMediaQuery(MainTheme.breakpoints.down(\"xs\"));\r\n    const valueTextVariant = React.useMemo(() => (isMobile ? \"h2\" : \"h1\"), [isMobile]);\r\n\r\n    const { rotate, flexBasis, counter } = PlayerTransforms[state.players.length as PlayerCount][player];\r\n    return (\r\n        <Wrapper ref={ref} flexBasis={flexBasis} players={state.players.length}>\r\n            <Body rotate={rotate} w={width} h={height} flexGrow={1} flexDirection=\"column\" justifyContent=\"center\">\r\n                <Fade in={player === startingPlayer}>\r\n                    <StartingPlayerOverlay onClick={clearStartingPlayer} />\r\n                </Fade>\r\n                <Flex py={3} height=\"20%\" justifyContent=\"center\" alignItems=\"center\">\r\n                    <Typography variant=\"caption\" align=\"center\">\r\n                        {name}\r\n                    </Typography>\r\n                </Flex>\r\n                <Counter flexGrow={1} justifyContent=\"center\" alignItems=\"center\">\r\n                    <CounterBackground variant={valueTextVariant} text={activeCounter ?? \"{PW}\"} />\r\n                    {activeDiff !== 0 && (\r\n                        <DebouncedValue color=\"primary\" variant=\"h6\">\r\n                            {activeDiff > 0 ? \"+\" : \"\"}\r\n                            {activeDiff}\r\n                        </DebouncedValue>\r\n                    )}\r\n                    <IncrementButton position=\"left\" onClick={() => setCounter(-1)}>\r\n                        <Typography variant=\"h6\">-</Typography>\r\n                    </IncrementButton>\r\n                    <Typography variant={valueTextVariant} align=\"center\">\r\n                        {activeValue}\r\n                    </Typography>\r\n                    <IncrementButton position=\"right\" onClick={() => setCounter(1)}>\r\n                        <Typography variant=\"h6\">+</Typography>\r\n                    </IncrementButton>\r\n                </Counter>\r\n                <Flex mx={3} height=\"20%\" justifyContent=\"space-evenly\" alignItems=\"center\">\r\n                    {Object.keys(counters).map(c => (\r\n                        <Flex key={c} justifyContent=\"center\" alignItems=\"center\">\r\n                            <IconButton\r\n                                styled={{\r\n                                    selected: activeCounter === c,\r\n                                    tight: counter === \"body2\",\r\n                                }}\r\n                                onClick={() => setActiveCounter(activeCounter === c ? undefined : (c as CounterVariant))}\r\n                            >\r\n                                <SymbolTypography variant={counter ?? \"h6\"} text={`${counters[c as CounterVariant]} ${c}`} />\r\n                            </IconButton>\r\n                        </Flex>\r\n                    ))}\r\n                </Flex>\r\n            </Body>\r\n        </Wrapper>\r\n    );\r\n};\r\nexport default PlayerCard;\r\n","import { Dialog, IconButton, useMediaQuery } from \"@material-ui/core\";\r\nimport CasinoIcon from \"@material-ui/icons/Casino\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport NoSleep from \"nosleep.js\";\r\nimport React from \"react\";\r\nimport { Flex } from \"reflexbox\";\r\nimport { LifecounterState } from \"../../../State/Lifecounter\";\r\nimport { AppletActions } from \"../../Styled/Grid\";\r\nimport styled, { MainTheme } from \"../../Styled/Theme\";\r\nimport TooltipButton from \"../../Styled/TooltipButton\";\r\nimport PlayerCard from \"./PlayerCard\";\r\n\r\nconst OptionsButton = styled(IconButton)`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst LifecounterDialog: React.FC = () => {\r\n    const isMobile = useMediaQuery(MainTheme.breakpoints.down(\"xs\"));\r\n    const [open, setOpen] = React.useState(false);\r\n    const [optionsOpen, setOptionsOpen] = React.useState(false);\r\n\r\n    const [state, dispatch] = React.useContext(LifecounterState);\r\n\r\n    var noSleep = React.useMemo(() => new NoSleep(), []);\r\n    React.useEffect(() => () => noSleep.disable(), [noSleep]);\r\n\r\n    const handleOpen = () => {\r\n        noSleep.enable();\r\n        restartGame();\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        noSleep.disable();\r\n        setOpen(false);\r\n        setOptionsOpen(false);\r\n    };\r\n\r\n    const handleOptionsOpen = () => {\r\n        setOptionsOpen(true);\r\n    };\r\n\r\n    const handleOptionsClose = () => {\r\n        setOptionsOpen(false);\r\n    };\r\n\r\n    const setStartingPlayer = () => {\r\n        dispatch({ type: \"SetStartingPlayer\", player: Math.round(Math.random() * (state.players.length - 1)) });\r\n        handleOptionsClose();\r\n    };\r\n\r\n    const restartGame = () => {\r\n        dispatch({ type: \"Restart\" });\r\n        setStartingPlayer();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <AppletActions>\r\n                <TooltipButton title=\"Start match\" onClick={handleOpen} background=\"primary\">\r\n                    <PlayArrowIcon />\r\n                </TooltipButton>\r\n            </AppletActions>\r\n            <Dialog fullScreen={isMobile} open={open} onClose={handleClose}>\r\n                <Flex flexWrap=\"wrap\" width={isMobile ? \"100%\" : \"550px\"} height={isMobile ? \"100%\" : \"900px\"}>\r\n                    {state.players.map((_, i) => (\r\n                        <PlayerCard key={i} player={i} />\r\n                    ))}\r\n                </Flex>\r\n\r\n                <OptionsButton onClick={handleOptionsOpen}>\r\n                    <SettingsIcon />\r\n                </OptionsButton>\r\n                <Dialog open={optionsOpen} onClose={handleOptionsClose}>\r\n                    <IconButton onClick={restartGame}>\r\n                        <RefreshIcon />\r\n                    </IconButton>\r\n                    <IconButton onClick={handleClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                    <IconButton onClick={setStartingPlayer}>\r\n                        <CasinoIcon />\r\n                    </IconButton>\r\n                </Dialog>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\nexport default LifecounterDialog;\r\n","import { Button, ButtonGroup, TextField } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Box, Flex } from \"reflexbox\";\r\nimport { Counters, CounterVariant, LifecounterState } from \"../../../State/Lifecounter\";\r\nimport SymbolTypography from \"../../Styled/SymbolTypography\";\r\nimport styled from \"../../Styled/Theme\";\r\n\r\nconst SymbolButton = styled(Button)`\r\n    padding: 7px;\r\n    padding-bottom: 3px;\r\n    min-width: 0;\r\n`;\r\n\r\nconst CenteredTextField = styled(TextField)`\r\n    & .MuiInputBase-input {\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\ntype Props = {\r\n    player: number;\r\n};\r\n\r\nconst PlayerSettings: React.FC<Props> = ({ player }) => {\r\n    const [state, dispatch] = React.useContext(LifecounterState);\r\n    const { name, counters } = state.players[player];\r\n\r\n    const toggleCounter = (counter: CounterVariant) => dispatch({ type: \"ToggleCounter\", player, counter });\r\n\r\n    return (\r\n        <Flex width={[\"100%\", \"50%\", \"50%\", \"33%\"]} flexDirection=\"column\" alignItems=\"center\" my={2}>\r\n            <Box width={180} pb={2}>\r\n                <CenteredTextField value={name} onChange={e => dispatch({ type: \"SetName\", player, name: e.target.value })} fullWidth />\r\n            </Box>\r\n            <ButtonGroup>\r\n                {Counters.slice(0, 5).map(c => (\r\n                    <SymbolButton key={c} onClick={() => toggleCounter(c)} variant={counters[c] !== undefined ? \"contained\" : undefined}>\r\n                        <SymbolTypography text={c} variant=\"h5\" />\r\n                    </SymbolButton>\r\n                ))}\r\n            </ButtonGroup>\r\n            <ButtonGroup>\r\n                {Counters.slice(5).map(c => (\r\n                    <SymbolButton key={c} onClick={() => toggleCounter(c)} variant={counters[c] !== undefined ? \"contained\" : undefined}>\r\n                        <SymbolTypography text={c} variant=\"h5\" />\r\n                    </SymbolButton>\r\n                ))}\r\n            </ButtonGroup>\r\n        </Flex>\r\n    );\r\n};\r\nexport default PlayerSettings;\r\n","import { Slider, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Box, Flex } from \"reflexbox\";\r\nimport { initialState, LifecounterState } from \"../../../State/Lifecounter\";\r\nimport { reducer } from \"../../../State/Lifecounter/Reducers\";\r\nimport { AppletContent, Title } from \"../../Styled/Grid\";\r\nimport styled from \"../../Styled/Theme\";\r\nimport LifecounterDialog from \"./LifecounterDialog\";\r\nimport PlayerSettings from \"./PlayerSettings\";\r\n\r\nconst SliderLabel = styled(Typography)`\r\n    flex-basis: 20%;\r\n`;\r\n\r\nconst SliderValue = styled(Typography)`\r\n    flex-basis: 20px;\r\n    text-align: right;\r\n`;\r\n\r\nconst Lifecounter: React.FC = () => {\r\n    const [state, dispatch] = React.useReducer(reducer, initialState);\r\n\r\n    const [playersCount, setPlayersCount] = React.useState(state.players.length);\r\n\r\n    return (\r\n        <LifecounterState.Provider value={[state, dispatch]}>\r\n            <AppletContent>\r\n                <Title>Lifecounter</Title>\r\n                <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n                    <SliderLabel>Players</SliderLabel>\r\n                    <Box mx={3} flexGrow={1}>\r\n                        <Slider\r\n                            value={playersCount}\r\n                            onChange={(e, v) => setPlayersCount(v as number)}\r\n                            onChangeCommitted={() => dispatch({ type: \"SetPlayers\", count: playersCount })}\r\n                            step={1}\r\n                            min={2}\r\n                            max={6}\r\n                            marks\r\n                            valueLabelDisplay=\"off\"\r\n                        />\r\n                    </Box>\r\n                    <SliderValue>{playersCount}</SliderValue>\r\n                </Flex>\r\n                <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n                    <SliderLabel>Starting life</SliderLabel>\r\n                    <Box mx={3} flexGrow={1}>\r\n                        <Slider\r\n                            value={state.startingLife}\r\n                            onChange={(e, v) => dispatch({ type: \"SetStartingLife\", value: v as number })}\r\n                            step={5}\r\n                            min={10}\r\n                            max={50}\r\n                            marks\r\n                            valueLabelDisplay=\"off\"\r\n                        />\r\n                    </Box>\r\n                    <SliderValue>{state.startingLife}</SliderValue>\r\n                </Flex>\r\n                <Flex justifyContent=\"center\" flexWrap=\"wrap\">\r\n                    {state.players.map((_, i) => (\r\n                        <PlayerSettings key={i} player={i} />\r\n                    ))}\r\n                </Flex>\r\n                <LifecounterDialog />\r\n            </AppletContent>\r\n        </LifecounterState.Provider>\r\n    );\r\n};\r\nexport default Lifecounter;\r\n"],"sourceRoot":""}