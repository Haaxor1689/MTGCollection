{"version":3,"sources":["Assets/logo.png","State/index.ts","State/Reducers.ts","Utility/index.ts","Utility/Scry/index.ts","State/Thunks.ts","Utility/CollectionParser.ts","Utility/GoogleApi.ts","Utility/useThunk.ts","Components/Styled/CardNameAutocomplete.tsx","Components/Styled/Theme.ts","Components/Styled/Grid.tsx","Components/Applets/AddDeck.tsx","Components/Loading.tsx","Utility/Assert.ts","Utility/useCardAction.ts","Components/Styled/IncrementNumber.tsx","Components/Styled/SymbolIcon.tsx","Components/Styled/SymbolTypography.tsx","Components/Previews/CompressedCard.tsx","Components/Styled/IndentedTypography.tsx","Components/Previews/CompressedCollection.tsx","Components/Styled/TooltipButton.tsx","Components/Previews/ActionButtons/WishlistButton.tsx","Components/Previews/ActionButtons/ChangeSectionButton.tsx","Components/Previews/ActionButtons/DeleteButton.tsx","Assets/scryfallLogo.svg","Components/Previews/ActionButtons/OpenScryfallButton.tsx","Components/Previews/ActionButtons/CardActions.tsx","Components/Previews/ImagesCard.tsx","Components/Previews/ImagesCollection.tsx","Components/Styled/SetIcon.tsx","Components/Previews/ListCard.tsx","Components/Previews/ListCollection.tsx","Components/Previews/CollectionPreview.tsx","Components/Previews/Common/PreviewStyleToggle.tsx","Components/Previews/Common/ShowGroupsToggle.tsx","Components/Previews/Common/SortToggle.tsx","Components/Styled/Icons.tsx","Components/Applets/DeckPreview.tsx","Components/Applets/UserInfo.tsx","Components/Drawer/DeckAvatar.tsx","Components/Drawer/DrawerDeckList.tsx","Components/Drawer/MobileNavigation.tsx","Components/Applets/CardSearch.tsx","Components/Applets/DeckBox.tsx","Components/Applets/DeckList.tsx","Components/Home.tsx","Components/NotFound.tsx","Components/SignInButton.tsx","Components/SignIn.tsx","Components/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","DeckName","SectionName","getDeckName","name","Collection","Wishlist","reducers","EmptyCards","sections","reduce","obj","s","Default","initialState","files","decks","cards","cardList","symbolList","setList","selectedDeck","AppState","React","createContext","undefined","LoginState","signOut","reducer","state","action","type","link","omit","keyBy","symbols","symbol","sets","code","isDirty","card","amount","deckName","sectionName","temp","i","Arr","v","self","indexOf","PxFromAvatarSize","size","Api","endpoint","Axios","create","baseURL","responseType","headers","Symbology","All","get","then","r","data","ParseMana","cost","params","Cards","Autocomplete","q","include_extras","Named","fuzzy","length","Promise","resolve","all","ArrayChunk","arr","n","slice","concat","map","identifiers","post","flatMap","Sets","Scry","getImage","images","layout","card_faces","image_uris","getPlaceholder","cardName","replace","getColorIdentity","filter","c","color_identity","join","downloadCards","dispatch","deck","missingCards","Object","values","prev","val","CollectionParser","serialize","collection","split","section","index","lines","line","match","isNull","parseInt","comment","p","deserialize","entries","str","GoogleApiInit","apiKey","process","clientId","discoveryDocs","scope","createNewFile","a","async","props","fileContent","folder","file","Blob","metadata","mimeType","appProperties","parents","accessToken","gapi","auth","getToken","access_token","form","FormData","append","JSON","stringify","fetch","method","Headers","Authorization","body","res","json","id","deleteFile","client","drive","delete","fileId","createNewDeck","restProps","Sideboard","Maybeboard","downloadDeck","GoogleApi","getFileContents","previewUrl","initClient","onUpdateStatus","load","init","auth2","getAuthInstance","isSignedIn","listen","console","error","getProfile","currentUser","getBasicProfile","signIn","prepareAppData","list","spaces","fields","response","collectionFile","result","find","f","info","wishlistFile","otherFiles","updateFile","deleteDeck","alt","useThunk","context","func","useContext","CardNameAutocomplete","label","onNameSelect","useState","value","setValue","open","setOpen","options","setOptions","isLoading","setIsLoading","typingTimer","setTypingTimer","onChange","newValue","useEffect","style","width","onOpen","onClose","e","onInputChange","reason","clearTimeout","setTimeout","names","toLowerCase","includes","loading","renderInput","TextField","fullWidth","variant","InputProps","endAdornment","Fragment","CircularProgress","color","MainTheme","createMuiTheme","palette","primary","main","colors","deepOrange","secondary","blueGrey","constants","drawerWidth","drawerWidthClosed","appletHeight","css","ThemeProv","styledCss","styled","baseStyled","FlexCol","div","AppletContent","Paper","theme","spacing","breakpoints","down","AppletActions","Title","Typography","attrs","component","gutterBottom","DrawerAvatar","Avatar","background","paper","text","PreviewRow","AddDeck","history","useHistory","importText","setImportText","setDeckName","invalidName","setInvalidName","setPreviewUrl","handleClose","handleImport","push","encodeURIComponent","validateName","helperText","target","src","ButtonGroup","Button","disabled","onClick","Dialog","aria-labelledby","maxWidth","DialogTitle","DialogContent","DialogContentText","autoFocus","multiline","rows","DialogActions","Body","MarginedTypography","Loading","assert","condition","message","AssertionError","useCardActions","targetDeck","isOnWishlist","keys","updateCardQuantity","isNullOrUndefined","openScryfallPage","scryfall_uri","window","openScryfallSetPage","scryfall_set_uri","toggleWishlist","wishlistTooltip","removeCard","changeSection","newSection","addToDeck","StyledAvatar","className","grey","Arrows","IconButton","IncrementNumber","anchorEl","setAnchorEl","onIncrement","incr","stopPropagation","title","currentTarget","Popper","ClickAwayListener","onClickAway","sizeMap","Symbol","svg","SymbolIcon","symbolObj","setSymbolObj","loose_variant","dangerouslySetInnerHTML","__html","SymbolTypography","typographyProps","parsed","setParsed","m","key","CustomChip","Chip","CompressedCard","deleteIcon","mana_cost","noWrap","avatar","onDelete","IndentedTypography","CompressedCollecion","sortBy","sortOrder","showGroups","Grid","container","direction","item","xs","zeroMinWidth","StyledIconButton","darken","dark","TooltipButton","children","Tooltip","aria-label","WishlistButton","actions","ChangeSectionButton","anchorRef","useRef","event","current","contains","ref","prevOpen","role","transition","TransitionProps","placement","Grow","transformOrigin","elevation","MenuList","MenuItem","DeleteButton","_extends","assign","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","transform","fill","fillRule","cx","cy","d","_ref","svgRef","focusable","height","viewBox","ForwardRef","forwardRef","OpenScryfallButton","CardActions","Image","img","Actions","StyledIncrement","default","ImagesCard","ImagesCollecion","alignItems","sm","lg","xl","Set","rarity","SetIcon","set","setObj","setSetObj","offset","stopColor","gradientTransform","icon_svg","StyledRow","TableRow","ActionsMenu","ListCard","actionsOpen","setActionsOpen","SetWidthCell","align","NameCell","Link","href","TableCell","position","CustomPaddingTable","Table","ListCollecion","TableHead","TableBody","colSpan","desc","b","orderBy","getSorting","order","StableSort","array","cmp","stabilizedThis","el","sort","rarityOrder","GetSortFunction","CollectionPreview","passedProps","renderCollection","PreviewStyleToggle","onToggle","Error","IconForStyle","ShowGroupsToggle","show","setShow","SortToggle","setSortBy","setSortOrder","startIcon","by","selected","IconWrap","CompressIcon","icon","faCompressAlt","ExpandIcon","faExpandAlt","GoogleIcon","faGoogle","ClipboardIcon","faClipboard","SectionRow","scrollable","ExportRow","AppletBackground","fade","DeckPreview","useParams","decodeURIComponent","expanded","setExpanded","exportOpened","setExportOpened","setStyle","setShowGroups","justify","copy","readOnly","StyledTitle","ContainedDeleteButton","light","UserInfo","forEach","DeckAvatar","Badge","invisible","overlap","badgeContent","anchorOrigin","vertical","horizontal","StyledItemText","ListItemText","DrawerDeckList","closeDrawer","pathname","useLocation","renderItem","ListItem","to","button","ListItemAvatar","List","Divider","StyledNavigation","BottomNavigation","DeckAction","BottomNavigationAction","DeckIcon","MobileNavigation","toggleOpen","_","tab","showLabels","CardSearch","setCardName","autoompleteOptions","setAutocompleteOptions","dialogOpen","setDialogOpen","closeDialog","R","G","U","B","W","colorExactMatch","cmc","cmcType","setFilter","handleColors","newFilter","checked","freeSolo","autoHighlight","disableClearable","inputValue","FormGroup","row","FormControlLabel","control","Checkbox","alert","DeckBoxBody","DeckBoxAvatar","DeckBoxTitle","DeckColorIdentity","LargeIcon","LargeFavoriteIcon","FavoriteIcon","LargeCollectionsIcon","CollectionsIcon","LargeAddCircleOutlineIcon","AddCircleOutlineIcon","DeckBox","DeckList","Home","NotFound","SignInButton","SignIn","padding","Logo","draggable","bodyOpen","transitions","easing","sharp","duration","enteringScreen","bodyClose","leavingScreen","CustomAppBar","AppBar","zIndex","drawer","MenuButton","drawerOpen","drawerClose","CustomDrawer","Drawer","DrawerToolbar","Toolbar","NoGutterContainer","Container","MainContent","ProfileAvatar","App","isMobile","useMediaQuery","useReducer","profile","setProfile","setIsSignedIn","handleSignoutClick","handleDrawerToggle","signedIn","redirect","location","svg_uri","transformResponse","responses","icon_svg_uri","Provider","edge","overflow","underline","getGivenName","getEmail","getImageUrl","anchor","exact","path","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","ReactDOM","render","basename","StylesProvider","injectFirst","CssBaseline","document","getElementById","URL","origin","addEventListener","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d8e08505.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.81aa9e7e.png\";","import React from \"react\";\nimport DeepReadonly from \"../Utility/DeepReadonly\";\nimport { ScryCard, ScryCardSymbol, ScrySet } from \"../Utility/Scry/Types\";\nimport { Action } from \"./Actions\";\nimport { GoogleProfile } from \"../Utility/GoogleApi\";\n\nexport enum DeckName {\n    Collection = \"_collection\",\n    Wishlist = \"_wishlist\",\n}\n\nexport const getDeckName = (name: string) => {\n    if (name === DeckName.Collection) return \"Collection\";\n    if (name === DeckName.Wishlist) return \"Wishlist\";\n    return name;\n};\n\nexport enum SectionName {\n    Default = \"_default\",\n    Sideboard = \"Sideboard\",\n    Maybeboard = \"Maybeboard\",\n}\n\nexport const EmptyCards = (...sections: string[]): DeckCards => sections.reduce((obj, s) => ({ ...obj, [s]: {} }), { [SectionName.Default]: {} });\n\nexport type DeckCardList = DeepReadonly<{\n    [cardName: string]: DeckCard;\n}>;\n\nexport type DeckCards = DeepReadonly<{\n    [SectionName.Default]: DeckCardList;\n    [section: string]: DeckCardList;\n}>;\n\nexport type DeckCard = DeepReadonly<{\n    amount: number;\n    name: string;\n    comment?: string;\n}>;\n\nexport type DeckProps = Omit<Deck, \"cards\">;\n\nexport type Deck = DeepReadonly<{\n    name: string;\n    previewUrl?: string;\n    cards: DeckCards;\n    isDirty?: boolean;\n}>;\n\nexport type FileIds = DeepReadonly<{\n    [DeckName.Collection]: string;\n    [DeckName.Wishlist]: string;\n    [deckName: string]: string;\n}>;\n\nexport type Decks = DeepReadonly<{\n    [DeckName.Collection]: Deck;\n    [DeckName.Wishlist]: Deck;\n    [deckName: string]: Deck;\n}>;\n\nexport type CardList = DeepReadonly<{\n    [cardName: string]: ScryCard;\n}>;\n\nexport type SymbolList = DeepReadonly<{\n    [symbol: string]: ScryCardSymbol;\n}>;\n\nexport type SetList = DeepReadonly<{\n    [setName: string]: ScrySet;\n}>;\n\nexport type AppStateT = DeepReadonly<{\n    files: FileIds;\n    decks: Decks;\n    cardList: CardList;\n    symbolList: SymbolList;\n    setList: SetList;\n    selectedDeck: string;\n}>;\n\nexport const initialState: AppStateT = {\n    files: {\n        [DeckName.Collection]: \"\",\n        [DeckName.Wishlist]: \"\",\n    },\n    decks: {\n        [DeckName.Collection]: { name: DeckName.Collection, cards: EmptyCards() },\n        [DeckName.Wishlist]: { name: DeckName.Wishlist, cards: EmptyCards() },\n    },\n    cardList: {},\n    symbolList: {},\n    setList: {},\n    selectedDeck: DeckName.Collection,\n};\n\nexport const AppState = React.createContext<[AppStateT, React.Dispatch<Action>]>([initialState, undefined as any]);\n\nexport type LoginStateT = {\n    profile?: GoogleProfile;\n    signOut: () => void;\n};\n\nexport const LoginState = React.createContext<LoginStateT>({ signOut: () => {} });\n","import { keyBy, omit } from \"lodash\";\nimport { AppStateT, CardList, DeckName, Decks, EmptyCards, FileIds, SetList, SymbolList } from \".\";\nimport { Action } from \"./Actions\";\n\nconst filesReducer = (state: FileIds, action: Action): FileIds => {\n    switch (action.type) {\n        case \"CreateDeck\":\n            return {\n                ...state,\n                [action.name]: action.link,\n            };\n        case \"DeleteDeck\":\n            return { ...omit(state, [action.name]) } as FileIds;\n    }\n    return state;\n};\n\nconst cardListReducer = (state: CardList, action: Action): CardList => {\n    switch (action.type) {\n        case \"AddCards\":\n            return {\n                ...state,\n                ...keyBy(action.cards, \"name\"),\n            };\n    }\n    return state;\n};\n\nconst symbolListReducer = (state: SymbolList, action: Action): SymbolList => {\n    switch (action.type) {\n        case \"AddSymbols\":\n            return action.symbols.reduce((obj, s) => ({ ...obj, [s.symbol]: s }), {});\n    }\n    return state;\n};\n\nconst setListReducer = (state: SetList, action: Action): SetList => {\n    switch (action.type) {\n        case \"AddSets\":\n            return action.sets.reduce((obj, s) => ({ ...obj, [s.code]: s }), {});\n    }\n    return state;\n};\n\nconst decksReducer = (state: Decks, action: Action): Decks => {\n    switch (action.type) {\n        case \"CreateDeck\":\n            return {\n                ...state,\n                [action.name]: {\n                    cards: EmptyCards(),\n                    ...omit(action, [\"type\", \"link\"]),\n                },\n            };\n        case \"UpdateDeck\":\n            return {\n                ...state,\n                [action.name]: {\n                    ...state[action.name],\n                    isDirty: true,\n                    ...omit(action, [\"type\"]),\n                },\n            };\n        case \"UpdateDeckCard\":\n            if (action.card.amount === 0) {\n                return {\n                    ...state,\n                    [action.deckName]: {\n                        ...state[action.deckName],\n                        cards: {\n                            ...state[action.deckName].cards,\n                            [action.sectionName]: omit(state[action.deckName].cards[action.sectionName], action.card.name),\n                        },\n                        isDirty: true,\n                    },\n                };\n            }\n            return {\n                ...state,\n                [action.deckName]: {\n                    ...state[action.deckName],\n                    cards: {\n                        ...state[action.deckName].cards,\n                        [action.sectionName]: {\n                            ...state[action.deckName].cards[action.sectionName],\n                            [action.card.name]: {\n                                ...state[action.deckName].cards[action.sectionName][action.card.name],\n                                ...action.card,\n                            },\n                        },\n                    },\n                    isDirty: true,\n                },\n            };\n        case \"DeleteDeck\":\n            return { ...omit(state, [action.name]) } as Decks;\n    }\n    return state;\n};\n\nconst selectedDeckReducer = (state: string, action: Action): string => {\n    switch (action.type) {\n        case \"SelectDeck\":\n            return action.name;\n        case \"DeleteDeck\":\n            return action.name === state ? DeckName.Collection : state;\n    }\n    return state;\n};\n\nconst combineReducers = <State, Action>(reducers: { [P in keyof State]: (state: State[P], action: Action) => State[P] }) => {\n    return (state: State, action: Action) => {\n        const temp: State = {} as any;\n        for (const i in reducers) {\n            temp[i] = reducers[i](state[i], action);\n        }\n        return temp;\n    };\n};\n\nexport const reducer = combineReducers<AppStateT, Action>({\n    files: filesReducer,\n    cardList: cardListReducer,\n    symbolList: symbolListReducer,\n    setList: setListReducer,\n    decks: decksReducer,\n    selectedDeck: selectedDeckReducer,\n});\n","export const ArrayChunk = <T>(arr: T[], n: number): T[][] => (arr.length <= n ? [arr] : [arr.slice(0, n)].concat(ArrayChunk(arr.slice(n), n)));\r\n\r\nexport const Arr = {\r\n    Unique: <T>(v: T, i: number, self: T[]) => self.indexOf(v) === i,\r\n    NotNull: <T>(v: T) => v !== null && v !== undefined,\r\n};\r\n\r\n\r\nexport const PxFromAvatarSize = (size?: \"chip\" | \"inline\") => {\r\n    switch (size) {\r\n        case \"chip\":\r\n            return 9;\r\n        case \"inline\":\r\n            return 12;\r\n        case undefined:\r\n            return 24;\r\n    }\r\n};","import Axios from \"axios\";\nimport { Arr, ArrayChunk } from \"..\";\nimport DeepReadonly from \"../DeepReadonly\";\nimport { ScryCard, ScryCardIdentifier, ScryCardImageUris, ScryCardSymbol, ScryManaCost, ScrySet } from \"./Types\";\n\ntype List<T = any> = {\n    data: T[];\n};\n\nconst Api = (() => {\n    let endpoint = Axios.create({\n        baseURL: \"https://api.scryfall.com\",\n        responseType: \"json\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n    });\n\n    return {\n        endpoint,\n        Symbology: {\n            All: () => endpoint.get<List<ScryCardSymbol>>(\"/symbology\").then(r => r.data.data),\n            ParseMana: (cost: string) =>\n                endpoint\n                    .get<ScryManaCost>(\"/symbology/parse-mana\", { params: { cost } })\n                    .then(r => r.data),\n        },\n        Cards: {\n            Autocomplete: (q: string) =>\n                endpoint\n                    .get<List<string>>(\"/cards/autocomplete\", { params: { q, include_extras: true } })\n                    .then(r => r.data.data),\n            Named: (fuzzy: string) =>\n                endpoint\n                    .get<ScryCard>(\"/cards/named\", { params: { fuzzy } })\n                    .then(r => r.data),\n            Collection: (cards: ScryCardIdentifier[]) =>\n                (cards?.length ?? 0) <= 0\n                    ? Promise.resolve([])\n                    : Promise.all(\n                        ArrayChunk(cards, 75).map(identifiers => endpoint.post<List<ScryCard>>(\"/cards/collection\", { identifiers }))\n                    ).then(r => r.flatMap(v => v.data.data)),\n        },\n        Sets: {\n            All: () => endpoint.get<List<ScrySet>>(\"/sets\").then(r => r.data.data),\n        },\n    };\n})();\n\nconst getImage = (card: DeepReadonly<ScryCard>, type: keyof ScryCardImageUris): string | null => {\n    let images: ScryCardImageUris | null | undefined;\n    switch (card.layout) {\n        case \"transform\":\n        case \"double_faced_token\":\n            images = card.card_faces![0].image_uris;\n            break;\n        default:\n            images = card.image_uris;\n    }\n    return images?.[type] ?? null;\n};\n\nconst getPlaceholder = (cardName: string): string => `https://via.placeholder.com/146x204?text=${cardName.replace(/\\s/, \"+\")}`;\n\nconst getColorIdentity = (...cards: DeepReadonly<ScryCard>[]): string =>\n    cards\n        .filter(Arr.NotNull)\n        .flatMap(c => c.color_identity)\n        .filter(Arr.Unique)\n        .map(c => `{${c}}`)\n        .join(\"\");\n\nconst Scry = {\n    ...Api,\n    getImage,\n    getPlaceholder,\n    getColorIdentity,\n};\nexport default Scry;\n","import React from \"react\";\r\nimport { AppStateT, Deck, DeckCard } from \".\";\r\nimport Scry from \"../Utility/Scry\";\r\nimport { Action } from \"./Actions\";\r\n\r\nexport const downloadCards = (dispatch: React.Dispatch<Action>, state: AppStateT) => (deck: Deck) => {\r\n    const missingCards = Object.values(deck?.cards ?? {})\r\n        .reduce((prev, val) => [...prev, ...Object.values(val)], [] as DeckCard[])\r\n        .filter(card => !state.cardList[card.name]);\r\n    Scry.Cards.Collection(missingCards.map(card => ({ name: card.name }))).then(cards => dispatch({ type: \"AddCards\", cards }));\r\n};\r\n","import { isNull } from \"lodash\";\nimport { DeckCard, DeckCards, EmptyCards, SectionName } from \"../State\";\n\nconst serialize = (collection?: string, ...sections: string[]): DeckCards => {\n    if (!collection || collection === \"\") {\n        return EmptyCards(...sections);\n    }\n    return collection\n        .split(\"##\")\n        .map((section, index) => {\n            let name: string, lines: string[];\n            if (index === 0) {\n                name = SectionName.Default;\n                lines = section.split(/\\r?\\n/);\n            } else {\n                [name, ...lines] = section.split(/\\r?\\n/);\n            }\n            return [\n                name,\n                lines\n                    .map(line => line.match(/^(\\d*) +(.*?)(?: # (.*))?$/))\n                    .filter(match => !isNull(match))\n                    .map(match => ({\n                        amount: parseInt(match![1]),\n                        name: match![2],\n                        comment: match![3],\n                    })),\n            ] as [string, DeckCard[]];\n        })\n        .reduce(\n            (prev, val) => ({ ...prev, [val[0]]: val[1].reduce((p, v) => ({ ...p, [v.name]: v }), {}) }),\n            EmptyCards(...sections)\n        );\n};\n\nconst deserialize = (deck: DeckCards) =>\n    Object.entries(deck).reduce(\n        (str, section) =>\n            `${str}${section[0] !== SectionName.Default ? `#${section[0]}\\n` : \"\"}${Object.values(section[1]).reduce(\n                (s, card) => `${s}${card.amount} ${card.name}${card.comment ? ` # ${card.comment}` : \"\"}\\n`,\n                \"\"\n            )}\\n`,\n        \"\"\n    );\n\nconst CollectionParser = {\n    serialize,\n    deserialize,\n};\n\nexport default CollectionParser;\n","/* global gapi */\nimport React from \"react\";\nimport { AppStateT, Deck, DeckName, DeckProps, SectionName } from \"../State\";\nimport { Action } from \"../State/Actions\";\nimport { downloadCards } from \"../State/Thunks\";\nimport CollectionParser from \"./CollectionParser\";\n\nconst GoogleApiInit = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    clientId: process.env.REACT_APP_CLIENT_ID,\n    discoveryDocs: [\"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\"],\n    scope: \"profile https://www.googleapis.com/auth/drive.appdata https://www.googleapis.com/auth/drive.file\",\n};\n\nconst initClient = (onUpdateStatus: (isSignedIn: boolean) => void) => {\n    gapi.load(\"client:auth2\", () => {\n        gapi.client.init(GoogleApiInit).then(() => {\n            gapi.auth2.getAuthInstance().isSignedIn.listen(onUpdateStatus);\n            onUpdateStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n        }, console.error);\n    });\n};\n\nconst prepareAppData = (dispatch: React.Dispatch<Action>, state: AppStateT) => async () => {\n    var response = await gapi.client.drive.files.list({\n        spaces: \"appDataFolder\",\n        fields: \"nextPageToken, files(id, name, appProperties)\",\n    });\n\n    const collectionFile = response.result?.files?.find(f => f.appProperties?.name === DeckName.Collection);\n    if (!collectionFile) {\n        console.info(\"Creating collection...\");\n        await createNewDeck(dispatch, state)({ name: DeckName.Collection });\n    } else {\n        console.info(\"Loading collection...\");\n        await downloadDeck(dispatch, state)(DeckName.Collection, collectionFile);\n    }\n\n    const wishlistFile = response.result?.files?.find(f => f.appProperties?.name === DeckName.Wishlist);\n    if (!wishlistFile) {\n        console.info(\"Creating wishlist...\");\n        await createNewDeck(dispatch, state)({ name: DeckName.Wishlist });\n    } else {\n        console.info(\"Loading wishlist...\");\n        await downloadDeck(dispatch, state)(DeckName.Wishlist, wishlistFile);\n    }\n\n    const otherFiles = response.result?.files?.filter(f => f.appProperties?.name !== DeckName.Collection && f.appProperties?.name !== DeckName.Wishlist)!;\n    for (let i = 0; i < otherFiles.length; i++) {\n        const file = otherFiles[i];\n        const name = file.appProperties?.name ?? file.name?.match(/(.*?)\\.txt/)?.[0] ?? \"unnamed\";\n        downloadDeck(dispatch, state)(name, file);\n    }\n};\n\nconst createNewFile = async ({\n    name,\n    props,\n    fileContent,\n    folder,\n}: {\n    name: string;\n    props?: object;\n    fileContent?: string;\n    folder?: string[];\n}): Promise<string> => {\n    const file = new Blob([fileContent ?? \"\"], { type: \"text/plain\" });\n    const metadata = {\n        name,\n        mimeType: \"text/plain\",\n        appProperties: props ?? {},\n        parents: [\"appDataFolder\", ...(folder ?? [])],\n    };\n\n    const accessToken = gapi.auth.getToken().access_token;\n    const form = new FormData();\n    form.append(\"metadata\", new Blob([JSON.stringify(metadata)], { type: \"application/json\" }));\n    form.append(\"file\", file);\n\n    const res = await fetch(\"https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart&fields=id\", {\n        method: \"POST\",\n        headers: new Headers({ Authorization: \"Bearer \" + accessToken }),\n        body: form,\n    });\n    const val = await res.json();\n    return val.id;\n};\n\nconst updateFile = async ({ id, fileContent }: { id: string; fileContent: string }) => {\n    const file = new Blob([fileContent], { type: \"text/plain\" });\n\n    const accessToken = gapi.auth.getToken().access_token;\n    const form = new FormData();\n    form.append(\"file\", file);\n\n    const res = await fetch(`https://www.googleapis.com/upload/drive/v3/files/${id}?uploadType=media&fields=id`, {\n        method: \"PATCH\",\n        headers: new Headers({ Authorization: \"Bearer \" + accessToken }),\n        body: form,\n    });\n    const val = await res.json();\n    return val.id;\n};\n\nconst getFileContents = async ({ id }: { id: string }) => {\n    const res = await gapi.client.drive.files.get({\n        fileId: id,\n        alt: \"media\",\n    });\n    return res.body;\n};\n\nconst deleteFile = async ({ id }: { id: string }) => gapi.client.drive.files.delete({ fileId: id });\n\nconst createNewDeck = (dispatch: React.Dispatch<Action>, state: AppStateT) => async ({\n    name,\n    fileContent,\n    ...restProps\n}: DeckProps & { fileContent?: string }) => {\n    const deck: Deck = {\n        name,\n        cards: CollectionParser.serialize(fileContent, SectionName.Sideboard, SectionName.Maybeboard),\n        isDirty: false,\n        ...restProps,\n    };\n    dispatch({\n        type: \"CreateDeck\",\n        link: await createNewFile({\n            name: `${name}.txt`,\n            props: {\n                name,\n                ...restProps,\n            },\n            fileContent,\n        }),\n        ...deck,\n    });\n    downloadCards(dispatch, state)(deck);\n};\n\nconst downloadDeck = (dispatch: React.Dispatch<Action>, state: AppStateT) => async (name: string, file: gapi.client.drive.File) => {\n    const deck: Deck = {\n        name,\n        cards: CollectionParser.serialize(await GoogleApi.getFileContents({ id: file.id! }), SectionName.Sideboard, SectionName.Maybeboard),\n        isDirty: false,\n        previewUrl: file.appProperties?.previewUrl,\n    };\n    dispatch({ type: \"CreateDeck\", link: file.id!, ...deck });\n    downloadCards(dispatch, state)(deck);\n};\n\nconst deleteDeck = (dispatch: React.Dispatch<Action>) => async ({ name, id }: { name: string; id: string }) => {\n    await deleteFile({ id });\n    dispatch({ type: \"DeleteDeck\", name });\n};\n\nconst getProfile = () => {\n    return gapi.auth2\n        .getAuthInstance()\n        .currentUser.get()\n        .getBasicProfile();\n};\n\nconst signIn = () => gapi.auth2.getAuthInstance().signIn();\nconst signOut = () => gapi.auth2.getAuthInstance().signOut();\n\nexport type GoogleProfile = gapi.auth2.BasicProfile;\n\nconst GoogleApi = {\n    initClient,\n    getProfile,\n    signIn,\n    signOut,\n    prepareAppData,\n    createNewFile,\n    updateFile,\n    deleteFile,\n    createNewDeck,\n    downloadDeck,\n    deleteDeck,\n    getFileContents,\n};\nexport default GoogleApi;\n","import React from \"react\";\r\n\r\nexport const useThunk = <StateT, DispatchT, Func>(\r\n    context: React.Context<[StateT, React.Dispatch<DispatchT>]>,\r\n    func: (dispatch: React.Dispatch<DispatchT>, state: StateT) => Func\r\n) => {\r\n    const [state, dispatch] = React.useContext(context);\r\n    return func(dispatch, state);\r\n};\r\nexport default useThunk;\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Scry from \"../../Utility/Scry\";\r\n\r\ntype Props = {\r\n    label: string;\r\n    onNameSelect?: (name: string) => void;\r\n};\r\n\r\nconst CardNameAutocomplete: React.FC<Props> = ({ label, onNameSelect }) => {\r\n    const [value, setValue] = React.useState<string>(\"\");\r\n    const [open, setOpen] = React.useState(false);\r\n    const [options, setOptions] = React.useState<string[]>([]);\r\n    const [isLoading, setIsLoading] = React.useState<boolean>(false);\r\n    const [typingTimer, setTypingTimer] = React.useState<number | undefined>(undefined);\r\n\r\n    const onInputChange = (newValue: string, reason: \"input\" | \"reset\") => {\r\n        if (value === newValue || reason === \"reset\") {\r\n            return;\r\n        }\r\n        setValue(newValue);\r\n\r\n        clearTimeout(typingTimer);\r\n        setTypingTimer(\r\n            setTimeout(() => {\r\n                if (newValue.length < 2) {\r\n                    return;\r\n                }\r\n                setIsLoading(true);\r\n                Scry.Cards.Autocomplete(newValue).then(names => {\r\n                    setOptions(names);\r\n                    setIsLoading(false);\r\n                    if (names.length === 1 && names[0].toLowerCase().includes(newValue.toLowerCase())) {\r\n                        setValue(names[0]);\r\n                        onChange(names[0]);\r\n                        setOpen(false);\r\n                    }\r\n                });\r\n            }, 500)\r\n        );\r\n    };\r\n\r\n    const onChange = (newValue: string) => {\r\n        setValue(newValue);\r\n        setOptions([]);\r\n        onNameSelect && onNameSelect(newValue);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if (!open) {\r\n            setOptions([]);\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <Autocomplete\r\n            style={{ width: 300 }}\r\n            open={open}\r\n            value={value}\r\n            onOpen={() => setOpen(true)}\r\n            onClose={() => setOpen(false)}\r\n            onChange={(e, val) => onChange(val)}\r\n            onInputChange={(e, val, reason) => onInputChange(val, reason)}\r\n            options={options}\r\n            loading={isLoading}\r\n            renderInput={params => (\r\n                <TextField\r\n                    {...params}\r\n                    label={label}\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    InputProps={{\r\n                        ...params.InputProps,\r\n                        endAdornment: (\r\n                            <React.Fragment>\r\n                                {isLoading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                                {params.InputProps.endAdornment}\r\n                            </React.Fragment>\r\n                        ),\r\n                    }}\r\n                />\r\n            )}\r\n        />\r\n    );\r\n};\r\nexport default CardNameAutocomplete;\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport baseStyled, { css as styledCss, ThemedStyledInterface, ThemedStyledProps, ThemeProvider as ThemeProv } from \"styled-components\";\r\nimport { colors } from \"@material-ui/core\";\r\n\r\nconst additionalArgs = {\r\n    constants: {\r\n        drawerWidth: \"260px\",\r\n        drawerWidthClosed: \"72px\",\r\n        appletHeight: \"280px\",\r\n    },\r\n};\r\n\r\nexport const MainTheme = createMuiTheme(\r\n    {\r\n        palette: {\r\n            type: \"dark\",\r\n            primary: { main: colors.deepOrange[700] },\r\n            secondary: { main: colors.blueGrey[500] },\r\n        },\r\n    },\r\n    additionalArgs\r\n);\r\n\r\nexport const ThemeProvider = ThemeProv;\r\nexport const css = styledCss;\r\n\r\nexport type Theme = typeof MainTheme & typeof additionalArgs;\r\nexport type ComponentProps<T = {}> = ThemedStyledProps<T, Theme>;\r\nconst styled = baseStyled as ThemedStyledInterface<Theme>;\r\nexport default styled;\r\n","import { Avatar, Paper, Typography } from \"@material-ui/core\";\r\nimport styled from \"./Theme\";\r\n\r\nexport const FlexCol = styled.div`\r\n    flex: 1 1 auto;\r\n`;\r\n\r\nexport const AppletContent = styled(Paper)`\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: stretch;\r\n    min-height: ${p => p.theme.constants.appletHeight};\r\n    overflow: hidden;\r\n    padding: ${p => p.theme.spacing(4)}px;\r\n    ${p => p.theme.breakpoints.down(\"xs\")} {\r\n        & {\r\n            padding: ${p => p.theme.spacing(2)}px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const AppletActions = styled.div`\r\n    align-self: flex-end;\r\n`;\r\n\r\nexport const Title = styled(Typography).attrs(p => ({\r\n    component: \"h2\",\r\n    variant: \"h4\",\r\n    color: \"primary\",\r\n    gutterBottom: true,\r\n}))``;\r\n\r\nexport const DrawerAvatar = styled(Avatar)`\r\n    background-color: ${p => p.theme.palette.background.paper};\r\n    color: ${p => p.theme.palette.text.secondary};\r\n`;\r\n","import { Avatar, Button, ButtonGroup, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField } from \"@material-ui/core\";\nimport CollectionsIcon from \"@material-ui/icons/Collections\";\nimport React from \"react\";\nimport { useHistory } from \"react-router\";\nimport { AppState } from \"../../State\";\nimport GoogleApi from \"../../Utility/GoogleApi\";\nimport Scry from \"../../Utility/Scry\";\nimport useThunk from \"../../Utility/useThunk\";\nimport CardNameAutocomplete from \"../Styled/CardNameAutocomplete\";\nimport { AppletActions, AppletContent, FlexCol, Title } from \"../Styled/Grid\";\nimport styled from \"../Styled/Theme\";\n\nconst PreviewRow = styled.div`\n    display: flex;\n    margin-top: ${p => p.theme.spacing(1)}px;\n    align-items: center;\n\n    & .MuiAutocomplete-root {\n        flex-grow: 1;\n        margin-right: ${p => p.theme.spacing(1)}px;\n    }\n`;\n\nconst AddDeck: React.FC = () => {\n    const history = useHistory();\n    const [state] = React.useContext(AppState);\n    const createNewDeck = useThunk(AppState, GoogleApi.createNewDeck);\n\n    const [importText, setImportText] = React.useState<string>(\"\");\n    const [deckName, setDeckName] = React.useState<string>(\"\");\n    const [open, setOpen] = React.useState(false);\n    const [invalidName, setInvalidName] = React.useState<string | null>(null);\n\n    const [previewUrl, setPreviewUrl] = React.useState<string>(\"\");\n\n    const handleClickOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n\n    const handleImport = () => {\n        createNewDeck({ name: deckName, fileContent: importText, previewUrl });\n        history.push(`/decks/${encodeURIComponent(deckName)}`);\n    };\n\n    const validateName = (name: string) => {\n        setDeckName(name);\n        if (name === \"\") {\n            setInvalidName(\"Deck name can't be empty\");\n            return;\n        }\n        if (name.indexOf(\"%\") >= 0) {\n            setInvalidName(\"Deck name can't contain '%'\");\n            return;\n        }\n        if (state.decks[name]) {\n            setInvalidName(\"Deck with this name already exists\");\n            return;\n        }\n        setInvalidName(null);\n    };\n\n    const updatePreview = (name: string) => {\n        if (!name) {\n            setPreviewUrl(\"\");\n            return;\n        }\n        Scry.Cards.Named(name).then(card => {\n            setPreviewUrl(Scry.getImage(card, \"art_crop\") ?? \"\");\n        });\n    };\n\n    // eslint-disable-next-line\n    React.useEffect(() => validateName(\"\"), []);\n\n    return (\n        <AppletContent>\n            <Title>Add deck</Title>\n            <FlexCol>\n                <TextField\n                    label=\"Deck name\"\n                    variant=\"outlined\"\n                    error={!!invalidName}\n                    helperText={invalidName}\n                    value={deckName}\n                    onChange={e => validateName(e.target.value)}\n                    fullWidth\n                />\n                <PreviewRow>\n                    <CardNameAutocomplete label=\"Preview card\" onNameSelect={updatePreview} />\n                    <Avatar alt=\"Preview icon\" src={previewUrl}>\n                        <CollectionsIcon />\n                    </Avatar>\n                </PreviewRow>\n            </FlexCol>\n            <AppletActions>\n                <ButtonGroup size=\"small\">\n                    <Button disabled={!!invalidName} onClick={handleClickOpen}>\n                        Import\n                    </Button>\n                    <Button disabled={!!invalidName} color=\"primary\" onClick={handleImport}>\n                        Create empty\n                    </Button>\n                </ButtonGroup>\n            </AppletActions>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"import-deck-dialog\" fullWidth maxWidth=\"md\">\n                <DialogTitle id=\"import-deck-dialog\">Import</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>Paste exported deck below.</DialogContentText>\n                    <TextField\n                        autoFocus\n                        fullWidth\n                        label=\"Import\"\n                        multiline\n                        rows=\"15\"\n                        variant=\"outlined\"\n                        value={importText}\n                        onChange={e => setImportText(e.target.value)}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleImport} color=\"primary\">\n                        Import\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </AppletContent>\n    );\n};\n\nexport default AddDeck;\n","import { CircularProgress, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { AppletContent } from \"./Styled/Grid\";\r\nimport styled from \"./Styled/Theme\";\r\n\r\nconst Body = styled(AppletContent)`\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst MarginedTypography = styled(Typography)`\r\n    margin-top: ${p => p.theme.spacing(2)}px;\r\n`;\r\n\r\nconst Loading: React.FC = () => (\r\n    <Body>\r\n        <CircularProgress size={60} />\r\n        <MarginedTypography component=\"h2\" variant=\"h6\">\r\n            Loading...\r\n        </MarginedTypography>\r\n    </Body>\r\n);\r\nexport default Loading;\r\n","import { AssertionError } from \"assert\";\r\n\r\nfunction assert(condition: any, message: string): asserts condition {\r\n    if (!condition) {\r\n        throw new AssertionError({ message });\r\n    }\r\n}\r\nexport default assert;","import React from \"react\";\r\nimport { isNullOrUndefined } from \"util\";\r\nimport { CollectionCardProps } from \"../Components/Previews/CollectionPreview\";\r\nimport { AppState, DeckName, SectionName } from \"../State\";\r\nimport assert from \"./Assert\";\r\n\r\nconst useCardActions = ({ card, deckName, sectionName }: CollectionCardProps) => {\r\n    const [state, dispatch] = React.useContext(AppState);\r\n\r\n    const targetDeck = deckName ?? state.selectedDeck ?? null;\r\n    const isOnWishlist = () => state.decks[DeckName.Wishlist].cards[SectionName.Default][card.name] !== undefined;\r\n    const sections = (targetDeck ? Object.keys(state.decks[targetDeck].cards) : []).filter(s => s !== sectionName);\r\n    return {\r\n        updateCardQuantity: (val: number) => {\r\n            assert(!isNullOrUndefined(deckName), \"DeckName should not be empty if the preview actions are Deck\");\r\n            dispatch({\r\n                type: \"UpdateDeckCard\",\r\n                deckName,\r\n                sectionName: sectionName ?? SectionName.Default,\r\n                card: {\r\n                    ...card,\r\n                    amount: val,\r\n                },\r\n            });\r\n        },\r\n        openScryfallPage: () => card.scryfall_uri && window.open(card.scryfall_uri, \"_blank\"),\r\n        openScryfallSetPage: () => card.scryfall_set_uri && window.open(card.scryfall_set_uri, \"_blank\"),\r\n        isOnWishlist,\r\n        toggleWishlist: () =>\r\n            isOnWishlist()\r\n                ? dispatch({\r\n                    type: \"UpdateDeckCard\",\r\n                    deckName: DeckName.Wishlist,\r\n                    sectionName: SectionName.Default,\r\n                    card: {\r\n                        ...card,\r\n                        amount: 0,\r\n                    },\r\n                })\r\n                : dispatch({\r\n                    type: \"UpdateDeckCard\",\r\n                    deckName: DeckName.Wishlist,\r\n                    sectionName: SectionName.Default,\r\n                    card: {\r\n                        ...card,\r\n                        amount: 1,\r\n                    },\r\n                }),\r\n        wishlistTooltip: () => (isOnWishlist() ? \"Remove from wishlist\" : \"Add to wishlist\"),\r\n        removeCard: () => {\r\n            assert(!isNullOrUndefined(deckName), \"DeckName should not be empty if the preview actions are Deck\");\r\n            dispatch({\r\n                type: \"UpdateDeckCard\",\r\n                deckName,\r\n                sectionName: sectionName ?? SectionName.Default,\r\n                card: {\r\n                    ...card,\r\n                    amount: 0,\r\n                },\r\n            });\r\n        },\r\n        sections,\r\n        changeSection: (newSection: string) => {\r\n            assert(!isNullOrUndefined(deckName), \"DeckName should not be empty if the preview actions are Deck\");\r\n            dispatch({\r\n                type: \"UpdateDeckCard\",\r\n                deckName,\r\n                sectionName: sectionName ?? SectionName.Default,\r\n                card: {\r\n                    ...card,\r\n                    amount: 0,\r\n                },\r\n            });\r\n            dispatch({\r\n                type: \"UpdateDeckCard\",\r\n                deckName,\r\n                sectionName: newSection,\r\n                card: {\r\n                    ...card,\r\n                    amount: card.amount,\r\n                },\r\n            });\r\n        },\r\n        addToDeck: (section: string = SectionName.Default) => {\r\n            assert(!isNullOrUndefined(targetDeck), \"TargetDeck should not be empty if the preview actions are SearchDeck\");\r\n            dispatch({\r\n                type: \"UpdateDeckCard\",\r\n                deckName: targetDeck,\r\n                sectionName: section,\r\n                card: {\r\n                    ...card,\r\n                    amount: 1,\r\n                },\r\n            });\r\n        }\r\n    } as const;\r\n};\r\nexport default useCardActions;\r\n","import { Avatar, ClickAwayListener, IconButton, Popper } from \"@material-ui/core\";\r\nimport { AvatarProps } from \"@material-ui/core/Avatar\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\r\nimport React from \"react\";\r\nimport styled, { css } from \"./Theme\";\r\nimport { PxFromAvatarSize } from \"../../Utility\";\r\n\r\ntype StyledAvatarProps = { size: Props[\"size\"]; open: boolean } & AvatarProps;\r\n\r\nconst StyledAvatar = styled(Avatar).attrs<StyledAvatarProps>(p => ({\r\n    className: p.size === \"chip\" ? p.className + \" MuiChip-avatar MuiChip-avatarSmall\" : p.className,\r\n}))<StyledAvatarProps>`\r\n    cursor: pointer;\r\n    color: ${p => p.theme.palette.text.primary};\r\n\r\n    ${p =>\r\n        p.open &&\r\n        css`\r\n            background-color: ${p.theme.palette.grey[500]};\r\n        `}\r\n\r\n    ${p =>\r\n        p.size === \"inline\" &&\r\n        css`\r\n            width: ${p.theme.spacing(3)}px;\r\n            height: ${p.theme.spacing(3)}px;\r\n            font-size: 0.875rem;\r\n        `}\r\n\r\n    ${p =>\r\n        !p.size &&\r\n        css`\r\n            width: 48px;\r\n            height: 48px;\r\n            font-size: 2rem;\r\n        `}\r\n`;\r\n\r\nconst Body = styled.div<{ size: Props[\"size\"] }>`\r\n    display: flex;\r\n    flex-direction: column;\r\n    transform: translate(calc(50% + ${p => PxFromAvatarSize(p.size)}px), calc(-100% + ${p => PxFromAvatarSize(p.size)}px));\r\n    background-color: ${p => p.theme.palette.grey[600]};\r\n    border-radius: ${p => PxFromAvatarSize(p.size)}px;\r\n`;\r\n\r\nconst Arrows = styled(IconButton)<{ s: Props[\"size\"] }>`\r\n    height: ${p => (!p.s ? 48 : p.s === \"chip\" ? 18 : 24)}px;\r\n    width: ${p => (!p.s ? 48 : p.s === \"chip\" ? 18 : 24)}px;\r\n    padding: 0;\r\n    ${p =>\r\n        p.s === \"chip\" &&\r\n        css`\r\n            & .MuiIconButton-label {\r\n                margin-top: -3px;\r\n            }\r\n        `}\r\n    &:first-of-type {\r\n        border-bottom-left-radius: 0;\r\n        border-bottom-right-radius: 0;\r\n    }\r\n    &:last-of-type {\r\n        border-top-left-radius: 0;\r\n        border-top-right-radius: 0;\r\n    }\r\n`;\r\n\r\ntype Props = {\r\n    val: number;\r\n    onChange: (val: number) => void;\r\n    size?: \"chip\" | \"inline\";\r\n    className?: string;\r\n};\r\n\r\nconst IncrementNumber: React.FC<Props> = ({ val, onChange, size, className }) => {\r\n    const [anchorEl, setAnchorEl] = React.useState<HTMLDivElement | null>(null);\r\n    const open = !!anchorEl;\r\n\r\n    const handleClick = (e: React.MouseEvent<HTMLDivElement>) => {\r\n        setAnchorEl(!anchorEl ? e.currentTarget : null);\r\n        e.stopPropagation();\r\n    };\r\n\r\n    const handleClose = () => setAnchorEl(null);\r\n\r\n    const onIncrement = (incr: number) => (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        e.stopPropagation();\r\n        onChange(val + incr);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <StyledAvatar className={className} title=\"\" size={size} onClick={handleClick} open={open}>\r\n                {val}\r\n            </StyledAvatar>\r\n            <Popper open={open} anchorEl={anchorEl}>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                    <Body size={size}>\r\n                        <Arrows s={size} onClick={onIncrement(1)}>\r\n                            <ArrowDropUpIcon />\r\n                        </Arrows>\r\n                        <Arrows s={size} onClick={onIncrement(-1)}>\r\n                            <ArrowDropDownIcon />\r\n                        </Arrows>\r\n                    </Body>\r\n                </ClickAwayListener>\r\n            </Popper>\r\n        </>\r\n    );\r\n};\r\nexport default IncrementNumber;\r\n","import React from \"react\";\r\nimport { AppState } from \"../../State\";\r\nimport { ScryCardSymbol } from \"../../Utility/Scry/Types\";\r\nimport styled, { css } from \"./Theme\";\r\nimport { TypographyProps } from \"@material-ui/core/Typography\";\r\n\r\nconst sizeMap: [TypographyProps[\"variant\"], number][] = [\r\n    [\"h1\", 80],\r\n    [\"h2\", 51],\r\n    [\"h3\", 42],\r\n    [\"h4\", 30],\r\n    [\"h5\", 25],\r\n    [\"h6\", 20],\r\n    [\"subtitle1\", 16],\r\n    [\"subtitle2\", 14],\r\n    [\"body1\", 16],\r\n    [\"body2\", 14],\r\n    [\"caption\", 12],\r\n    [\"button\", 16],\r\n    [\"overline\", 14],\r\n];\r\n\r\nconst Symbol = styled.svg`\r\n    display: inline-block;\r\n    height: 16px;\r\n    width: 16px;\r\n    margin: 1px 1px -2px 1px;\r\n\r\n    ${p =>\r\n        sizeMap.map(\r\n            ([v, size]) => css`\r\n                .MuiTypography-${v} & {\r\n                    height: ${size}px;\r\n                    width: ${size}px;\r\n                }\r\n            `\r\n        )}\r\n`;\r\n\r\ntype Props = {\r\n    symbol: string;\r\n};\r\n\r\nconst SymbolIcon: React.FC<Props> = ({ symbol }) => {\r\n    const [state] = React.useContext(AppState);\r\n    const [symbolObj, setSymbolObj] = React.useState<ScryCardSymbol>();\r\n    React.useEffect(() => {\r\n        setSymbolObj(state.symbolList[symbol] ?? Object.values(state.symbolList).find(s => s.loose_variant === symbol));\r\n    }, [symbol, state.symbolList]);\r\n    return symbolObj ? <Symbol dangerouslySetInnerHTML={{ __html: symbolObj.svg }} /> : <>{symbol}</>;\r\n};\r\n\r\nexport default SymbolIcon;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { TypographyProps } from \"@material-ui/core/Typography\";\r\nimport SymbolIcon from \"./SymbolIcon\";\r\n\r\ntype Props = TypographyProps & {\r\n    text: string;\r\n};\r\n\r\nconst SymbolTypography: React.FC<Props> = ({ text, ...typographyProps }) => {\r\n    const [parsed, setParsed] = React.useState<JSX.Element[]>([]);\r\n    React.useEffect(() => {\r\n        setParsed((text.match(/({.*?})|([^{]+)/g) ?? []).map((m, i) => (m[0] === \"{\" ? <SymbolIcon key={i} symbol={m} /> : <span key={i}>{m}</span>)));\r\n    }, [text]);\r\n    return <Typography {...typographyProps}>{parsed}</Typography>;\r\n};\r\n\r\nexport default SymbolTypography;\r\n","import { Chip } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport useCardActions from \"../../Utility/useCardAction\";\r\nimport IncrementNumber from \"../Styled/IncrementNumber\";\r\nimport styled from \"../Styled/Theme\";\r\nimport SymbolTypography from \"../Styled/SymbolTypography\";\r\nimport { CollectionCardProps } from \"./CollectionPreview\";\r\n\r\nconst CustomChip = styled(Chip)`\r\n    width: 100%;\r\n\r\n    & .MuiChip-label {\r\n        flex: 1 1 auto;\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n    }\r\n\r\n    & .MuiChip-deleteIcon {\r\n        width: unset;\r\n        height: unset;\r\n        flex-shrink: 0;\r\n        margin-left: ${p => p.theme.spacing(1)}px;\r\n        margin-top: 1px;\r\n    }\r\n`;\r\n\r\nconst CompressedCard: React.FC<CollectionCardProps> = props => {\r\n    const { updateCardQuantity, openScryfallPage } = useCardActions(props);\r\n    const { card } = props;\r\n    return (\r\n        <CustomChip\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            label={card.name}\r\n            deleteIcon={<SymbolTypography text={card.mana_cost ?? \"\"} noWrap />}\r\n            avatar={<IncrementNumber size=\"chip\" val={card.amount} onChange={updateCardQuantity} />}\r\n            onDelete={openScryfallPage}\r\n            onClick={openScryfallPage}\r\n            title=\"Open on scryfall\"\r\n        />\r\n    );\r\n};\r\nexport default CompressedCard;\r\n","import styled from \"./Theme\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst IndentedTypography = styled(Typography)`\r\n    text-indent: ${p => p.theme.spacing(1)}px;\r\n`;\r\nexport default IndentedTypography;\r\n","import { Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { CollectionPreviewProps } from \"./CollectionPreview\";\r\nimport CompressedCard from \"./CompressedCard\";\r\nimport IndentedTypography from \"../Styled/IndentedTypography\";\r\n\r\nconst CompressedCollecion: React.FC<CollectionPreviewProps> = ({ cards, sortBy, sortOrder, showGroups, ...props }) => {\r\n    return (\r\n        <Grid container direction=\"column\">\r\n            {cards.length >= 1 ? (\r\n                cards.map(c => (\r\n                    <Grid item key={c.name} xs zeroMinWidth>\r\n                        <CompressedCard card={c} {...props} />\r\n                    </Grid>\r\n                ))\r\n            ) : (\r\n                <Grid item xs={12}>\r\n                    <IndentedTypography color=\"textSecondary\" variant=\"subtitle2\">Empty</IndentedTypography>\r\n                </Grid>\r\n            )}\r\n        </Grid>\r\n    );\r\n};\r\nexport default CompressedCollecion;\r\n","import { IconButton, Tooltip, Typography } from \"@material-ui/core\";\r\nimport { IconButtonProps } from \"@material-ui/core/IconButton/IconButton\";\r\nimport { darken } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport styled, { css } from \"./Theme\";\r\n\r\nconst StyledIconButton = styled(IconButton)<{ background?: \"primary\" | \"secondary\" }>`\r\n    ${p =>\r\n        p.background &&\r\n        css`\r\n            background-color: ${p.theme.palette[p.background].main};\r\n            &.Mui-disabled {\r\n                background-color: ${darken(p.theme.palette[p.background].main, 0.3)};\r\n            }\r\n        `};\r\n    &:hover {\r\n        ${p =>\r\n        p.background &&\r\n            css`\r\n                background-color: ${p.theme.palette[p.background].dark};\r\n            `};\r\n    }\r\n`;\r\n\r\ntype Props = {\r\n    onClick: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\r\n    title: string;\r\n    size?: IconButtonProps[\"size\"];\r\n    disabled?: boolean;\r\n    background?: \"primary\" | \"secondary\";\r\n};\r\n\r\nconst TooltipButton: React.FC<Props> = ({ onClick, title, size, background, disabled, children }) => {\r\n    return (\r\n        <Tooltip title={title}>\r\n            <span>\r\n                <StyledIconButton size={size} background={background} disabled={disabled} onClick={onClick} aria-label={title}>\r\n                    {children}\r\n                    <Typography variant=\"srOnly\">{title}</Typography>\r\n                </StyledIconButton>\r\n            </span>\r\n        </Tooltip>\r\n    );\r\n};\r\nexport default TooltipButton;\r\n","import { IconButtonProps } from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport React from \"react\";\r\nimport useCardActions from \"../../../Utility/useCardAction\";\r\nimport TooltipButton from \"../../Styled/TooltipButton\";\r\n\r\ntype Props = {\r\n    actions: ReturnType<typeof useCardActions>;\r\n    size?: IconButtonProps[\"size\"];\r\n    background?: \"primary\" | \"secondary\";\r\n};\r\n\r\nconst WishlistButton: React.FC<Props> = ({ actions, size, background }) => {\r\n    return (\r\n        <TooltipButton title={actions.wishlistTooltip()} onClick={actions.toggleWishlist} background={background} size={size}>\r\n            {actions.isOnWishlist() ? <FavoriteIcon /> : <FavoriteBorderIcon />}\r\n        </TooltipButton>\r\n    );\r\n};\r\nexport default WishlistButton;\r\n","import { IconButtonProps } from \"@material-ui/core/IconButton\";\r\nimport React from \"react\";\r\nimport useCardActions from \"../../../Utility/useCardAction\";\r\nimport SwapVertIcon from \"@material-ui/icons/SwapVert\";\r\nimport TooltipButton from \"../../Styled/TooltipButton\";\r\nimport { ClickAwayListener, Grow, MenuItem, MenuList, Paper, Popper } from \"@material-ui/core\";\r\nimport { SectionName } from \"../../../State\";\r\n\r\ntype Props = {\r\n    actions: ReturnType<typeof useCardActions>;\r\n    size?: IconButtonProps[\"size\"];\r\n    background?: \"primary\" | \"secondary\";\r\n};\r\n\r\nconst ChangeSectionButton: React.FC<Props> = ({ actions, size, background }) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef<HTMLDivElement>(null);\r\n\r\n    const handleToggle = () => setOpen(prevOpen => !prevOpen);\r\n    const handleClose = (event: React.MouseEvent<Document, MouseEvent>) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <span ref={anchorRef}>\r\n                <TooltipButton title=\"Change section\" onClick={handleToggle} disabled={actions.sections.length <= 0} background={background} size={size}>\r\n                    <SwapVertIcon />\r\n                </TooltipButton>\r\n            </span>\r\n            <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition>\r\n                {({ TransitionProps, placement }) => (\r\n                    <Grow\r\n                        {...TransitionProps}\r\n                        style={{\r\n                            transformOrigin: placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n                        }}\r\n                    >\r\n                        <Paper elevation={5}>\r\n                            <ClickAwayListener onClickAway={handleClose}>\r\n                                <MenuList>\r\n                                    {(actions.sections).map(s => (\r\n                                        <MenuItem\r\n                                            key={s}\r\n                                            onClick={() => actions.changeSection(s)}\r\n                                        >\r\n                                            {s === SectionName.Default ? \"Default\" : s}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </MenuList>\r\n                            </ClickAwayListener>\r\n                        </Paper>\r\n                    </Grow>\r\n                )}\r\n            </Popper>\r\n        </>\r\n    );\r\n};\r\nexport default ChangeSectionButton;\r\n","import { IconButtonProps } from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport React from \"react\";\r\nimport useCardActions from \"../../../Utility/useCardAction\";\r\nimport TooltipButton from \"../../Styled/TooltipButton\";\r\n\r\ntype Props = {\r\n    actions: ReturnType<typeof useCardActions>;\r\n    size?: IconButtonProps[\"size\"];\r\n    background?: \"primary\" | \"secondary\";\r\n};\r\n\r\nconst DeleteButton: React.FC<Props> = ({ actions, size, background }) => {\r\n    return (\r\n        <TooltipButton title=\"Remove card\" onClick={actions.removeCard} background={background} size={size}>\r\n            <DeleteIcon />\r\n        </TooltipButton>\r\n    );\r\n};\r\nexport default DeleteButton;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(-60 -58)\",\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, React.createElement(\"circle\", {\n  cx: 290,\n  cy: 288,\n  r: 230\n}), React.createElement(\"path\", {\n  d: \"M343.058 89.985c-109.36-29.303-221.77 35.597-251.073 144.957-29.303 109.36 35.597 221.77 144.957 251.073 109.36 29.303 221.77-35.597 251.073-144.957 29.303-109.36-35.597-221.77-144.957-251.073zM256.342 451.95l.276.71c1.172 3.187 3.562 5.776 6.644 7.2 3.082 1.422 6.603 1.562 9.788.387l48.355-17.774c3.184-1.175 6.706-1.035 9.787.388 3.082 1.424 5.472 4.013 6.644 7.2l.19.56c2.105 5.852-.304 12.37-5.71 15.448-93.23 22.17-187.912-30.724-217.912-121.736s14.67-189.84 102.81-227.453c5.144.502 9.544 3.91 11.32 8.762 2.578 6.977 10.317 10.55 17.3 7.99l15.73-5.803c3.186-1.176 6.707-1.036 9.79.387 3.08 1.423 5.47 4.012 6.643 7.198l.19.56c1.174 3.185 1.034 6.706-.39 9.788-1.422 3.082-4.01 5.472-7.197 6.644l-109.46 40.366c-3.187 1.172-5.777 3.562-7.2 6.644-1.422 3.082-1.562 6.603-.388 9.788l.19.56c1.172 3.186 3.562 5.775 6.643 7.198 3.082 1.423 6.603 1.563 9.788.388l80.06-29.483c3.184-1.174 6.705-1.034 9.787.388 3.082 1.423 5.472 4.013 6.644 7.2l.19.56c1.173 3.184 1.034 6.705-.39 9.787-1.422 3.08-4.01 5.47-7.197 6.643l-127.814 47.08c-3.186 1.17-5.776 3.56-7.2 6.643-1.42 3.082-1.56 6.603-.387 9.788l.19.56c1.172 3.186 3.562 5.775 6.643 7.198 3.08 1.423 6.602 1.563 9.787.388L297.72 226.4c3.184-1.175 6.705-1.036 9.787.387 3.082 1.423 5.472 4.012 6.644 7.198l.467 1.27c1.174 3.186 1.035 6.707-.388 9.79-1.424 3.08-4.014 5.47-7.2 6.643l-113 41.54c-3.187 1.172-5.777 3.562-7.2 6.644-1.422 3.08-1.562 6.603-.387 9.787l.19.56c1.17 3.185 3.56 5.775 6.643 7.198 3.08 1.423 6.603 1.562 9.787.388l51.798-19.06c3.186-1.174 6.707-1.034 9.79.39 3.08 1.422 5.47 4.01 6.643 7.197l.19.56c1.174 3.185 1.034 6.706-.39 9.788-1.422 3.083-4.01 5.473-7.197 6.644l-89.085 32.754c-3.185 1.17-5.774 3.56-7.197 6.643-1.423 3.083-1.562 6.604-.388 9.79l.19.56c1.17 3.185 3.56 5.775 6.643 7.197 3.082 1.423 6.603 1.563 9.788.388L304.563 336.3c3.185-1.173 6.706-1.034 9.788.39 3.083 1.422 5.473 4.01 6.644 7.197l.19.56c1.174 3.185 1.035 6.706-.388 9.788s-4.013 5.472-7.198 6.644l-74.954 27.54c-3.186 1.17-5.776 3.56-7.2 6.643-1.422 3.082-1.56 6.603-.387 9.788l.19.56c1.172 3.187 3.562 5.777 6.643 7.2 3.082 1.422 6.603 1.562 9.788.387l94.147-34.537c3.185-1.175 6.706-1.035 9.788.388s5.472 4.012 6.644 7.198c2.428 6.58-.893 13.887-7.447 16.384l-86.903 33.168c-3.18 1.18-5.764 3.574-7.18 6.658-1.414 3.083-1.547 6.603-.367 9.784l-.018-.09z\",\n  fill: \"#FFF\"\n}));\n\nvar SvgScryfallLogo = function SvgScryfallLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    className: \"\",\n    width: 460,\n    height: 460,\n    viewBox: \"0 0 460 460\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgScryfallLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/scryfallLogo.89ac5845.svg\";\nexport { ForwardRef as ReactComponent };","import { IconButtonProps } from \"@material-ui/core/IconButton\";\r\nimport React from \"react\";\r\nimport { ReactComponent as ScryfallIcon } from \"../../../Assets/scryfallLogo.svg\";\r\nimport useCardActions from \"../../../Utility/useCardAction\";\r\nimport TooltipButton from \"../../Styled/TooltipButton\";\r\n\r\n\r\ntype Props = {\r\n    actions: ReturnType<typeof useCardActions>;\r\n    size?: IconButtonProps[\"size\"];\r\n    background?: \"primary\" | \"secondary\";\r\n};\r\n\r\nconst OpenScryfallButton: React.FC<Props> = ({ actions, size, background }) => {\r\n    return (\r\n        <TooltipButton title=\"Open on scryfall\" onClick={actions.openScryfallPage} background={background} size={size}>\r\n            <ScryfallIcon width=\"24\" height=\"24\" />\r\n        </TooltipButton>\r\n    );\r\n};\r\nexport default OpenScryfallButton;\r\n","import React from \"react\";\r\nimport { IconButtonProps } from \"@material-ui/core/IconButton\";\r\nimport { CollectionCardProps } from \"../CollectionPreview\";\r\nimport useCardActions from \"../../../Utility/useCardAction\";\r\nimport WishlistButton from \"./WishlistButton\";\r\nimport ChangeSectionButton from \"./ChangeSectionButton\";\r\nimport DeleteButton from \"./DeleteButton\";\r\nimport OpenScryfallButton from \"./OpenScryfallButton\";\r\n\r\ntype Props = {\r\n    size?: IconButtonProps[\"size\"];\r\n    className?: string;\r\n} & CollectionCardProps;\r\n\r\nconst CardActions: React.FC<Props> = ({ size, className, ...props}) => {\r\n    const actions = useCardActions(props);\r\n    return (\r\n        <div className={className}>\r\n            <WishlistButton actions={actions} size={size} />\r\n            <ChangeSectionButton actions={actions} size={size} />\r\n            <DeleteButton actions={actions} size={size} />\r\n            <OpenScryfallButton actions={actions} size={size} />\r\n        </div>\r\n    );\r\n};\r\nexport default CardActions;\r\n","import React from \"react\";\r\nimport { isNullOrUndefined } from \"util\";\r\nimport { PxFromAvatarSize } from \"../../Utility\";\r\nimport Scry from \"../../Utility/Scry\";\r\nimport useCardActions from \"../../Utility/useCardAction\";\r\nimport IncrementNumber from \"../Styled/IncrementNumber\";\r\nimport styled from \"../Styled/Theme\";\r\nimport CardActions from \"./ActionButtons/CardActions\";\r\nimport { CollectionCardProps } from \"./CollectionPreview\";\r\n\r\nconst Body = styled.div`\r\n    padding-bottom: 139.344262295%;\r\n    width: 100%;\r\n    height: 0;\r\n    position: relative;\r\n`;\r\n\r\nconst Image = styled.img`\r\n    border-radius: 4.75% / 3.5%;\r\n    background-image: repeating-linear-gradient(-55deg, #ddd, #ddd 5px, #ccc 5px, #ccc 10px);\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst Actions = styled(CardActions)`\r\n    position: absolute;\r\n    top: ${p => p.theme.spacing(1)}px;\r\n    right: ${p => p.theme.spacing(1)}px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: ${p => p.theme.palette.grey[600]};\r\n    border-radius: ${PxFromAvatarSize(undefined)}px;\r\n\r\n    display: none;\r\n    ${Body}:hover & {\r\n        display: flex;\r\n    }\r\n`;\r\n\r\nconst StyledIncrement = styled(IncrementNumber)`\r\n    position: absolute;\r\n    top: ${p => p.theme.spacing(7)}px;\r\n    left: ${p => p.theme.spacing(3)}px;\r\n    background-color: ${p => p.theme.palette.background.default};\r\n`;\r\n\r\nconst ImagesCard: React.FC<CollectionCardProps> = props => {\r\n    const actions = useCardActions(props);\r\n    const { card } = props;\r\n\r\n    return (\r\n        <Body>\r\n            <Image src={Scry.getImage(card, \"normal\") ?? \"\"} title={card.name} />\r\n            {!isNullOrUndefined(card.amount) && <StyledIncrement val={card.amount} onChange={actions.updateCardQuantity} />}\r\n            <Actions {...props} />\r\n        </Body>\r\n    );\r\n};\r\nexport default ImagesCard;\r\n","import { Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport IndentedTypography from \"../Styled/IndentedTypography\";\r\nimport { CollectionPreviewProps } from \"./CollectionPreview\";\r\nimport ImagesCard from \"./ImagesCard\";\r\n\r\nconst ImagesCollecion: React.FC<CollectionPreviewProps> = ({ cards, sortBy, sortOrder, showGroups, ...props }) => {\r\n    return (\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n            {cards.length >= 1 ? (\r\n                cards.map(c => (\r\n                    <Grid key={c.name} item xs={12} sm={6} lg={4} xl={3}>\r\n                        <ImagesCard card={c} {...props} />\r\n                    </Grid>\r\n                ))\r\n            ) : (\r\n                <Grid item xs={12}>\r\n                    <IndentedTypography color=\"textSecondary\">Empty</IndentedTypography>\r\n                </Grid>\r\n            )}\r\n        </Grid>\r\n    );\r\n};\r\nexport default ImagesCollecion;\r\n","import React from \"react\";\r\nimport { AppState } from \"../../State\";\r\nimport { ScryCardRarity, ScrySet } from \"../../Utility/Scry/Types\";\r\nimport styled from \"./Theme\";\r\n\r\nconst Set = styled.svg<{ rarity: ScryCardRarity }>`\r\n    width: 25px;\r\n    height: 20px;\r\n    fill: url(#rarity-${p => p.rarity});\r\n`;\r\n\r\ntype Props = {\r\n    set: string;\r\n    rarity: ScryCardRarity;\r\n};\r\n\r\nconst SetIcon: React.FC<Props> = ({ set, rarity }) => {\r\n    const [state] = React.useContext(AppState);\r\n    const [setObj, setSetObj] = React.useState<ScrySet>();\r\n    React.useEffect(() => {\r\n        setSetObj(state.setList[set]);\r\n    }, [set, state.setList]);\r\n    return setObj ? (\r\n        <Set rarity={rarity}>\r\n            <defs>\r\n                <linearGradient id=\"rarity-common\">\r\n                    <stop offset=\"0%\" stopColor=\"#000\" />\r\n                </linearGradient>\r\n                <linearGradient id=\"rarity-uncommon\" gradientTransform=\"rotate(90)\">\r\n                    <stop offset=\"0%\" stopColor=\"#4d565a\" />\r\n                    <stop offset=\"50%\" stopColor=\"#a0c3d3\" />\r\n                    <stop offset=\"100%\" stopColor=\"#4d565a\" />\r\n                </linearGradient>\r\n                <linearGradient id=\"rarity-rare\" gradientTransform=\"rotate(90)\">\r\n                    <stop offset=\"0%\" stopColor=\"#85723e\" />\r\n                    <stop offset=\"50%\" stopColor=\"#d4b975\" />\r\n                    <stop offset=\"100%\" stopColor=\"#85723e\" />\r\n                </linearGradient>\r\n                <linearGradient id=\"rarity-mythic\" gradientTransform=\"rotate(90)\">\r\n                    <stop offset=\"0%\" stopColor=\"#b02911\" />\r\n                    <stop offset=\"50%\" stopColor=\"#e87f03\" />\r\n                    <stop offset=\"100%\" stopColor=\"#b02911\" />\r\n                </linearGradient>\r\n            </defs>\r\n            <svg dangerouslySetInnerHTML={{ __html: setObj.icon_svg }} />\r\n        </Set>\r\n    ) : (\r\n        <>{set}</>\r\n    );\r\n};\r\n\r\nexport default SetIcon;\r\n","import { Link, TableCell, TableRow } from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport React from \"react\";\r\nimport { isNullOrUndefined } from \"util\";\r\nimport { PxFromAvatarSize } from \"../../Utility\";\r\nimport useCardActions from \"../../Utility/useCardAction\";\r\nimport IncrementNumber from \"../Styled/IncrementNumber\";\r\nimport SetIcon from \"../Styled/SetIcon\";\r\nimport SymbolTypography from \"../Styled/SymbolTypography\";\r\nimport styled, { css } from \"../Styled/Theme\";\r\nimport TooltipButton from \"../Styled/TooltipButton\";\r\nimport CardActions from \"./ActionButtons/CardActions\";\r\nimport { CollectionCardProps } from \"./CollectionPreview\";\r\nimport { NameCell, SetWidthCell } from \"./ListCollection\";\r\n\r\nconst StyledRow = styled(TableRow)`\r\n    &:hover {\r\n        background-image: linear-gradient(\r\n            90deg,\r\n            rgba(0, 0, 0, 0),\r\n            ${p => p.theme.palette.background.default} 10%,\r\n            ${p => p.theme.palette.background.default} 90%,\r\n            rgba(0, 0, 0, 0)\r\n        );\r\n    }\r\n`;\r\n\r\nconst Actions = styled(CardActions)<{ open: boolean }>`\r\n    white-space: nowrap;\r\n\r\n    & > *:not(:last-child) {\r\n        margin-right: ${p => p.theme.spacing(0.5)}px;\r\n    }\r\n\r\n    ${p => p.theme.breakpoints.down(\"xs\")} {\r\n        & {\r\n            ${p =>\r\n        !p.open &&\r\n                css`\r\n                    display: none;\r\n                `}\r\n\r\n            ${p =>\r\n        p.open &&\r\n                css`\r\n                    background-color: ${p => p.theme.palette.grey[600]};\r\n                    border-radius: ${p => PxFromAvatarSize(\"inline\")}px;\r\n                    position: absolute;\r\n                    transform: translateX(calc(-100% - 4px));\r\n                `}\r\n        }\r\n    }\r\n`;\r\n\r\nconst ActionsMenu = styled.div`\r\n    display: none;\r\n    ${p => p.theme.breakpoints.down(\"xs\")} {\r\n        & {\r\n            display: initial;\r\n        }\r\n    }\r\n`;\r\n\r\nconst ListCard: React.FC<CollectionCardProps> = props => {\r\n    const actions = useCardActions(props);\r\n    const { card } = props;\r\n\r\n    const [actionsOpen, setActionsOpen] = React.useState(false);\r\n    const toggleActionsOpen = () => setActionsOpen(prev => !prev);\r\n\r\n    return (\r\n        <StyledRow>\r\n            <SetWidthCell width=\"40px\" component=\"th\" scope=\"row\" align=\"center\">\r\n                {!isNullOrUndefined(card.amount) ? <IncrementNumber size=\"inline\" val={card.amount} onChange={actions.updateCardQuantity} /> : \"-\"}\r\n            </SetWidthCell>\r\n            <NameCell>{card.name}</NameCell>\r\n            <SetWidthCell width=\"40px\" align=\"center\">\r\n                <Link href=\"#\" onClick={actions.openScryfallSetPage} color=\"inherit\" title=\"Open set on scryfall\">\r\n                    <SetIcon set={card.set} rarity={card.rarity} />\r\n                </Link>\r\n            </SetWidthCell>\r\n            <TableCell>\r\n                <SymbolTypography text={card.mana_cost ?? \"\"} noWrap />\r\n            </TableCell>\r\n            <TableCell style={{ position: \"relative\" }}>\r\n                <Actions {...props} open={actionsOpen} size=\"small\" />\r\n                <ActionsMenu>\r\n                    <TooltipButton title=\"Actions\" onClick={toggleActionsOpen} size=\"small\">\r\n                        <MenuIcon />\r\n                    </TooltipButton>\r\n                </ActionsMenu>\r\n            </TableCell>\r\n        </StyledRow>\r\n    );\r\n};\r\nexport default ListCard;\r\n","import { Table, TableBody, TableCell, TableHead, TableRow } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport IndentedTypography from \"../Styled/IndentedTypography\";\r\nimport styled from \"../Styled/Theme\";\r\nimport { CollectionPreviewProps } from \"./CollectionPreview\";\r\nimport ListCard from \"./ListCard\";\r\n\r\nconst CustomPaddingTable = styled(Table)`\r\n    width: 100%;\r\n    overflow-y: scroll;\r\n    & .MuiTableCell-sizeSmall {\r\n        padding: ${p => p.theme.spacing(0.25, 1)};\r\n    }\r\n`;\r\n\r\nexport const SetWidthCell = styled(TableCell).attrs<{ width: string }>(p => ({\r\n    width: p.width,\r\n}))<{ width: string }>``;\r\n\r\nexport const NameCell = styled(TableCell)`\r\n    width: 60%;\r\n    max-width: 120px;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst ListCollecion: React.FC<CollectionPreviewProps> = ({ cards, sortBy, sortOrder, showGroups, ...props }) => {\r\n    return (\r\n        <CustomPaddingTable size=\"small\" aria-label=\"card table\">\r\n            <TableHead>\r\n                <TableRow>\r\n                    <SetWidthCell width=\"40px\" align=\"center\">\r\n                        #\r\n                    </SetWidthCell>\r\n                    <NameCell>Name</NameCell>\r\n                    <SetWidthCell width=\"40px\" align=\"center\">\r\n                        Set\r\n                    </SetWidthCell>\r\n                    <TableCell>Cost</TableCell>\r\n                    <TableCell>Actions</TableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                {cards.length >= 1 ? (\r\n                    cards.map(c => <ListCard key={c.name} card={c} {...props} />)\r\n                ) : (\r\n                    <TableRow>\r\n                        <TableCell colSpan={6}>\r\n                            <IndentedTypography color=\"textSecondary\">Empty</IndentedTypography>\r\n                        </TableCell>\r\n                    </TableRow>\r\n                )}\r\n            </TableBody>\r\n        </CustomPaddingTable>\r\n    );\r\n};\r\nexport default ListCollecion;\r\n","import { Typography } from \"@material-ui/core\";\r\nimport omit from \"lodash.omit\";\r\nimport React from \"react\";\r\nimport { DeckCard, SectionName } from \"../../State\";\r\nimport { ScryCard } from \"../../Utility/Scry/Types\";\r\nimport CompressedCollecion from \"./CompressedCollection\";\r\nimport ImagesCollecion from \"./ImagesCollection\";\r\nimport ListCollecion from \"./ListCollection\";\r\n\r\nexport type PreviewStyle = \"Standard\" | \"List\" | \"Images\" | \"Compressed\";\r\nexport type PreviewActions = \"SearchDeck\" | \"SearchWishlist\" | \"Deck\";\r\nexport type SortByOptions = \"Name\" | \"Cmc\" | \"Type\" | \"Rarity\";\r\nexport type SortOrderOptions = \"Asc\" | \"Desc\";\r\n\r\nexport type CollectionPreviewProps = {\r\n    cards: (DeckCard & ScryCard)[];\r\n    actions: PreviewActions;\r\n    sortBy: SortByOptions;\r\n    sortOrder: SortOrderOptions;\r\n    showGroups: boolean;\r\n    deckName?: string;\r\n    sectionName?: string;\r\n};\r\n\r\nexport type CollectionCardProps = {\r\n    card: DeckCard & ScryCard;\r\n    actions: PreviewActions;\r\n    deckName?: string;\r\n    sectionName?: string;\r\n};\r\n\r\nconst desc = <T extends object>(a: T, b: T, orderBy: keyof T, func: <U extends any>(v: U) => U | number) => {\r\n    if (func(b[orderBy]) < func(a[orderBy])) {\r\n        return -1;\r\n    }\r\n    if (func(b[orderBy]) > func(a[orderBy])) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n};\r\n\r\nconst getSorting = <T extends object>(\r\n    order: SortOrderOptions,\r\n    orderBy: keyof T,\r\n    func: <U extends any>(v: U) => U | number = v => v\r\n): ((a: T, b: T) => number) => {\r\n    return order === \"Desc\" ? (a, b) => desc(a, b, orderBy, func) : (a, b) => -desc(a, b, orderBy, func);\r\n};\r\n\r\nconst StableSort = <T extends object>(array: T[], cmp: (a: T, b: T) => number) => {\r\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = cmp(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map(el => el[0]);\r\n};\r\n\r\nconst rarityOrder = [\"common\", \"uncommon\", \"rare\", \"mythic\"] as const;\r\nconst GetSortFunction = (sortBy: SortByOptions, sortOrder: SortOrderOptions) => {\r\n    switch (sortBy) {\r\n        case \"Name\":\r\n            return getSorting<DeckCard & ScryCard>(sortOrder, \"name\");\r\n        case \"Cmc\":\r\n            return getSorting<DeckCard & ScryCard>(sortOrder, \"mana_cost\");\r\n        case \"Type\":\r\n            return getSorting<DeckCard & ScryCard>(sortOrder, \"type_line\");\r\n        case \"Rarity\":\r\n            return getSorting<DeckCard & ScryCard>(sortOrder, \"rarity\", v => rarityOrder.indexOf(v));\r\n    }\r\n};\r\n\r\ntype Props = CollectionPreviewProps & {\r\n    style: PreviewStyle;\r\n};\r\n\r\nconst CollectionPreview: React.FC<Props> = props => {\r\n    const renderCollection = () => {\r\n        const passedProps = {\r\n            ...omit(props, \"style\", \"cards\"),\r\n            cards: StableSort(props.cards, GetSortFunction(props.sortBy, props.sortOrder)),\r\n        };\r\n        switch (props.style) {\r\n            case \"List\":\r\n                return <ListCollecion {...passedProps} />;\r\n            case \"Images\":\r\n                return <ImagesCollecion {...passedProps} />;\r\n            case \"Compressed\":\r\n                return <CompressedCollecion {...passedProps} />;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {props.sectionName !== SectionName.Default && <Typography variant=\"h6\">{props.sectionName}</Typography>}\r\n            {renderCollection()}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CollectionPreview;\r\n","import { Button, ButtonGroup, Tooltip, Typography } from \"@material-ui/core\";\r\nimport ViewHeadlineIcon from \"@material-ui/icons/ViewHeadline\";\r\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\r\nimport ViewModuleIcon from \"@material-ui/icons/ViewModule\";\r\nimport React from \"react\";\r\nimport styled from \"../../Styled/Theme\";\r\nimport { PreviewStyle } from \"../CollectionPreview\";\r\n\r\nconst Body = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: ${p => p.theme.spacing(1)}px;\r\n\r\n    & .MuiTypography-root {\r\n        margin-right: ${p => p.theme.spacing(1)}px;\r\n    }\r\n\r\n    & .MuiButton-root {\r\n        padding-left: 0;\r\n        padding-right: 0;\r\n    }\r\n`;\r\n\r\nconst IconForStyle = (style: PreviewStyle) => {\r\n    switch (style) {\r\n        case \"Standard\":\r\n            return <ViewListIcon />;\r\n        case \"List\":\r\n            return <ViewHeadlineIcon />;\r\n        case \"Images\":\r\n            return <ViewModuleIcon />;\r\n    }\r\n    throw Error(`Style ${style} does not have an icon.`);\r\n};\r\n\r\ntype Props = {\r\n    style: PreviewStyle;\r\n    onToggle: (style: PreviewStyle) => void;\r\n};\r\n\r\nconst PreviewStyleToggle: React.FC<Props> = ({ style, onToggle }) => {\r\n    return (\r\n        <Body>\r\n            <Typography variant=\"caption\">Display:</Typography>\r\n            <ButtonGroup variant=\"outlined\" size=\"small\">\r\n                {([\"Standard\", \"List\", \"Images\"] as const).map(s => (\r\n                    <Button key={s} onClick={() => onToggle(s)} variant={style === s ? \"contained\" : undefined}>\r\n                        <Tooltip title={s}>{IconForStyle(s)}</Tooltip>\r\n                    </Button>\r\n                ))}\r\n            </ButtonGroup>\r\n        </Body>\r\n    );\r\n};\r\nexport default PreviewStyleToggle;\r\n","import ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport React from \"react\";\r\nimport TooltipButton from \"../../Styled/TooltipButton\";\r\nimport styled from \"../../Styled/Theme\";\r\n\r\nconst Body = styled.div`\r\n    margin-bottom: ${p => p.theme.spacing(1)}px;\r\n    margin-left: ${p => p.theme.spacing(1)}px;\r\n`;\r\n\r\ntype Props = {\r\n    show: boolean;\r\n    setShow: (show: boolean) => void;\r\n};\r\n\r\nconst ShowGroupsToggle: React.FC<Props> = ({ show, setShow }) => {\r\n    return (\r\n        <Body>\r\n            <TooltipButton size=\"small\" title={show ? \"Hide groups\" : \"Show groups\"} onClick={() => setShow(!show)}>\r\n                <ListAltIcon />\r\n            </TooltipButton>\r\n        </Body>\r\n    );\r\n};\r\nexport default ShowGroupsToggle;\r\n","import { Button, ClickAwayListener, Grow, MenuItem, MenuList, Paper, Popper } from \"@material-ui/core\";\r\nimport SortIcon from \"@material-ui/icons/Sort\";\r\nimport React from \"react\";\r\nimport styled from \"../../Styled/Theme\";\r\nimport { SortByOptions, SortOrderOptions } from \"../CollectionPreview\";\r\n\r\nconst Body = styled.div`\r\n    margin-bottom: ${p => p.theme.spacing(1)}px;\r\n`;\r\n\r\ntype Props = {\r\n    sortBy: SortByOptions;\r\n    setSortBy: (sortBy: SortByOptions) => void;\r\n    sortOrder: SortOrderOptions;\r\n    setSortOrder: (sortOrder: SortOrderOptions) => void;\r\n};\r\n\r\nconst SortToggle: React.FC<Props> = ({ sortBy, setSortBy, sortOrder, setSortOrder }) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef<HTMLButtonElement>(null);\r\n\r\n    const handleToggle = () => setOpen(prevOpen => !prevOpen);\r\n    const handleClose = (event: React.MouseEvent<Document, MouseEvent>) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Body>\r\n            <Button ref={anchorRef} size=\"small\" onClick={handleToggle} startIcon={<SortIcon />}>\r\n                Sort by\r\n            </Button>\r\n            <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition>\r\n                {({ TransitionProps, placement }) => (\r\n                    <Grow\r\n                        {...TransitionProps}\r\n                        style={{\r\n                            transformOrigin: placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n                        }}\r\n                    >\r\n                        <Paper elevation={5}>\r\n                            <ClickAwayListener onClickAway={handleClose}>\r\n                                <MenuList>\r\n                                    {([\r\n                                        [\"Name\", \"Asc\"],\r\n                                        [\"Name\", \"Desc\"],\r\n                                        [\"Cmc\", \"Asc\"],\r\n                                        [\"Cmc\", \"Desc\"],\r\n                                        [\"Type\", \"Asc\"],\r\n                                        [\"Type\", \"Desc\"],\r\n                                        [\"Rarity\", \"Asc\"],\r\n                                        [\"Rarity\", \"Desc\"],\r\n                                    ] as const).map(([by, order]) => (\r\n                                        <MenuItem\r\n                                            key={`${by} (${order})`}\r\n                                            selected={by === sortBy && order === sortOrder}\r\n                                            onClick={event => {\r\n                                                setSortBy(by);\r\n                                                setSortOrder(order);\r\n                                            }}\r\n                                        >\r\n                                            {`${by} (${order})`}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </MenuList>\r\n                            </ClickAwayListener>\r\n                        </Paper>\r\n                    </Grow>\r\n                )}\r\n            </Popper>\r\n        </Body>\r\n    );\r\n};\r\nexport default SortToggle;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faClipboard, faCompressAlt, faExpandAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faGoogle } from \"@fortawesome/free-brands-svg-icons\";\r\nimport styled from \"./Theme\";\r\n\r\nconst IconWrap = styled.div`\r\n    width: 24px;\r\n    height: 24px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const CompressIcon: React.FC = () => (\r\n    <IconWrap>\r\n        <FontAwesomeIcon icon={faCompressAlt} />\r\n    </IconWrap>\r\n);\r\n\r\nexport const ExpandIcon: React.FC = () => (\r\n    <IconWrap>\r\n        <FontAwesomeIcon icon={faExpandAlt} />\r\n    </IconWrap>\r\n);\r\n\r\nexport const GoogleIcon: React.FC = () => (\r\n    <IconWrap>\r\n        <FontAwesomeIcon icon={faGoogle} />\r\n    </IconWrap>\r\n);\r\n\r\nexport const ClipboardIcon: React.FC = () => (\r\n    <IconWrap>\r\n        <FontAwesomeIcon icon={faClipboard} />\r\n    </IconWrap>\r\n);\r\n","import { Dialog, DialogContent, DialogContentText, DialogTitle, Grid, TextField } from \"@material-ui/core\";\nimport { fade } from \"@material-ui/core/styles\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport copy from \"clipboard-copy\";\nimport React from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { AppState, DeckName, getDeckName } from \"../../State\";\nimport CollectionParser from \"../../Utility/CollectionParser\";\nimport GoogleApi from \"../../Utility/GoogleApi\";\nimport useThunk from \"../../Utility/useThunk\";\nimport Loading from \"../Loading\";\nimport CollectionPreview, { PreviewStyle, SortByOptions, SortOrderOptions } from \"../Previews/CollectionPreview\";\nimport PreviewStyleToggle from \"../Previews/Common/PreviewStyleToggle\";\nimport ShowGroupsToggle from \"../Previews/Common/ShowGroupsToggle\";\nimport SortToggle from \"../Previews/Common/SortToggle\";\nimport { AppletActions, AppletContent, FlexCol, Title } from \"../Styled/Grid\";\nimport { ClipboardIcon, CompressIcon, ExpandIcon } from \"../Styled/Icons\";\nimport styled, { css } from \"../Styled/Theme\";\nimport TooltipButton from \"../Styled/TooltipButton\";\n\nconst SectionRow = styled.div<{ scrollable: boolean }>`\n    margin-bottom: ${p => p.theme.spacing(2)}px;\n    ${p =>\n        p.scrollable &&\n        css`\n            width: 100%;\n            overflow-x: auto;\n            overflow-y: hidden;\n        `}\n`;\n\nconst ExportRow = styled(FlexCol)`\n    display: flex;\n    align-items: center;\n    margin-bottom: ${p => p.theme.spacing(1)}px;\n\n    & .MuiDialogContentText-root {\n        flex-grow: 1;\n        margin-bottom: 0;\n    }\n`;\n\nconst AppletBackground = styled.div`\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 75%;\n    z-index: 0;\n\n    & img {\n        width: 100%;\n    }\n\n    &:after {\n        content: \"\";\n        position: absolute;\n        top: 0;\n        right: 0;\n        width: 100%;\n        height: 100%;\n        display: inline-block;\n        background-image: radial-gradient(\n            ellipse at top 35% right 35%,\n            ${p => fade(p.theme.palette.background.paper, 0.8)} 0%,\n            ${p => p.theme.palette.background.paper} 70%\n        );\n    }\n`;\n\nconst Body = styled.div`\n    z-index: 0;\n    display: flex;\n    flex-direction: column;\n`;\n\ntype Params = {\n    deckName: string;\n};\n\nconst DeckPreview: React.FC = () => {\n    let { deckName } = useParams<Params>();\n    deckName = decodeURIComponent(deckName);\n\n    const history = useHistory();\n    const [state, dispatch] = React.useContext(AppState);\n    const deleteDeck = useThunk(AppState, GoogleApi.deleteDeck);\n    const deck = state.decks[deckName];\n\n    const [expanded, setExpanded] = React.useState(true);\n    const [exportOpened, setExportOpened] = React.useState(false);\n    const [style, setStyle] = React.useState<PreviewStyle>(\"List\");\n    const [sortBy, setSortBy] = React.useState<SortByOptions>(\"Cmc\");\n    const [sortOrder, setSortOrder] = React.useState<SortOrderOptions>(\"Asc\");\n    const [showGroups, setShowGroups] = React.useState(false);\n\n    React.useEffect(() => {\n        dispatch({ type: \"SelectDeck\", name: deckName });\n        // eslint-disable-next-line\n    }, [deckName, deck]);\n\n    const closePreview = () => history.push(\"/\");\n    const toggleExpanded = () => setExpanded(e => !e);\n    const onDeleteDeck = () => {\n        history.push(\"/\");\n        deleteDeck({ name: deckName, id: state.files[deckName] });\n    };\n    const onSaveChanges = () =>\n        GoogleApi.updateFile({ id: state.files[deckName], fileContent: CollectionParser.deserialize(deck.cards) }).then(() =>\n            dispatch({ type: \"UpdateDeck\", name: deckName, isDirty: false })\n        );\n    const onExportOpen = () => setExportOpened(true);\n    const onExportClose = () => setExportOpened(false);\n\n    if (deck === undefined) {\n        return <Loading />;\n    }\n\n    return (\n        <AppletContent>\n            <AppletBackground>\n                <img src={deck.previewUrl} alt=\"\" />\n            </AppletBackground>\n            <Body>\n                <Grid container direction=\"row\" justify=\"space-between\">\n                    <Grid item>\n                        <Title>{getDeckName(deck.name)}</Title>\n                    </Grid>\n                    <Grid item>\n                        <TooltipButton title={expanded ? \"Compress\" : \"Expand\"} size=\"small\" onClick={toggleExpanded}>\n                            {expanded ? <CompressIcon /> : <ExpandIcon />}\n                        </TooltipButton>\n                        <TooltipButton title=\"Close preview\" size=\"small\" onClick={closePreview}>\n                            <CloseIcon />\n                        </TooltipButton>\n                    </Grid>\n                </Grid>\n                <Grid container justify=\"space-between\">\n                    <SortToggle sortBy={sortBy} setSortBy={setSortBy} sortOrder={sortOrder} setSortOrder={setSortOrder} />\n                    <ShowGroupsToggle show={showGroups} setShow={setShowGroups} />\n                    <FlexCol />\n                    {expanded && <PreviewStyleToggle style={style} onToggle={setStyle} />}\n                </Grid>\n                <FlexCol>\n                    {Object.entries(deck.cards).map(([sectionName, cards]) => (\n                        <SectionRow key={sectionName} scrollable={expanded && style === \"List\"}>\n                            <CollectionPreview\n                                cards={Object.values(cards).map(c => ({ ...c, ...(state.cardList[c.name] ?? {}) })) as any}\n                                style={expanded ? style : \"Compressed\"}\n                                actions={deckName === DeckName.Wishlist ? \"SearchWishlist\" : \"Deck\"}\n                                sortBy={sortBy}\n                                sortOrder={sortOrder}\n                                showGroups={showGroups}\n                                deckName={deckName}\n                                sectionName={sectionName}\n                            />\n                        </SectionRow>\n                    ))}\n                </FlexCol>\n                <AppletActions>\n                    <TooltipButton title=\"Export deck\" onClick={onExportOpen}>\n                        <GetAppIcon />\n                    </TooltipButton>\n                    {deckName !== DeckName.Collection && deckName !== DeckName.Wishlist && (\n                        <TooltipButton title=\"Delete deck\" onClick={onDeleteDeck}>\n                            <DeleteIcon />\n                        </TooltipButton>\n                    )}\n                    {deck.isDirty && (\n                        <TooltipButton title=\"Save changes\" onClick={onSaveChanges} background=\"primary\">\n                            <SaveIcon />\n                        </TooltipButton>\n                    )}\n                </AppletActions>\n            </Body>\n            <Dialog open={exportOpened} onClose={onExportClose} aria-labelledby=\"export-deck-dialog\" fullWidth maxWidth=\"md\">\n                <DialogTitle id=\"import-deck-dialog\">Export</DialogTitle>\n                <DialogContent>\n                    <ExportRow>\n                        <DialogContentText>Copy exported text below.</DialogContentText>\n                        <TooltipButton title=\"Copy to clipboard\" onClick={() => copy(CollectionParser.deserialize(deck.cards))}>\n                            <ClipboardIcon />\n                        </TooltipButton>\n                    </ExportRow>\n                    <TextField\n                        label=\"Export\"\n                        multiline\n                        rows=\"15\"\n                        fullWidth\n                        variant=\"outlined\"\n                        value={CollectionParser.deserialize(deck.cards)}\n                        InputProps={{\n                            readOnly: true,\n                        }}\n                    />\n                </DialogContent>\n            </Dialog>\n        </AppletContent>\n    );\n};\n\nexport default DeckPreview;\n","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport React from \"react\";\nimport { AppState, LoginState } from \"../../State\";\nimport GoogleApi from \"../../Utility/GoogleApi\";\nimport { AppletContent, Title } from \"../Styled/Grid\";\nimport styled from \"../Styled/Theme\";\n\nconst StyledTitle = styled(DialogTitle)`\n    color: ${p => p.theme.palette.error.main};\n`;\n\nconst DeleteButton = styled(Button)`\n    color: ${p => p.theme.palette.error.main};\n`;\n\nconst ContainedDeleteButton = styled(Button)`\n    background-color: ${p => p.theme.palette.error.main};\n\n    &:hover {\n        background-color: ${p => p.theme.palette.error.light};\n    }\n`;\n\nconst UserInfo: React.FC = () => {\n    const { signOut } = React.useContext(LoginState);\n    const [state, dispatch] = React.useContext(AppState);\n\n    const [open, setOpen] = React.useState(false);\n    const handleDeleteData = () => {\n        signOut();\n        Object.keys(state.decks).forEach(name => GoogleApi.deleteDeck(dispatch)({ name, id: state.files[name] }));\n        setOpen(false);\n    };\n\n    return (\n        <AppletContent>\n            <Title>User info</Title>\n            <div>\n                <ContainedDeleteButton startIcon={<DeleteIcon />} variant=\"contained\" onClick={() => setOpen(true)}>\n                    Delete saved data\n                </ContainedDeleteButton>\n            </div>\n            <Dialog open={open} onClose={() => setOpen(false)}>\n                <StyledTitle>Delete all saved data and sign out</StyledTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        This action will delete all the data (saved decks) saved by this app in your google drive storage and sign you out. After you sign back\n                        in the app will create it&apos;s base required files again. This action is irreversible!\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setOpen(false)}>Cancel</Button>\n                    <DeleteButton onClick={handleDeleteData}>Delete</DeleteButton>\n                </DialogActions>\n            </Dialog>\n        </AppletContent>\n    );\n};\n\nexport default UserInfo;\n","import { Badge } from \"@material-ui/core\";\r\nimport { AvatarProps } from \"@material-ui/core/Avatar\";\r\nimport CollectionsIcon from \"@material-ui/icons/Collections\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport React from \"react\";\r\nimport { Deck, DeckName, getDeckName } from \"../../State\";\r\nimport { DrawerAvatar } from \"../Styled/Grid\";\r\n\r\nconst getDeckIcon = (name: string) => {\r\n    return name === DeckName.Wishlist ? <FavoriteIcon /> : <CollectionsIcon />;\r\n};\r\n\r\ntype Props = {\r\n    deck: Deck;\r\n    variant?: AvatarProps[\"variant\"];\r\n};\r\n\r\nconst DeckAvatar: React.FC<Props> = ({ deck, variant }) => {\r\n    return (\r\n        <Badge\r\n            invisible={!deck?.isDirty}\r\n            color=\"primary\"\r\n            overlap=\"circle\"\r\n            badgeContent=\" \"\r\n            anchorOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"right\",\r\n            }}\r\n        >\r\n            <DrawerAvatar variant={variant} alt={getDeckName(deck?.name)} src={deck?.previewUrl}>\r\n                {getDeckIcon(deck?.name)}\r\n            </DrawerAvatar>\r\n        </Badge>\r\n    );\r\n};\r\nexport default DeckAvatar;\r\n","import { Divider, List, ListItem, ListItemAvatar, ListItemText, Tooltip } from \"@material-ui/core\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport React from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { AppState, Deck, DeckName, getDeckName } from \"../../State\";\r\nimport { DrawerAvatar } from \"../Styled/Grid\";\r\nimport styled from \"../Styled/Theme\";\r\nimport DeckAvatar from \"./DeckAvatar\";\r\n\r\nconst StyledItemText = styled(ListItemText)`\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n`;\r\n\r\ntype Props = {\r\n    open: boolean;\r\n    closeDrawer: () => void;\r\n};\r\n\r\nconst DrawerDeckList: React.FC<Props> = ({ open, closeDrawer }) => {\r\n    const { pathname } = useLocation();\r\n    const [state] = React.useContext(AppState);\r\n\r\n    const renderItem = (deck: Deck) => (\r\n        <Tooltip key={deck.name} title={open ? \"\" : (state.decks[deck.name].isDirty ? \"*\" : \"\") + getDeckName(deck.name)} placement=\"right\">\r\n            <ListItem\r\n                component={Link}\r\n                to={`/decks/${encodeURIComponent(deck.name)}`}\r\n                onClick={closeDrawer}\r\n                button\r\n                selected={state.selectedDeck === deck.name && !pathname.match(\"/addDeck\")}\r\n            >\r\n                <ListItemAvatar>\r\n                    <DeckAvatar deck={deck} />\r\n                </ListItemAvatar>\r\n                <StyledItemText primary={getDeckName(deck.name)} />\r\n            </ListItem>\r\n        </Tooltip>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <List>\r\n                {renderItem(state.decks[DeckName.Collection])}\r\n                {renderItem(state.decks[DeckName.Wishlist])}\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                <Tooltip title=\"Add deck\" placement=\"right\">\r\n                    <ListItem component={Link} to=\"/addDeck/\" onClick={closeDrawer} button selected={!!pathname.match(\"/addDeck\")}>\r\n                        <ListItemAvatar>\r\n                            <DrawerAvatar alt=\"Add deck\">\r\n                                <AddCircleOutlineIcon />\r\n                            </DrawerAvatar>\r\n                        </ListItemAvatar>\r\n                        <StyledItemText primary=\"Add deck\" />\r\n                    </ListItem>\r\n                </Tooltip>\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                {Object.values(state.decks)\r\n                    .filter(deck => deck.name !== DeckName.Collection && deck.name !== DeckName.Wishlist)\r\n                    .map(deck => renderItem(deck))}\r\n            </List>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DrawerDeckList;\r\n","import { BottomNavigation, BottomNavigationAction } from \"@material-ui/core\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport React from \"react\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { AppState, getDeckName } from \"../../State\";\r\nimport DeckAvatar from \"./DeckAvatar\";\r\nimport styled from \"../Styled/Theme\";\r\n\r\nconst StyledNavigation = styled(BottomNavigation)`\r\n    position: fixed;\r\n    bottom: 0;\r\n    width: 100%;\r\n    background-color: ${p => p.theme.palette.secondary.dark};\r\n`;\r\n\r\nconst DeckAction = styled(BottomNavigationAction)`\r\n    flex-grow: 10;\r\n\r\n    & .MuiBottomNavigationAction-label {\r\n        width: 100%;\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n    }\r\n`;\r\n\r\nconst DeckIcon = styled.div`\r\n    height: 24px;\r\n    width: 24px;\r\n    position: relative;\r\n\r\n    & > * {\r\n        position: absolute;\r\n        bottom: 0;\r\n        transform: translateX(-50%);\r\n    }\r\n`;\r\n\r\ntype Props = {\r\n    open: boolean;\r\n    toggleOpen: () => void;\r\n};\r\n\r\nconst MobileNavigation: React.FC<Props> = ({ open, toggleOpen }) => {\r\n    const { pathname } = useLocation();\r\n    const history = useHistory();\r\n    const [state] = React.useContext(AppState);\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    React.useEffect(() => setValue(open ? 2 : pathname.match(\"/addDeck\") ? 0 : 1), [open, pathname]);\r\n\r\n    const onChange = (tab: number) => {\r\n        setValue(tab);\r\n        switch (tab) {\r\n            case 0:\r\n                history.push(\"/addDeck/\");\r\n                return;\r\n            case 1:\r\n                history.push(`/decks/${encodeURIComponent(state.decks[state.selectedDeck].name)}`);\r\n                return;\r\n            case 2:\r\n                toggleOpen();\r\n                return;\r\n        }\r\n        throw Error(`Invalid tab number ${tab}`);\r\n    };\r\n\r\n    return (\r\n        <StyledNavigation value={value} onChange={(_, val) => onChange(val)} showLabels>\r\n            <BottomNavigationAction label=\"Add deck\" icon={<AddCircleOutlineIcon />} />\r\n            <DeckAction\r\n                label={getDeckName(state.selectedDeck)}\r\n                icon={\r\n                    <DeckIcon>\r\n                        <DeckAvatar deck={state.decks[state.selectedDeck]} />\r\n                    </DeckIcon>\r\n                }\r\n            />\r\n            <BottomNavigationAction label=\"Menu\" icon={<MenuIcon />} />\r\n        </StyledNavigation>\r\n    );\r\n};\r\nexport default MobileNavigation;\r\n","import {\n    Button,\n    Checkbox,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    FormControlLabel,\n    FormGroup,\n    TextField,\n    Tooltip,\n    Typography,\n} from \"@material-ui/core\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport React from \"react\";\nimport Scry from \"../../Utility/Scry\";\nimport { ScryCardColor } from \"../../Utility/Scry/Types\";\nimport { AppletActions, AppletContent, FlexCol, Title } from \"../Styled/Grid\";\nimport SymbolTypography from \"../Styled/SymbolTypography\";\nimport styled from \"../Styled/Theme\";\n\n// TODO: remove from here & make it reusable?\nconst PreviewRow = styled.div`\n    display: flex;\n    margin-top: ${p => p.theme.spacing(1)}px;\n    align-items: center;\n\n    & .MuiAutocomplete-root {\n        flex-grow: 1;\n        margin-right: ${p => p.theme.spacing(1)}px;\n    }\n`;\n\n// Reusable?\ninterface CardSearchFilter {\n    /** Array of selected colors inside advanced search */\n    colors: Record<ScryCardColor, boolean>;\n    /** Checkbox whether the search should match exact colors */\n    colorExactMatch: boolean;\n\n    /** Converted Mana Cost */\n    cmc: number;\n    /** Type: equal [=], less than [<], more than [>] */\n    cmcType: string;\n\n    // type: string;\n    // subtype: string;\n\n    // legality: string;\n}\n\nconst initCardSearchFilter = (): CardSearchFilter => {\n    return {\n        colors: { R: false, G: false, U: false, B: false, W: false },\n        colorExactMatch: false,\n        cmc: 0,\n        cmcType: \"=\",\n    };\n};\n\nconst CardSearch: React.FC = () => {\n    // Card name & autocomplete structures\n    const [cardName, setCardName] = React.useState<string>(\"\");\n    const [autoompleteOptions, setAutocompleteOptions] = React.useState<string[]>([]);\n\n    const updateAutoComplete = (name: string) => {\n        setCardName(name);\n        Scry.Cards.Autocomplete(cardName).then(names => setAutocompleteOptions(names));\n    };\n\n    const performSearch = () => {\n        alert(JSON.stringify(filter));\n    };\n\n    // Advanced Filters Dialog structures\n    const [dialogOpen, setDialogOpen] = React.useState<boolean>(false);\n    const openDialog = () => setDialogOpen(true);\n    const closeDialog = () => setDialogOpen(false);\n\n    // Filter structures\n    const [filter, setFilter] = React.useState<CardSearchFilter>(initCardSearchFilter());\n\n    const resetFilter = () => setFilter(initCardSearchFilter());\n    const handleColors = (color: ScryCardColor) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        const newFilter = { ...filter };\n        newFilter.colors[color] = event.target.checked;\n        setFilter(newFilter);\n    };\n\n    return (\n        <AppletContent>\n            <Title>Card search</Title>\n\n            <FlexCol>\n                <PreviewRow>\n                    <Autocomplete\n                        freeSolo\n                        autoHighlight\n                        disableClearable\n                        options={autoompleteOptions}\n                        inputValue={cardName}\n                        onInputChange={(e, value) => updateAutoComplete(value)}\n                        renderInput={params => <TextField {...params} label=\"Card name\" variant=\"outlined\" fullWidth />}\n                    />\n                </PreviewRow>\n            </FlexCol>\n\n            <Dialog open={dialogOpen} onClose={closeDialog} aria-labelledby=\"advanced-card-search-dialog\" maxWidth=\"md\" fullWidth>\n                <DialogTitle id=\"advanced-card-search-dialog\">Advanced card search</DialogTitle>\n                <DialogContent>\n                    <Typography variant=\"subtitle2\">Filter by color</Typography>\n                    <FormGroup row>\n                        <FormControlLabel\n                            label={<SymbolTypography text=\"{R} Red\" />}\n                            control={<Checkbox checked={filter.colors.R} onChange={handleColors(\"R\")} />}\n                        />\n                        <FormControlLabel\n                            label={<SymbolTypography text=\"{G} Green\" />}\n                            control={<Checkbox checked={filter.colors.G} onChange={handleColors(\"G\")} />}\n                        />\n                        <FormControlLabel\n                            label={<SymbolTypography text=\"{U} Blue\" />}\n                            control={<Checkbox checked={filter.colors.U} onChange={handleColors(\"U\")} />}\n                        />\n                        <FormControlLabel\n                            label={<SymbolTypography text=\"{B} Black\" />}\n                            control={<Checkbox checked={filter.colors.B} onChange={handleColors(\"B\")} />}\n                        />\n                        <FormControlLabel\n                            label={<SymbolTypography text=\"{W} White\" />}\n                            control={<Checkbox checked={filter.colors.W} onChange={handleColors(\"W\")} />}\n                        />\n                    </FormGroup>\n\n                    <FormControlLabel\n                        label=\"Exact color match?\"\n                        control={<Checkbox checked={filter.colorExactMatch} onChange={e => setFilter({ ...filter, colorExactMatch: e.target.checked })} />}\n                    />\n\n                    {/* <br />\n\n                        <ul>\n                            <li>[DONE] Filter by color identity (only selected colors or all cards with selected colors)</li>\n                            <li>Filter by converted mana cost (equal, less than, more than)</li>\n                            <li>Filter by type/subtype (restrict subtype options based on type)</li>\n                            <li>Filter by format legality (choose one)</li>\n                        </ul> */}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={resetFilter} color=\"primary\">\n                        Reset\n                    </Button>\n                    <Button onClick={closeDialog} color=\"primary\">\n                        OK\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <AppletActions>\n                <Tooltip title=\"Advanced search filter\">\n                    <Button onClick={openDialog}>\n                        <FilterListIcon />\n                    </Button>\n                </Tooltip>\n                <Tooltip title=\"Search for results\">\n                    <Button onClick={performSearch}>\n                        <SearchIcon />\n                    </Button>\n                </Tooltip>\n            </AppletActions>\n        </AppletContent>\n    );\n};\n\nexport default CardSearch;\n","import { Avatar, Paper, Typography } from \"@material-ui/core\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport CollectionsIcon from \"@material-ui/icons/Collections\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AppState, Deck, DeckName, getDeckName, SectionName } from \"../../State\";\r\nimport Scry from \"../../Utility/Scry\";\r\nimport SymbolTypography from \"../Styled/SymbolTypography\";\r\nimport styled, { css } from \"../Styled/Theme\";\r\n\r\nconst DeckBoxBody = styled.div`\r\n    padding-bottom: 65%;\r\n    width: 100%;\r\n    height: 0;\r\n    position: relative;\r\n`;\r\n\r\nconst DeckBoxAvatar = styled(Avatar)`\r\n    background-color: ${p => p.theme.palette.background.default};\r\n    color: ${p => p.theme.palette.text.secondary};\r\n    border-radius: ${p => p.theme.spacing(4)}px;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst DeckBoxTitle = styled(Paper)`\r\n    position: absolute;\r\n    bottom: 0;\r\n    width: 100%;\r\n    padding: ${p => p.theme.spacing(1, 2)};\r\n    background-color: ${p => p.theme.palette.grey[900]};\r\n    border-radius: ${p => p.theme.spacing(4)}px;\r\n\r\n    & .MuiTypography-root {\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n    }\r\n`;\r\n\r\nconst DeckColorIdentity = styled.div`\r\n    position: absolute;\r\n    top: -75%;\r\n    right: 50%;\r\n    transform: translateX(50%);\r\n`;\r\n\r\nconst LargeIcon = css`\r\n    width: 50%;\r\n    height: 50%;\r\n`;\r\n\r\nconst LargeFavoriteIcon = styled(FavoriteIcon)`\r\n    ${LargeIcon}\r\n`;\r\nconst LargeCollectionsIcon = styled(CollectionsIcon)`\r\n    ${LargeIcon}\r\n`;\r\nconst LargeAddCircleOutlineIcon = styled(AddCircleOutlineIcon)`\r\n    ${LargeIcon}\r\n`;\r\n\r\nconst getDeckIcon = (name: string) => {\r\n    return name === DeckName.Wishlist ? <LargeFavoriteIcon /> : <LargeCollectionsIcon />;\r\n};\r\n\r\ntype Props = {\r\n    deck?: Deck;\r\n};\r\n\r\nconst DeckBox: React.FC<Props> = ({ deck }) => {\r\n    const [state] = React.useContext(AppState);\r\n    if (!deck) {\r\n        return (\r\n            <DeckBoxBody>\r\n                <Link to=\"/addDeck/\">\r\n                    <DeckBoxAvatar variant=\"rounded\" alt=\"Add deck\">\r\n                        <LargeAddCircleOutlineIcon />\r\n                    </DeckBoxAvatar>\r\n                </Link>\r\n            </DeckBoxBody>\r\n        );\r\n    }\r\n    return (\r\n        <DeckBoxBody>\r\n            <Link to={`/decks/${encodeURIComponent(deck.name)}`}>\r\n                <DeckBoxAvatar variant=\"rounded\" alt={getDeckName(deck.name)} src={deck.previewUrl}>\r\n                    {getDeckIcon(deck.name)}\r\n                </DeckBoxAvatar>\r\n                <DeckBoxTitle>\r\n                    {deck.name !== DeckName.Collection && deck.name !== DeckName.Wishlist && (\r\n                        <DeckColorIdentity>\r\n                            <SymbolTypography\r\n                                variant=\"h3\"\r\n                                text={Scry.getColorIdentity(...Object.keys(deck.cards[SectionName.Default]).map(c => state.cardList[c]))}\r\n                            />\r\n                        </DeckColorIdentity>\r\n                    )}\r\n                    <Typography variant=\"h6\">{getDeckName(deck.name)}</Typography>\r\n                </DeckBoxTitle>\r\n            </Link>\r\n        </DeckBoxBody>\r\n    );\r\n};\r\nexport default DeckBox;\r\n","import { Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { AppState, DeckName } from \"../../State\";\r\nimport { AppletContent, Title } from \"../Styled/Grid\";\r\nimport DeckBox from \"./DeckBox\";\r\n\r\nconst DeckList: React.FC = () => {\r\n    const [state] = React.useContext(AppState);\r\n    return (\r\n        <AppletContent>\r\n            <Title>Your decks</Title>\r\n            <Grid container spacing={6} direction=\"column\">\r\n                <Grid item container spacing={1}>\r\n                    <Grid item xs={12} sm={6} lg={3}>\r\n                        <DeckBox deck={state.decks[DeckName.Collection]} />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} lg={3}>\r\n                        <DeckBox deck={state.decks[DeckName.Wishlist]} />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item container spacing={1}>\r\n                    <Grid item xs={12} sm={6} lg={3}>\r\n                        <DeckBox />\r\n                    </Grid>\r\n                    {Object.values(state.decks)\r\n                        .filter(deck => deck.name !== DeckName.Collection && deck.name !== DeckName.Wishlist)\r\n                        .map(deck => (\r\n                            <Grid key={deck.name} item xs={12} sm={6} lg={3}>\r\n                                <DeckBox deck={deck} />\r\n                            </Grid>\r\n                        ))}\r\n                </Grid>\r\n            </Grid>\r\n        </AppletContent>\r\n    );\r\n};\r\n\r\nexport default DeckList;\r\n","import { Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport CardSearch from \"./Applets/CardSearch\";\r\nimport DeckList from \"./Applets/DeckList\";\r\n\r\nconst Home: React.FC = () => {\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <CardSearch />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <DeckList />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nconst NotFound: React.FC = () => {\r\n    return <div>Not found</div>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Button, Typography } from \"@material-ui/core\";\r\nimport { GoogleIcon } from \"./Styled/Icons\";\r\n\r\ntype Props = {\r\n    variant?: \"text\" | \"outlined\" | \"contained\";\r\n    onClick: () => void;\r\n};\r\n\r\nconst SignInButton: React.FC<Props> = ({ variant, onClick }: Props) => {\r\n    return (\r\n        <Button variant={variant} onClick={onClick} startIcon={<GoogleIcon />}>\r\n            <Typography noWrap>Sign in</Typography>\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport default SignInButton;\r\n","import { Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Logo from \"../Assets/logo.png\";\r\nimport GoogleApi from \"../Utility/GoogleApi\";\r\nimport SignInButton from \"./SignInButton\";\r\nimport { AppletContent } from \"./Styled/Grid\";\r\n\r\nconst SignIn: React.FC = () => {\r\n    return (\r\n        <AppletContent>\r\n            <Grid container justify=\"center\" alignItems=\"center\" style={{ padding: 25 }}>\r\n                <img src={Logo} alt=\"\" width=\"150px\" height=\"150px\" draggable={false} />\r\n            </Grid>\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n                <SignInButton variant=\"contained\" onClick={GoogleApi.signIn} />\r\n            </Grid>\r\n        </AppletContent>\r\n    );\r\n};\r\n\r\nexport default SignIn;\r\n","import {\n    AppBar,\n    Avatar,\n    ClickAwayListener,\n    Container,\n    Divider,\n    Drawer,\n    IconButton,\n    Link as MUILink,\n    Toolbar,\n    Tooltip,\n    Typography,\n    useMediaQuery,\n} from \"@material-ui/core\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Axios, { AxiosResponse } from \"axios\";\nimport React from \"react\";\nimport { Link, Route, Switch, useHistory } from \"react-router-dom\";\nimport { isNullOrUndefined } from \"util\";\nimport { AppState, initialState, LoginState } from \"../State\";\nimport { reducer } from \"../State/Reducers\";\nimport GoogleApi, { GoogleProfile } from \"../Utility/GoogleApi\";\nimport Scry from \"../Utility/Scry\";\nimport { ScryCardSymbol, ScrySet } from \"../Utility/Scry/Types\";\nimport AddDeck from \"./Applets/AddDeck\";\nimport DeckPreview from \"./Applets/DeckPreview\";\nimport UserInfo from \"./Applets/UserInfo\";\nimport DrawerDeckList from \"./Drawer/DrawerDeckList\";\nimport MobileNavigation from \"./Drawer/MobileNavigation\";\nimport Home from \"./Home\";\nimport Loading from \"./Loading\";\nimport NotFound from \"./NotFound\";\nimport SignIn from \"./SignIn\";\nimport SignInButton from \"./SignInButton\";\nimport { FlexCol } from \"./Styled/Grid\";\nimport styled, { ComponentProps, css, MainTheme } from \"./Styled/Theme\";\nimport TooltipButton from \"./Styled/TooltipButton\";\n\nconst bodyOpen = css<ComponentProps<any>>`\n    margin-left: ${p => p.theme.constants.drawerWidth};\n    width: calc(100% - ${p => p.theme.constants.drawerWidth});\n    transition: ${p =>\n        p.theme.transitions.create([\"width\", \"margin\"], {\n            easing: p.theme.transitions.easing.sharp,\n            duration: p.theme.transitions.duration.enteringScreen,\n        })};\n`;\n\nconst bodyClose = css<ComponentProps<any>>`\n    transition: ${p =>\n        p.theme.transitions.create([\"width\", \"margin\"], {\n            easing: p.theme.transitions.easing.sharp,\n            duration: p.theme.transitions.duration.leavingScreen,\n        })};\n`;\n\nconst CustomAppBar = styled(AppBar)<{ open: boolean }>`\n    z-index: ${p => p.theme.zIndex.drawer + 1};\n    ${bodyClose}\n    ${p => p.open && bodyOpen}\n    ${p =>\n        p.open &&\n        css`\n            ${p.theme.breakpoints.down(\"xs\")} {\n                & {\n                    width: 100%;\n                    margin-left: 0;\n                }\n            }\n        `}\n`;\n\nconst MenuButton = styled(IconButton)<{ open: boolean }>`\n    margin-right: 36px;\n    ${p =>\n        p.open &&\n        css`\n            display: none;\n        `}\n\n    ${p => p.theme.breakpoints.down(\"xs\")} {\n        & {\n            margin-right: ${p => p.theme.spacing(1)}px;\n            display: inline-block;\n        }\n    }\n`;\n\nconst drawerOpen = css<ComponentProps<any>>`\n    width: ${p => p.theme.constants.drawerWidth};\n    overflow-x: hidden;\n    transition: ${p =>\n        [\"width\", \"max-height\"]\n            .map(d =>\n                p.theme.transitions.create(d, {\n                    easing: p.theme.transitions.easing.sharp,\n                    duration: p.theme.transitions.duration.enteringScreen,\n                })\n            )\n            .join(\", \")};\n\n    ${p => p.theme.breakpoints.down(\"xs\")} {\n        & {\n            width: 100%;\n            height: auto;\n            max-height: 100%;\n        }\n    }\n`;\n\nconst drawerClose = css<ComponentProps<any>>`\n    width: ${p => p.theme.constants.drawerWidthClosed};\n\n    ${p => p.theme.breakpoints.down(\"xs\")} {\n        & {\n            max-height: 0;\n        }\n    }\n`;\n\nconst CustomDrawer = styled(Drawer)<{ open?: boolean }>`\n    flex-shrink: 0;\n    white-space: nowrap;\n    ${drawerOpen}\n    ${p => !p.open && drawerClose}\n\n    .MuiDrawer-paper {\n        ${drawerOpen}\n        ${p => !p.open && drawerClose}\n    }\n`;\n\nconst DrawerToolbar = styled(Toolbar)`\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    padding: ${p => p.theme.spacing(0, 1)}px;\n`;\n\nconst NoGutterContainer = styled(Container)`\n    ${p => p.theme.breakpoints.down(\"xs\")} {\n        & {\n            padding: 0;\n        }\n    }\n`;\n\nconst MainContent = styled.div<{ open: boolean }>`\n    flex-grow: 1;\n    padding: ${p => p.theme.spacing(2)}px;\n    margin-left: ${p => p.theme.constants.drawerWidthClosed};\n    ${bodyClose}\n    ${p => p.open && bodyOpen}\n\n    ${p =>\n        p.open &&\n        css`\n            ${p.theme.breakpoints.down(\"sm\")} {\n                & {\n                    margin-left: ${p => p.theme.constants.drawerWidthClosed};\n                    width: calc(100% - ${p => p.theme.constants.drawerWidthClosed});\n                }\n            }\n        `}\n    ${p => p.theme.breakpoints.down(\"xs\")} {\n        & {\n            width: 100%;\n            margin-left: 0;\n            margin-bottom: ${p => p.theme.spacing(7)}px;\n            padding: ${p => p.theme.spacing(1)}px;\n        }\n    }\n`;\n\nconst ProfileAvatar = styled.div`\n    margin-right: ${p => p.theme.spacing(1)}px;\n`;\n\nconst App: React.FC = () => {\n    const history = useHistory();\n    const isMobile = useMediaQuery(MainTheme.breakpoints.down(\"xs\"));\n    const [state, dispatch] = React.useReducer(reducer, initialState);\n\n    const [profile, setProfile] = React.useState<GoogleProfile>();\n    const [isSignedIn, setIsSignedIn] = React.useState<boolean | undefined>(undefined);\n\n    const handleSignoutClick = () => {\n        GoogleApi.signOut();\n        setProfile(undefined);\n    };\n\n    const [[open], setOpen] = React.useState<[boolean, boolean]>([false, false]);\n\n    const handleDrawerToggle = () => setOpen(p => [!p[0], true]);\n    const handleDrawerClickaway = () => setOpen(p => [p[1] ? p[0] : false, false]);\n    const handleDrawerClose = () => setOpen([false, false]);\n\n    React.useEffect(() => {\n        GoogleApi.initClient(async (signedIn: boolean) => {\n            let redirect = history.location.pathname;\n            if (!signedIn) {\n                setIsSignedIn(false);\n                history.push(\"/signin/\");\n                return;\n            }\n            if (redirect.match(\"/signin\")) redirect = \"/\";\n            history.push(redirect);\n\n            await GoogleApi.prepareAppData(dispatch, state)();\n\n            setProfile(GoogleApi.getProfile());\n            setIsSignedIn(true);\n        });\n        Scry.Symbology.All()\n            .then(symbols => {\n                const endpoint = Axios.create({\n                    baseURL: \"\",\n                    responseType: \"text\",\n                    headers: {\n                        \"Content-Type\": \"image/svg+xml\",\n                    },\n                });\n                return Promise.all(\n                    symbols.map(symbol =>\n                        endpoint.get<string, AxiosResponse<ScryCardSymbol>>(symbol.svg_uri, { transformResponse: r => ({ ...symbol, svg: r }) })\n                    )\n                );\n            })\n            .then(responses => {\n                dispatch({\n                    type: \"AddSymbols\",\n                    symbols: responses.map(r => r.data),\n                });\n            })\n            .then(Scry.Sets.All)\n            .then(sets => {\n                const endpoint = Axios.create({\n                    baseURL: \"\",\n                    responseType: \"text\",\n                    headers: {\n                        \"Content-Type\": \"image/svg+xml\",\n                    },\n                });\n                return Promise.all(\n                    sets.map(set => endpoint.get<string, AxiosResponse<ScrySet>>(set.icon_svg_uri, { transformResponse: r => ({ ...set, icon_svg: r }) }))\n                );\n            })\n            .then(responses => {\n                dispatch({\n                    type: \"AddSets\",\n                    sets: responses.map(r => r.data),\n                });\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    return (\n        <AppState.Provider value={[state, dispatch]}>\n            <LoginState.Provider value={{ profile, signOut: handleSignoutClick }}>\n                <CustomAppBar position=\"sticky\" open={open}>\n                    <Toolbar>\n                        {!isMobile && (\n                            <MenuButton color=\"inherit\" aria-label=\"open drawer\" onClick={handleDrawerToggle} edge=\"start\" open={open}>\n                                <MenuIcon />\n                            </MenuButton>\n                        )}\n                        <Typography variant=\"h6\" style={{ overflow: \"hidden\" }}>\n                            <MUILink variant=\"inherit\" color=\"inherit\" underline=\"none\" component={Link} to=\"/\">\n                                MTGCollection\n                            </MUILink>\n                        </Typography>\n                        <FlexCol />\n                        {isSignedIn ? (\n                            <>\n                                {!isNullOrUndefined(profile) && (\n                                    <ProfileAvatar>\n                                        <Tooltip title={`Signed in as ${profile.getGivenName()} (${profile.getEmail()})`}>\n                                            <Avatar component={Link} to=\"/user/\" alt={profile.getGivenName()} src={profile.getImageUrl()} />\n                                        </Tooltip>\n                                    </ProfileAvatar>\n                                )}\n                                <TooltipButton title=\"SignOut\" onClick={handleSignoutClick}>\n                                    <ExitToAppIcon />\n                                </TooltipButton>\n                            </>\n                        ) : isSignedIn !== undefined && (\n                            <SignInButton onClick={GoogleApi.signIn} />\n                        )}\n                    </Toolbar>\n                </CustomAppBar>\n                <ClickAwayListener onClickAway={() => isMobile && handleDrawerClickaway()}>\n                    <CustomDrawer open={open} anchor={isMobile ? \"bottom\" : \"left\"} variant=\"permanent\">\n                        <DrawerToolbar>\n                            <IconButton onClick={handleDrawerClose}>{isMobile ? <CloseIcon /> : <ChevronLeftIcon />}</IconButton>\n                        </DrawerToolbar>\n                        <Divider />\n                        {isSignedIn && <DrawerDeckList open={open} closeDrawer={() => isMobile && open && handleDrawerToggle()} />}\n                    </CustomDrawer>\n                </ClickAwayListener>\n                <NoGutterContainer maxWidth=\"xl\">\n                    <MainContent open={open}>\n                        {isSignedIn === undefined ? (\n                            <Loading />\n                        ) : (\n                            <Switch>\n                                <Route exact path=\"/\" component={Home} />\n                                <Route exact path=\"/signin/\" component={SignIn} />\n                                <Route exact path=\"/user/\" component={UserInfo} />\n                                <Route exact path=\"/addDeck/\" component={AddDeck} />\n                                <Route path=\"/decks/:deckName\" component={DeckPreview} />\n                                <Route component={NotFound} />\n                            </Switch>\n                        )}\n                    </MainContent>\n                </NoGutterContainer>\n                {isMobile && <MobileNavigation open={open} toggleOpen={handleDrawerToggle} />}\n            </LoginState.Provider>\n        </AppState.Provider>\n    );\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\"This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA\");\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\"New content is available and will be used when all tabs for this page are closed. See https://bit.ly/CRA-PWA.\");\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\"No internet connection found. App is running in offline mode.\");\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import { CssBaseline } from \"@material-ui/core\";\nimport { ThemeProvider as MUIThemeProvider, StylesProvider } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./Components/App\";\nimport { MainTheme } from \"./Components/Styled/Theme\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <StylesProvider injectFirst>\n            <ThemeProvider theme={MainTheme}>\n                <MUIThemeProvider theme={MainTheme}>\n                    <CssBaseline />\n                    <App />\n                </MUIThemeProvider>\n            </ThemeProvider>\n        </StylesProvider>\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}