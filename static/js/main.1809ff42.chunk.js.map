{"version":3,"sources":["Utility/CollectionParser.ts","Components/Styled/TooltipButton.tsx","Routes/LazyRoute.tsx","Routes/Routes.ts","Components/SignInButton.tsx","Components/NotFound.tsx","Routes/AppRouter.tsx","State/Reducers.ts","Utility/useClickaway.ts","Components/Drawer/DrawerSubtitle.tsx","Components/Drawer/DrawerApps.tsx","Components/Drawer/DeckAvatar.tsx","Components/Drawer/DrawerDeckList.tsx","Components/Drawer/MobileNavigation.tsx","Components/App.tsx","serviceWorker.ts","index.tsx","Components/Styled/Grid.tsx","Utility/index.ts","State/Thunks.ts","Utility/GoogleApi.ts","Components/Styled/Theme.ts","Utility/Scry/index.ts","Components/Loading.tsx","Components/Styled/Icons.tsx","State/index.ts"],"names":["CollectionParser","serialize","collection","sections","split","map","section","index","name","lines","SectionName","Default","line","match","filter","isNull","amount","parseInt","comment","reduce","prev","val","p","v","EmptyCards","deserialize","deck","Object","entries","str","values","s","card","StyledIconButton","styled","IconButton","background","css","theme","palette","main","darken","dark","TooltipButton","onClick","title","size","disabled","children","aria-label","variant","LazyRoute","component","Component","lazy","Suspense","fallback","Loading","RouteNames","SignIn","Lifecounter","User","AddDeck","Deck","Home","Public","path","Private","Routes","IsPublic","route","some","RegExp","replace","PathMatch","SignInButton","startIcon","noWrap","NotFound","AppRouter","r","key","exact","reducer","combineReducers","files","state","action","type","link","omit","cardList","keyBy","cards","symbolList","symbols","obj","symbol","setList","sets","code","decks","isDirty","deckName","sectionName","selectedDeck","DeckName","Collection","useClickaway","onClickaway","elemRef","React","createRef","handleClickaway","event","current","contains","target","useEffect","document","addEventListener","removeEventListener","DrawerSubtitle","Typography","grey","spacing","open","StyledItemText","ListItemText","DrawerApps","closeDrawer","pathname","useLocation","List","Tooltip","placement","ListItem","Link","to","button","selected","ListItemAvatar","alt","primary","DeckAvatar","Badge","invisible","color","overlap","badgeContent","anchorOrigin","vertical","horizontal","getDeckName","src","previewUrl","Wishlist","DrawerDeckList","useContext","AppState","renderItem","encodeURIComponent","Divider","StyledNavigation","BottomNavigation","secondary","DeckAction","BottomNavigationAction","DeckIcon","div","MobileNavigation","toggleOpen","history","useHistory","useState","value","setValue","onChange","_","tab","push","Error","showLabels","label","icon","bodyOpen","constants","drawerWidth","transitions","create","easing","sharp","duration","enteringScreen","bodyClose","leavingScreen","CustomAppBar","AppBar","zIndex","drawer","breakpoints","down","MenuButton","drawerOpen","d","join","drawerClose","drawerWidthClosed","CustomDrawer","Drawer","DrawerToolbar","Toolbar","DrawerBody","paper","NoGutterContainer","Container","MainContent","ProfileAvatar","App","isMobile","useMediaQuery","MainTheme","isSmall","useReducer","initialState","dispatch","profile","setProfile","undefined","isSignedIn","setIsSignedIn","handleSignoutClick","GoogleApi","signOut","setOpen","handleDrawerToggle","drawerRef","initClient","signedIn","a","async","redirect","location","prepareAppData","then","getProfile","Scry","Symbology","All","endpoint","Axios","baseURL","responseType","headers","Promise","allSettled","get","svg_uri","transformResponse","svg","responses","isFulfilledPromise","data","Sets","set","icon_svg_uri","icon_svg","Provider","position","edge","style","overflow","underline","isNullOrUndefined","getGivenName","getEmail","Avatar","getImageUrl","signIn","anchor","ref","maxWidth","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StylesProvider","injectFirst","CssBaseline","getElementById","URL","process","href","origin","fetch","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","FlexCol","AppletContent","Paper","appletHeight","AppletActions","Title","attrs","gutterBottom","DrawerAvatar","text","ArrayChunk","arr","n","length","slice","concat","Arr","Unique","i","self","NotNull","MakeTuple","args","reducers","temp","chainReducers","curr","PxFromAvatarSize","result","downloadCards","missingCards","Cards","GoogleApiInit","apiKey","clientId","discoveryDocs","scope","createNewFile","props","fileContent","folder","file","Blob","metadata","mimeType","appProperties","parents","accessToken","gapi","auth","getToken","access_token","form","FormData","append","JSON","stringify","method","Headers","Authorization","body","res","json","id","deleteFile","client","drive","delete","fileId","createNewDeck","restProps","Sideboard","Maybeboard","downloadDeck","getFileContents","onUpdateStatus","load","init","auth2","getAuthInstance","listen","currentUser","getBasicProfile","list","spaces","fields","collectionFile","find","f","info","wishlistFile","otherFiles","updateFile","deleteDeck","createMuiTheme","colors","deepOrange","blueGrey","ThemeProv","styledCss","baseStyled","Api","ParseMana","cost","params","Autocomplete","q","include_extras","Named","fuzzy","resolve","identifiers","post","flatMap","getImage","images","layout","card_faces","image_uris","getPlaceholder","cardName","getColorIdentity","c","color_identity","Body","MarginedTypography","IconWrap","CompressIcon","faCompressAlt","ExpandIcon","faExpandAlt","GoogleIcon","faGoogle","ClipboardIcon","faClipboard","LifecounterIcon","faDiceD20","createContext","LoginState"],"mappings":"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","file":"static/js/main.1809ff42.chunk.js","sourcesContent":["import { isNull } from \"lodash\";\nimport { DeckCard, DeckCards, EmptyCards, SectionName } from \"../State\";\n\nconst serialize = (collection?: string, ...sections: string[]): DeckCards => {\n    if (!collection || collection === \"\") {\n        return EmptyCards(...sections);\n    }\n    return collection\n        .split(\"##\")\n        .map((section, index) => {\n            let name: string, lines: string[];\n            if (index === 0) {\n                name = SectionName.Default;\n                lines = section.split(/\\r?\\n/);\n            } else {\n                [name, ...lines] = section.split(/\\r?\\n/);\n            }\n            return [\n                name,\n                lines\n                    .map(line => line.match(/^(\\d*) +(.*?)(?: # (.*))?$/))\n                    .filter(match => !isNull(match))\n                    .map(match => ({\n                        amount: parseInt(match![1]),\n                        name: match![2],\n                        comment: match![3],\n                    })),\n            ] as [string, DeckCard[]];\n        })\n        .reduce(\n            (prev, val) => ({ ...prev, [val[0]]: val[1].reduce((p, v) => ({ ...p, [v.name]: v }), {}) }),\n            EmptyCards(...sections)\n        );\n};\n\nconst deserialize = (deck: DeckCards) =>\n    Object.entries(deck).reduce(\n        (str, section) =>\n            `${str}${section[0] !== SectionName.Default ? `#${section[0]}\\n` : \"\"}${Object.values(section[1]).reduce(\n                (s, card) => `${s}${card.amount} ${card.name}${card.comment ? ` # ${card.comment}` : \"\"}\\n`,\n                \"\"\n            )}\\n`,\n        \"\"\n    );\n\nconst CollectionParser = {\n    serialize,\n    deserialize,\n};\n\nexport default CollectionParser;\n","import { IconButton, Tooltip, Typography } from \"@material-ui/core\";\r\nimport { IconButtonProps } from \"@material-ui/core/IconButton/IconButton\";\r\nimport { darken } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport styled, { css } from \"./Theme\";\r\n\r\nconst StyledIconButton = styled(IconButton)<{ background?: \"primary\" | \"secondary\" }>`\r\n    ${p =>\r\n        p.background &&\r\n        css`\r\n            background-color: ${p.theme.palette[p.background].main};\r\n            &.Mui-disabled {\r\n                background-color: ${darken(p.theme.palette[p.background].main, 0.3)};\r\n            }\r\n        `};\r\n    &:hover {\r\n        ${p =>\r\n        p.background &&\r\n            css`\r\n                background-color: ${p.theme.palette[p.background].dark};\r\n            `};\r\n    }\r\n`;\r\n\r\ntype Props = {\r\n    onClick: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\r\n    title: string;\r\n    size?: IconButtonProps[\"size\"];\r\n    disabled?: boolean;\r\n    background?: \"primary\" | \"secondary\";\r\n};\r\n\r\nconst TooltipButton: React.FC<Props> = ({ onClick, title, size, background, disabled, children }) => {\r\n    return (\r\n        <Tooltip title={title}>\r\n            <span>\r\n                <StyledIconButton size={size} background={background} disabled={disabled} onClick={onClick} aria-label={title}>\r\n                    {children}\r\n                    <Typography variant=\"srOnly\">{title}</Typography>\r\n                </StyledIconButton>\r\n            </span>\r\n        </Tooltip>\r\n    );\r\n};\r\nexport default TooltipButton;\r\n","import React, { lazy } from \"react\";\r\nimport Loading from \"../Components/Loading\";\r\n\r\nconst LazyRoute = (component: Parameters<typeof lazy>[0]) => {\r\n    const Component = lazy(component);\r\n    // eslint-disable-next-line react/display-name\r\n    return () => (\r\n        <React.Suspense fallback={<Loading />}>\r\n            <Component />\r\n        </React.Suspense>\r\n    );\r\n};\r\nexport default LazyRoute;\r\n","import { RouteProps } from \"react-router\";\r\nimport LazyRoute from \"./LazyRoute\";\r\n\r\nexport const RouteNames = {\r\n    // Public\r\n    SignIn: \"/signin\",\r\n    Lifecounter: \"/lifecounter\",\r\n    // Private\r\n    User: \"/user\",\r\n    AddDeck: \"/addDeck\",\r\n    Deck: (name: string) => `/decks/${name}`,\r\n    Home: \"/\",\r\n};\r\n\r\ntype Route = Pick<RouteProps, \"component\"> & { path: string };\r\n\r\ntype RoutesType = {\r\n    IsPublic: (path: string) => boolean;\r\n    Public: Route[];\r\n    Private: Route[];\r\n};\r\n\r\nconst PathMatch = (path: string) => new RegExp(`^${path.replace(/:[^/]*/, \"[^/]*\")}$`);\r\n\r\nconst Public: Route[] = [\r\n    { path: RouteNames.SignIn, component: LazyRoute(() => import(\"../Components/Applets/SignIn\")) },\r\n    { path: RouteNames.Lifecounter, component: LazyRoute(() => import(\"../Components/Applets/Lifecounter\")) },\r\n];\r\nconst Private: Route[] = [\r\n    { path: RouteNames.User, component: LazyRoute(() => import(\"../Components/Applets/UserInfo\")) },\r\n    { path: RouteNames.AddDeck, component: LazyRoute(() => import(\"../Components/Applets/AddDeck\")) },\r\n    { path: RouteNames.Deck(\":deckName\"), component: LazyRoute(() => import(\"../Components/Applets/DeckPreview\")) },\r\n    { path: RouteNames.Home, component: LazyRoute(() => import(\"../Components/Applets/Home\")) },\r\n];\r\n\r\nconst Routes: RoutesType = {\r\n    IsPublic: route => Public.some(({ path }) => route.match(PathMatch(path))),\r\n    Public,\r\n    Private,\r\n};\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport { Button, Typography } from \"@material-ui/core\";\r\nimport { GoogleIcon } from \"./Styled/Icons\";\r\n\r\ntype Props = {\r\n    variant?: \"text\" | \"outlined\" | \"contained\";\r\n    onClick: () => void;\r\n};\r\n\r\nconst SignInButton: React.FC<Props> = ({ variant, onClick }: Props) => {\r\n    return (\r\n        <Button variant={variant} onClick={onClick} startIcon={<GoogleIcon />}>\r\n            <Typography noWrap>Sign in</Typography>\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport default SignInButton;\r\n","import React from \"react\";\r\n\r\nconst NotFound: React.FC = () => {\r\n    return <div>Not found</div>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router\";\r\nimport NotFound from \"../Components/NotFound\";\r\nimport Routes from \"./Routes\";\r\n\r\nconst AppRouter: React.FC = () => (\r\n    <Switch>\r\n        {Routes.Public.map(r => (\r\n            <Route key={r.path} exact {...r} />\r\n        ))}\r\n        {Routes.Private.map(r => (\r\n            <Route key={r.path} exact {...r} />\r\n        ))}\r\n        <Route exact component={NotFound} />\r\n    </Switch>\r\n);\r\nexport default AppRouter;\r\n","import { keyBy, omit } from \"lodash\";\nimport { AppStateT, CardList, DeckName, Decks, EmptyCards, FileIds, SetList, SymbolList } from \".\";\nimport { Action } from \"./Actions\";\nimport { combineReducers } from \"../Utility\";\n\nconst filesReducer = (state: FileIds, action: Action): FileIds => {\n    switch (action.type) {\n        case \"CreateDeck\":\n            return {\n                ...state,\n                [action.name]: action.link,\n            };\n        case \"DeleteDeck\":\n            return { ...omit(state, [action.name]) } as FileIds;\n    }\n    return state;\n};\n\nconst cardListReducer = (state: CardList, action: Action): CardList => {\n    switch (action.type) {\n        case \"AddCards\":\n            return {\n                ...state,\n                ...keyBy(action.cards, \"name\"),\n            };\n    }\n    return state;\n};\n\nconst symbolListReducer = (state: SymbolList, action: Action): SymbolList => {\n    switch (action.type) {\n        case \"AddSymbols\":\n            return action.symbols.reduce((obj, s) => ({ ...obj, [s.symbol]: s }), {});\n    }\n    return state;\n};\n\nconst setListReducer = (state: SetList, action: Action): SetList => {\n    switch (action.type) {\n        case \"AddSets\":\n            return action.sets.reduce((obj, s) => ({ ...obj, [s.code]: s }), {});\n    }\n    return state;\n};\n\nconst decksReducer = (state: Decks, action: Action): Decks => {\n    switch (action.type) {\n        case \"CreateDeck\":\n            return {\n                ...state,\n                [action.name]: {\n                    cards: EmptyCards(),\n                    ...omit(action, [\"type\", \"link\"]),\n                },\n            };\n        case \"UpdateDeck\":\n            return {\n                ...state,\n                [action.name]: {\n                    ...state[action.name],\n                    isDirty: true,\n                    ...omit(action, [\"type\"]),\n                },\n            };\n        case \"UpdateDeckCard\":\n            if (action.card.amount === 0) {\n                return {\n                    ...state,\n                    [action.deckName]: {\n                        ...state[action.deckName],\n                        cards: {\n                            ...state[action.deckName].cards,\n                            [action.sectionName]: omit(state[action.deckName].cards[action.sectionName], action.card.name),\n                        },\n                        isDirty: true,\n                    },\n                };\n            }\n            return {\n                ...state,\n                [action.deckName]: {\n                    ...state[action.deckName],\n                    cards: {\n                        ...state[action.deckName].cards,\n                        [action.sectionName]: {\n                            ...state[action.deckName].cards[action.sectionName],\n                            [action.card.name]: {\n                                ...state[action.deckName].cards[action.sectionName][action.card.name],\n                                ...action.card,\n                            },\n                        },\n                    },\n                    isDirty: true,\n                },\n            };\n        case \"DeleteDeck\":\n            return { ...omit(state, [action.name]) } as Decks;\n    }\n    return state;\n};\n\nconst selectedDeckReducer = (state: string, action: Action): string => {\n    switch (action.type) {\n        case \"SelectDeck\":\n            return action.name;\n        case \"DeleteDeck\":\n            return action.name === state ? DeckName.Collection : state;\n    }\n    return state;\n};\n\nexport const reducer = combineReducers<AppStateT, Action>({\n    files: filesReducer,\n    cardList: cardListReducer,\n    symbolList: symbolListReducer,\n    setList: setListReducer,\n    decks: decksReducer,\n    selectedDeck: selectedDeckReducer,\n});\n","import React from \"react\";\r\n\r\nconst useClickaway = <T extends HTMLElement>(onClickaway: () => void) => {\r\n    const elemRef = React.createRef<T>();\r\n\r\n    const handleClickaway = (event: Event) => {\r\n        if (elemRef.current && !elemRef?.current.contains(event.target as Node)) {\r\n            onClickaway();\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        document.addEventListener(\"click\", handleClickaway);\r\n        document.addEventListener(\"touchend\", handleClickaway);\r\n        return () => {\r\n            document.removeEventListener(\"click\", handleClickaway);\r\n            document.removeEventListener(\"touchend\", handleClickaway);\r\n        };\r\n    });\r\n\r\n    return [elemRef];\r\n};\r\nexport default useClickaway;\r\n","import { Typography } from \"@material-ui/core\";\r\nimport styled, { css } from \"../Styled/Theme\";\r\n\r\ntype Props = {\r\n    open: boolean;\r\n};\r\n\r\nconst DrawerSubtitle = styled(Typography)<Props>`\r\n    color: ${p => p.theme.palette.grey[500]};\r\n    padding: ${p => p.theme.spacing(0, 2, 0, 2)};\r\n\r\n    transition: padding 0.5s ease-in-out, opacity 0.5s ease-in-out;\r\n\r\n    height: 0;\r\n    opacity: 1;\r\n\r\n    ${p =>\r\n        !p.open &&\r\n        css`\r\n            opacity: 0;\r\n        `}\r\n    ${p =>\r\n        p.open &&\r\n        css`\r\n            padding: ${p.theme.spacing(2, 2, 4, 2)};\r\n        `}\r\n`;\r\nexport default DrawerSubtitle;\r\n","import { List, ListItem, ListItemAvatar, ListItemText, Tooltip } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { RouteNames } from \"../../Routes/Routes\";\r\nimport { DrawerAvatar } from \"../Styled/Grid\";\r\nimport { LifecounterIcon } from \"../Styled/Icons\";\r\nimport styled from \"../Styled/Theme\";\r\nimport DrawerSubtitle from \"./DrawerSubtitle\";\r\n\r\nconst StyledItemText = styled(ListItemText)`\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n`;\r\n\r\ntype Props = {\r\n    open: boolean;\r\n    closeDrawer: () => void;\r\n};\r\n\r\nconst DrawerApps: React.FC<Props> = ({ open, closeDrawer }) => {\r\n    const { pathname } = useLocation();\r\n\r\n    return (\r\n        <>\r\n            <DrawerSubtitle open={open}>Apps</DrawerSubtitle>\r\n            <List>\r\n                <Tooltip title=\"Lifecounter\" placement=\"right\">\r\n                    <ListItem component={Link} to={RouteNames.Lifecounter} onClick={closeDrawer} button selected={!!pathname.match(/^\\/lifecounter$/)}>\r\n                        <ListItemAvatar>\r\n                            <DrawerAvatar alt=\"Lifecounter\">\r\n                                <LifecounterIcon />\r\n                            </DrawerAvatar>\r\n                        </ListItemAvatar>\r\n                        <StyledItemText primary=\"Lifecounter\" />\r\n                    </ListItem>\r\n                </Tooltip>\r\n            </List>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DrawerApps;\r\n","import { Badge } from \"@material-ui/core\";\r\nimport { AvatarProps } from \"@material-ui/core/Avatar\";\r\nimport CollectionsIcon from \"@material-ui/icons/Collections\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport React from \"react\";\r\nimport { Deck, DeckName, getDeckName } from \"../../State\";\r\nimport { DrawerAvatar } from \"../Styled/Grid\";\r\n\r\nconst getDeckIcon = (name: string) => {\r\n    return name === DeckName.Wishlist ? <FavoriteIcon /> : <CollectionsIcon />;\r\n};\r\n\r\ntype Props = {\r\n    deck: Deck;\r\n    variant?: AvatarProps[\"variant\"];\r\n};\r\n\r\nconst DeckAvatar: React.FC<Props> = ({ deck, variant }) => {\r\n    return (\r\n        <Badge\r\n            invisible={!deck?.isDirty}\r\n            color=\"primary\"\r\n            overlap=\"circle\"\r\n            badgeContent=\" \"\r\n            anchorOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"right\",\r\n            }}\r\n        >\r\n            <DrawerAvatar variant={variant} alt={getDeckName(deck?.name)} src={deck?.previewUrl}>\r\n                {getDeckIcon(deck?.name)}\r\n            </DrawerAvatar>\r\n        </Badge>\r\n    );\r\n};\r\nexport default DeckAvatar;\r\n","import { Divider, List, ListItem, ListItemAvatar, ListItemText, Tooltip } from \"@material-ui/core\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport React from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { RouteNames } from \"../../Routes/Routes\";\r\nimport { AppState, Deck, DeckName, getDeckName } from \"../../State\";\r\nimport { DrawerAvatar } from \"../Styled/Grid\";\r\nimport styled from \"../Styled/Theme\";\r\nimport DeckAvatar from \"./DeckAvatar\";\r\nimport DrawerSubtitle from \"./DrawerSubtitle\";\r\n\r\nconst StyledItemText = styled(ListItemText)`\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n`;\r\n\r\ntype Props = {\r\n    open: boolean;\r\n    closeDrawer: () => void;\r\n};\r\n\r\nconst DrawerDeckList: React.FC<Props> = ({ open, closeDrawer }) => {\r\n    const { pathname } = useLocation();\r\n    const [state] = React.useContext(AppState);\r\n\r\n    const renderItem = (deck: Deck) => (\r\n        <Tooltip key={deck.name} title={open ? \"\" : (state.decks[deck.name].isDirty ? \"*\" : \"\") + getDeckName(deck.name)} placement=\"right\">\r\n            <ListItem\r\n                component={Link}\r\n                to={RouteNames.Deck(encodeURIComponent(deck.name))}\r\n                onClick={closeDrawer}\r\n                button\r\n                selected={state.selectedDeck === deck.name && !!pathname.match(/^\\/decks\\//)}\r\n            >\r\n                <ListItemAvatar>\r\n                    <DeckAvatar deck={deck} />\r\n                </ListItemAvatar>\r\n                <StyledItemText primary={getDeckName(deck.name)} />\r\n            </ListItem>\r\n        </Tooltip>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Divider />\r\n            <DrawerSubtitle open={open}>Decks</DrawerSubtitle>\r\n            <List>\r\n                {renderItem(state.decks[DeckName.Collection])}\r\n                {renderItem(state.decks[DeckName.Wishlist])}\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                <Tooltip title=\"Add deck\" placement=\"right\">\r\n                    <ListItem component={Link} to={RouteNames.AddDeck} onClick={closeDrawer} button selected={!!pathname.match(/^\\/addDeck$/)}>\r\n                        <ListItemAvatar>\r\n                            <DrawerAvatar alt=\"Add deck\">\r\n                                <AddCircleOutlineIcon />\r\n                            </DrawerAvatar>\r\n                        </ListItemAvatar>\r\n                        <StyledItemText primary=\"Add deck\" />\r\n                    </ListItem>\r\n                </Tooltip>\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                {Object.values(state.decks)\r\n                    .filter(deck => deck.name !== DeckName.Collection && deck.name !== DeckName.Wishlist)\r\n                    .map(deck => renderItem(deck))}\r\n            </List>\r\n        </>\r\n    );\r\n};\r\nexport default DrawerDeckList;\r\n","import { BottomNavigation, BottomNavigationAction } from \"@material-ui/core\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport React from \"react\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { RouteNames } from \"../../Routes/Routes\";\r\nimport { AppState, getDeckName } from \"../../State\";\r\nimport styled from \"../Styled/Theme\";\r\nimport DeckAvatar from \"./DeckAvatar\";\r\n\r\nconst StyledNavigation = styled(BottomNavigation)`\r\n    position: fixed;\r\n    bottom: 0;\r\n    width: 100%;\r\n    background-color: ${p => p.theme.palette.secondary.dark};\r\n`;\r\n\r\nconst DeckAction = styled(BottomNavigationAction)`\r\n    flex-grow: 10;\r\n\r\n    & .MuiBottomNavigationAction-label {\r\n        width: 100%;\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n    }\r\n`;\r\n\r\nconst DeckIcon = styled.div`\r\n    height: 24px;\r\n    width: 24px;\r\n    position: relative;\r\n\r\n    & > * {\r\n        position: absolute;\r\n        bottom: 0;\r\n        transform: translateX(-50%);\r\n    }\r\n`;\r\n\r\ntype Props = {\r\n    open: boolean;\r\n    toggleOpen: () => void;\r\n};\r\n\r\nconst MobileNavigation: React.FC<Props> = ({ open, toggleOpen }) => {\r\n    const { pathname } = useLocation();\r\n    const history = useHistory();\r\n    const [state] = React.useContext(AppState);\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    React.useEffect(() => setValue(open ? 2 : pathname.match(RouteNames.AddDeck) ? 0 : 1), [open, pathname]);\r\n\r\n    const onChange = (tab: number) => {\r\n        setValue(tab);\r\n        switch (tab) {\r\n            case 0:\r\n                history.push(RouteNames.AddDeck);\r\n                return;\r\n            case 1:\r\n                history.push(RouteNames.Deck(encodeURIComponent(state.decks[state.selectedDeck].name)));\r\n                return;\r\n            case 2:\r\n                toggleOpen();\r\n                return;\r\n        }\r\n        throw Error(`Invalid tab number ${tab}`);\r\n    };\r\n\r\n    return (\r\n        <StyledNavigation value={value} onChange={(_, val) => onChange(val)} showLabels>\r\n            <BottomNavigationAction label=\"Add deck\" icon={<AddCircleOutlineIcon />} />\r\n            <DeckAction\r\n                label={getDeckName(state.selectedDeck)}\r\n                icon={\r\n                    <DeckIcon>\r\n                        <DeckAvatar deck={state.decks[state.selectedDeck]} />\r\n                    </DeckIcon>\r\n                }\r\n            />\r\n            <BottomNavigationAction label=\"Menu\" icon={<MenuIcon />} />\r\n        </StyledNavigation>\r\n    );\r\n};\r\nexport default MobileNavigation;\r\n","import { AppBar, Avatar, Container, Divider, Drawer, IconButton, Link as MUILink, Toolbar, Tooltip, Typography, useMediaQuery } from \"@material-ui/core\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Axios, { AxiosResponse } from \"axios\";\nimport React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { isNullOrUndefined } from \"util\";\nimport AppRouter from \"../Routes/AppRouter\";\nimport Routes, { RouteNames } from \"../Routes/Routes\";\nimport { AppState, initialState, LoginState } from \"../State\";\nimport { reducer } from \"../State/Reducers\";\nimport { isFulfilledPromise } from \"../Utility\";\nimport GoogleApi, { GoogleProfile } from \"../Utility/GoogleApi\";\nimport Scry from \"../Utility/Scry\";\nimport { ScryCardSymbol, ScrySet } from \"../Utility/Scry/Types\";\nimport useClickaway from \"../Utility/useClickaway\";\nimport DrawerApps from \"./Drawer/DrawerApps\";\nimport DrawerDeckList from \"./Drawer/DrawerDeckList\";\nimport MobileNavigation from \"./Drawer/MobileNavigation\";\nimport Loading from \"./Loading\";\nimport SignInButton from \"./SignInButton\";\nimport { FlexCol } from \"./Styled/Grid\";\nimport styled, { ComponentProps, css, MainTheme } from \"./Styled/Theme\";\nimport TooltipButton from \"./Styled/TooltipButton\";\n\nconst bodyOpen = css<ComponentProps<any>>`\n    margin-left: ${p => p.theme.constants.drawerWidth};\n    width: calc(100% - ${p => p.theme.constants.drawerWidth});\n    transition: ${p =>\n        p.theme.transitions.create([\"width\", \"margin\"], {\n            easing: p.theme.transitions.easing.sharp,\n            duration: p.theme.transitions.duration.enteringScreen,\n        })};\n`;\n\nconst bodyClose = css<ComponentProps<any>>`\n    transition: ${p =>\n        p.theme.transitions.create([\"width\", \"margin\"], {\n            easing: p.theme.transitions.easing.sharp,\n            duration: p.theme.transitions.duration.leavingScreen,\n        })};\n`;\n\nconst CustomAppBar = styled(AppBar)<{ open: boolean }>`\n    z-index: ${p => p.theme.zIndex.drawer + 1};\n    ${bodyClose}\n    ${p => p.open && bodyOpen}\n    ${p =>\n        p.open &&\n        css`\n            ${p.theme.breakpoints.down(\"xs\")} {\n                & {\n                    width: 100%;\n                    margin-left: 0;\n                }\n            }\n        `}\n`;\n\nconst MenuButton = styled(IconButton)<{ open: boolean }>`\n    margin-right: 36px;\n    ${p =>\n        p.open &&\n        css`\n            display: none;\n        `}\n\n    ${p => p.theme.breakpoints.down(\"xs\")} {\n        & {\n            margin-right: ${p => p.theme.spacing(1)}px;\n            display: inline-block;\n        }\n    }\n`;\n\nconst drawerOpen = css<ComponentProps<any>>`\n    width: ${p => p.theme.constants.drawerWidth};\n    overflow-x: hidden;\n    transition: ${p =>\n        [\"width\", \"max-height\"]\n            .map(d =>\n                p.theme.transitions.create(d, {\n                    easing: p.theme.transitions.easing.sharp,\n                    duration: p.theme.transitions.duration.enteringScreen,\n                })\n            )\n            .join(\", \")};\n\n    ${p => p.theme.breakpoints.down(\"xs\")} {\n        & {\n            width: 100%;\n            height: auto;\n            max-height: calc(100% - 56px);\n        }\n    }\n`;\n\nconst drawerClose = css<ComponentProps<any>>`\n    width: ${p => p.theme.constants.drawerWidthClosed};\n\n    ${p => p.theme.breakpoints.down(\"xs\")} {\n        & {\n            max-height: 0;\n        }\n    }\n`;\n\nconst CustomDrawer = styled(Drawer)<{ open?: boolean }>`\n    flex-shrink: 0;\n    white-space: nowrap;\n    ${drawerOpen}\n    ${p => !p.open && drawerClose}\n\n    .MuiDrawer-paper {\n        ${drawerOpen}\n        ${p => !p.open && drawerClose}\n        overflow: hidden;\n    }\n`;\n\nconst DrawerToolbar = styled(Toolbar)`\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    z-index: 1;\n`;\n\nconst DrawerBody = styled.div<{ open?: boolean }>`\n    overflow: hidden;\n    padding-bottom: ${p => p.theme.spacing(6)}px;\n    ${p =>\n        p.open &&\n        css`\n            overflow-y: auto;\n        `}\n\n    &::after {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        content: \"\";\n        pointer-events: none;\n        background: linear-gradient(\n            0deg,\n            ${p => p.theme.palette.background.paper} ${p => p.theme.spacing(1)}px,\n            transparent ${p => p.theme.spacing(8)}px,\n            transparent 100%\n        );\n    }\n`;\n\nconst NoGutterContainer = styled(Container)`\n    ${p => p.theme.breakpoints.down(\"xs\")} {\n        & {\n            padding: 0;\n        }\n    }\n`;\n\nconst MainContent = styled.div<{ open: boolean }>`\n    flex-grow: 1;\n    padding: ${p => p.theme.spacing(2)}px;\n    margin-left: ${p => p.theme.constants.drawerWidthClosed};\n    ${bodyClose}\n    ${p => p.open && bodyOpen}\n\n    ${p =>\n        p.open &&\n        css`\n            ${p.theme.breakpoints.down(\"sm\")} {\n                & {\n                    margin-left: ${p => p.theme.constants.drawerWidthClosed};\n                    width: calc(100% - ${p => p.theme.constants.drawerWidthClosed});\n                }\n            }\n        `}\n    ${p => p.theme.breakpoints.down(\"xs\")} {\n        & {\n            width: 100%;\n            margin-left: 0;\n            margin-bottom: ${p => p.theme.spacing(7)}px;\n            padding: ${p => p.theme.spacing(1)}px;\n        }\n    }\n`;\n\nconst ProfileAvatar = styled.div`\n    margin-right: ${p => p.theme.spacing(1)}px;\n`;\n\nconst App: React.FC = () => {\n    const history = useHistory();\n    const isMobile = useMediaQuery(MainTheme.breakpoints.down(\"xs\"));\n    const isSmall = useMediaQuery(MainTheme.breakpoints.down(\"sm\"));\n    const [state, dispatch] = React.useReducer(reducer, initialState);\n\n    const [profile, setProfile] = React.useState<GoogleProfile>();\n    const [isSignedIn, setIsSignedIn] = React.useState<boolean | undefined>(undefined);\n\n    const handleSignoutClick = () => {\n        GoogleApi.signOut();\n        setProfile(undefined);\n    };\n\n    const [open, setOpen] = React.useState(false);\n    const handleDrawerToggle = () => setOpen(p => !p);\n    const [drawerRef] = useClickaway<HTMLDivElement>(() => isSmall && setOpen(false));\n\n    React.useEffect(() => {\n        GoogleApi.initClient(async (signedIn: boolean) => {\n            let redirect = history.location.pathname;\n            if (!signedIn) {\n                setIsSignedIn(false);\n                if (!Routes.IsPublic(redirect)) history.push(RouteNames.SignIn);\n                return;\n            }\n            if (redirect.match(RouteNames.SignIn)) redirect = RouteNames.Home;\n            history.push(redirect);\n\n            setIsSignedIn(true);\n\n            GoogleApi.prepareAppData(dispatch, state)().then(() => setProfile(GoogleApi.getProfile()));\n        });\n        Scry.Symbology.All()\n            .then(symbols => {\n                const endpoint = Axios.create({\n                    baseURL: \"\",\n                    responseType: \"text\",\n                    headers: {\n                        \"Content-Type\": \"image/svg+xml\",\n                    },\n                });\n                return Promise.allSettled(\n                    symbols.map(symbol =>\n                        endpoint.get<string, AxiosResponse<ScryCardSymbol>>(symbol.svg_uri, { transformResponse: r => ({ ...symbol, svg: r }) })\n                    )\n                );\n            })\n            .then(responses => {\n                dispatch({\n                    type: \"AddSymbols\",\n                    symbols: responses.filter(isFulfilledPromise).map(r => r.value.data),\n                });\n            })\n            .then(Scry.Sets.All)\n            .then(sets => {\n                const endpoint = Axios.create({\n                    baseURL: \"\",\n                    responseType: \"text\",\n                    headers: {\n                        \"Content-Type\": \"image/svg+xml\",\n                    },\n                });\n                return Promise.allSettled(\n                    sets.map(set => endpoint.get<string, AxiosResponse<ScrySet>>(set.icon_svg_uri, { transformResponse: r => ({ ...set, icon_svg: r }) }))\n                );\n            })\n            .then(responses => {\n                dispatch({\n                    type: \"AddSets\",\n                    sets: responses.filter(isFulfilledPromise).map(r => r.value.data),\n                });\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    return (\n        <AppState.Provider value={[state, dispatch]}>\n            <LoginState.Provider value={{ profile, signOut: handleSignoutClick }}>\n                <CustomAppBar position=\"sticky\" open={open}>\n                    <Toolbar>\n                        {!isMobile && (\n                            <MenuButton color=\"inherit\" aria-label=\"open drawer\" onClick={handleDrawerToggle} edge=\"start\" open={open}>\n                                <MenuIcon />\n                            </MenuButton>\n                        )}\n                        <Typography variant=\"h6\" style={{ overflow: \"hidden\" }}>\n                            <MUILink variant=\"inherit\" color=\"inherit\" underline=\"none\" component={Link} to={isSignedIn ? RouteNames.Home : RouteNames.SignIn}>\n                                MTGCollection\n                            </MUILink>\n                        </Typography>\n                        <FlexCol />\n                        {isSignedIn ? (\n                            <>\n                                {!isNullOrUndefined(profile) && (\n                                    <ProfileAvatar>\n                                        <Tooltip title={`Signed in as ${profile.getGivenName()} (${profile.getEmail()})`}>\n                                            <Avatar component={Link} to={RouteNames.User} alt={profile.getGivenName()} src={profile.getImageUrl()} />\n                                        </Tooltip>\n                                    </ProfileAvatar>\n                                )}\n                                <TooltipButton title=\"SignOut\" onClick={handleSignoutClick}>\n                                    <ExitToAppIcon />\n                                </TooltipButton>\n                            </>\n                        ) : (\n                            isSignedIn !== undefined && <SignInButton onClick={GoogleApi.signIn} />\n                        )}\n                    </Toolbar>\n                </CustomAppBar>\n                <CustomDrawer open={open} anchor={isMobile ? \"bottom\" : \"left\"} variant=\"permanent\" ref={drawerRef}>\n                    <DrawerToolbar>\n                        <IconButton onClick={handleDrawerToggle}>{isMobile ? <CloseIcon /> : <ChevronLeftIcon />}</IconButton>\n                    </DrawerToolbar>\n                    <Divider />\n                    <DrawerBody open={open}>\n                        <DrawerApps open={open} closeDrawer={() => isMobile && setOpen(false)} />\n                        {isSignedIn && <DrawerDeckList open={open} closeDrawer={() => isMobile && setOpen(false)} />}\n                    </DrawerBody>\n                </CustomDrawer>\n                <NoGutterContainer maxWidth=\"xl\">\n                    <MainContent open={open}>{isSignedIn === undefined ? <Loading /> : <AppRouter />}</MainContent>\n                </NoGutterContainer>\n                {isMobile && <MobileNavigation open={open} toggleOpen={handleDrawerToggle} />}\n            </LoginState.Provider>\n        </AppState.Provider>\n    );\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (\"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/sw.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\"This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA\");\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\"New content is available and will be used when all tabs for this page are closed. See https://bit.ly/CRA-PWA.\");\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\"No internet connection found. App is running in offline mode.\");\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import { CssBaseline } from \"@material-ui/core\";\nimport { ThemeProvider as MUIThemeProvider, StylesProvider } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./Components/App\";\nimport { MainTheme } from \"./Components/Styled/Theme\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <HashRouter>\n        <StylesProvider injectFirst>\n            <ThemeProvider theme={MainTheme}>\n                <MUIThemeProvider theme={MainTheme}>\n                    <CssBaseline />\n                    <App />\n                </MUIThemeProvider>\n            </ThemeProvider>\n        </StylesProvider>\n    </HashRouter>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n","import { Avatar, Paper, Typography } from \"@material-ui/core\";\r\nimport styled from \"./Theme\";\r\n\r\nexport const FlexCol = styled.div`\r\n    flex: 1 1 auto;\r\n`;\r\n\r\nexport const AppletContent = styled(Paper)`\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: stretch;\r\n    min-height: ${p => p.theme.constants.appletHeight};\r\n    overflow: hidden;\r\n    padding: ${p => p.theme.spacing(4)}px;\r\n    ${p => p.theme.breakpoints.down(\"xs\")} {\r\n        & {\r\n            padding: ${p => p.theme.spacing(2)}px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const AppletActions = styled.div`\r\n    align-self: flex-end;\r\n`;\r\n\r\nexport const Title = styled(Typography).attrs(p => ({\r\n    component: \"h2\",\r\n    variant: \"h4\",\r\n    color: \"primary\",\r\n    gutterBottom: true,\r\n}))``;\r\n\r\nexport const DrawerAvatar = styled(Avatar)`\r\n    background-color: ${p => p.theme.palette.background.paper};\r\n    color: ${p => p.theme.palette.text.secondary};\r\n`;\r\n","export const ArrayChunk = <T>(arr: T[], n: number): T[][] => (arr.length <= n ? [arr] : [arr.slice(0, n)].concat(ArrayChunk(arr.slice(n), n)));\r\n\r\nexport const Arr = {\r\n    Unique: <T>(v: T, i: number, self: T[]) => self.indexOf(v) === i,\r\n    NotNull: <T>(v: T) => v !== null && v !== undefined,\r\n};\r\n\r\nexport const MakeTuple = <T extends string[]>(...args: T) => args;\r\n\r\nexport const combineReducers = <State, Action>(reducers: { [P in keyof State]: (state: State[P], action: Action) => State[P] }) => {\r\n    return (state: State, action: Action) => {\r\n        const temp: State = {} as any;\r\n        for (const i in reducers) {\r\n            temp[i] = reducers[i](state[i], action);\r\n        }\r\n        return temp;\r\n    };\r\n};\r\n\r\nexport const chainReducers = <State, Action>(...reducers: ((state: State, action: Action) => State)[]) => {\r\n    return (state: State, action: Action) => {\r\n        return reducers.reduce((curr, reducer) => reducer(curr, action), state);\r\n    };\r\n};\r\n\r\nexport const PxFromAvatarSize = (size?: \"chip\" | \"inline\") => {\r\n    switch (size) {\r\n        case \"chip\":\r\n            return 9;\r\n        case \"inline\":\r\n            return 12;\r\n        case undefined:\r\n            return 24;\r\n    }\r\n};\r\n\r\nexport const isFulfilledPromise = <T extends any>(result: PromiseSettledResult<T>): result is PromiseFulfilledResult<T> => result?.status === \"fulfilled\";\r\n","import React from \"react\";\r\nimport { AppStateT, Deck, DeckCard } from \".\";\r\nimport Scry from \"../Utility/Scry\";\r\nimport { Action } from \"./Actions\";\r\n\r\nexport const downloadCards = (dispatch: React.Dispatch<Action>, state: AppStateT) => (deck: Deck) => {\r\n    const missingCards = Object.values(deck?.cards ?? {})\r\n        .reduce((prev, val) => [...prev, ...Object.values(val)], [] as DeckCard[])\r\n        .filter(card => !state.cardList[card.name]);\r\n    Scry.Cards.Collection(missingCards.map(card => ({ name: card.name }))).then(cards => dispatch({ type: \"AddCards\", cards }));\r\n};\r\n","/* global gapi */\nimport React from \"react\";\nimport { AppStateT, Deck, DeckName, DeckProps, SectionName } from \"../State\";\nimport { Action } from \"../State/Actions\";\nimport { downloadCards } from \"../State/Thunks\";\nimport CollectionParser from \"./CollectionParser\";\n\nconst GoogleApiInit = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    clientId: process.env.REACT_APP_CLIENT_ID,\n    discoveryDocs: [\"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\"],\n    scope: \"profile https://www.googleapis.com/auth/drive.appdata https://www.googleapis.com/auth/drive.file\",\n};\n\nconst initClient = (onUpdateStatus: (isSignedIn: boolean) => void) => {\n    gapi.load(\"client:auth2\", () => {\n        gapi.client.init(GoogleApiInit).then(() => {\n            gapi.auth2.getAuthInstance().isSignedIn.listen(onUpdateStatus);\n            onUpdateStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n        }, console.error);\n    });\n};\n\nconst prepareAppData = (dispatch: React.Dispatch<Action>, state: AppStateT) => async () => {\n    var response = await gapi.client.drive.files.list({\n        spaces: \"appDataFolder\",\n        fields: \"nextPageToken, files(id, name, appProperties)\",\n    });\n\n    const collectionFile = response.result?.files?.find(f => f.appProperties?.name === DeckName.Collection);\n    if (!collectionFile) {\n        console.info(\"Creating collection...\");\n        await createNewDeck(dispatch, state)({ name: DeckName.Collection });\n    } else {\n        console.info(\"Loading collection...\");\n        await downloadDeck(dispatch, state)(DeckName.Collection, collectionFile);\n    }\n\n    const wishlistFile = response.result?.files?.find(f => f.appProperties?.name === DeckName.Wishlist);\n    if (!wishlistFile) {\n        console.info(\"Creating wishlist...\");\n        await createNewDeck(dispatch, state)({ name: DeckName.Wishlist });\n    } else {\n        console.info(\"Loading wishlist...\");\n        await downloadDeck(dispatch, state)(DeckName.Wishlist, wishlistFile);\n    }\n\n    const otherFiles = response.result?.files?.filter(f => f.appProperties?.name !== DeckName.Collection && f.appProperties?.name !== DeckName.Wishlist)!;\n    for (let i = 0; i < otherFiles.length; i++) {\n        const file = otherFiles[i];\n        const name = file.appProperties?.name ?? file.name?.match(/(.*?)\\.txt/)?.[0] ?? \"unnamed\";\n        downloadDeck(dispatch, state)(name, file);\n    }\n};\n\nconst createNewFile = async ({\n    name,\n    props,\n    fileContent,\n    folder,\n}: {\n    name: string;\n    props?: object;\n    fileContent?: string;\n    folder?: string[];\n}): Promise<string> => {\n    const file = new Blob([fileContent ?? \"\"], { type: \"text/plain\" });\n    const metadata = {\n        name,\n        mimeType: \"text/plain\",\n        appProperties: props ?? {},\n        parents: [\"appDataFolder\", ...(folder ?? [])],\n    };\n\n    const accessToken = gapi.auth.getToken().access_token;\n    const form = new FormData();\n    form.append(\"metadata\", new Blob([JSON.stringify(metadata)], { type: \"application/json\" }));\n    form.append(\"file\", file);\n\n    const res = await fetch(\"https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart&fields=id\", {\n        method: \"POST\",\n        headers: new Headers({ Authorization: \"Bearer \" + accessToken }),\n        body: form,\n    });\n    const val = await res.json();\n    return val.id;\n};\n\nconst updateFile = async ({ id, fileContent }: { id: string; fileContent: string }) => {\n    const file = new Blob([fileContent], { type: \"text/plain\" });\n\n    const accessToken = gapi.auth.getToken().access_token;\n    const form = new FormData();\n    form.append(\"file\", file);\n\n    const res = await fetch(`https://www.googleapis.com/upload/drive/v3/files/${id}?uploadType=media&fields=id`, {\n        method: \"PATCH\",\n        headers: new Headers({ Authorization: \"Bearer \" + accessToken }),\n        body: form,\n    });\n    const val = await res.json();\n    return val.id;\n};\n\nconst getFileContents = async ({ id }: { id: string }) => {\n    const res = await gapi.client.drive.files.get({\n        fileId: id,\n        alt: \"media\",\n    });\n    return res.body;\n};\n\nconst deleteFile = async ({ id }: { id: string }) => gapi.client.drive.files.delete({ fileId: id });\n\nconst createNewDeck = (dispatch: React.Dispatch<Action>, state: AppStateT) => async ({\n    name,\n    fileContent,\n    ...restProps\n}: DeckProps & { fileContent?: string }) => {\n    const deck: Deck = {\n        name,\n        cards: CollectionParser.serialize(fileContent, SectionName.Sideboard, SectionName.Maybeboard),\n        isDirty: false,\n        ...restProps,\n    };\n    dispatch({\n        type: \"CreateDeck\",\n        link: await createNewFile({\n            name: `${name}.txt`,\n            props: {\n                name,\n                ...restProps,\n            },\n            fileContent,\n        }),\n        ...deck,\n    });\n    downloadCards(dispatch, state)(deck);\n};\n\nconst downloadDeck = (dispatch: React.Dispatch<Action>, state: AppStateT) => async (name: string, file: gapi.client.drive.File) => {\n    const deck: Deck = {\n        name,\n        cards: CollectionParser.serialize(await GoogleApi.getFileContents({ id: file.id! }), SectionName.Sideboard, SectionName.Maybeboard),\n        isDirty: false,\n        previewUrl: file.appProperties?.previewUrl,\n    };\n    dispatch({ type: \"CreateDeck\", link: file.id!, ...deck });\n    downloadCards(dispatch, state)(deck);\n};\n\nconst deleteDeck = (dispatch: React.Dispatch<Action>) => async ({ name, id }: { name: string; id: string }) => {\n    await deleteFile({ id });\n    dispatch({ type: \"DeleteDeck\", name });\n};\n\nconst getProfile = () => {\n    return gapi.auth2\n        .getAuthInstance()\n        .currentUser.get()\n        .getBasicProfile();\n};\n\nconst signIn = () => gapi.auth2.getAuthInstance().signIn();\nconst signOut = () => gapi.auth2.getAuthInstance().signOut();\n\nexport type GoogleProfile = gapi.auth2.BasicProfile;\n\nconst GoogleApi = {\n    initClient,\n    getProfile,\n    signIn,\n    signOut,\n    prepareAppData,\n    createNewFile,\n    updateFile,\n    deleteFile,\n    createNewDeck,\n    downloadDeck,\n    deleteDeck,\n    getFileContents,\n};\nexport default GoogleApi;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport baseStyled, { css as styledCss, ThemedStyledInterface, ThemedStyledProps, ThemeProvider as ThemeProv } from \"styled-components\";\r\nimport { colors } from \"@material-ui/core\";\r\n\r\nconst additionalArgs = {\r\n    constants: {\r\n        drawerWidth: \"260px\",\r\n        drawerWidthClosed: \"72px\",\r\n        appletHeight: \"280px\",\r\n    },\r\n};\r\n\r\nexport const MainTheme = createMuiTheme(\r\n    {\r\n        palette: {\r\n            type: \"dark\",\r\n            primary: { main: colors.deepOrange[700] },\r\n            secondary: { main: colors.blueGrey[500] },\r\n        },\r\n    },\r\n    additionalArgs\r\n);\r\n\r\nexport const ThemeProvider = ThemeProv;\r\nexport const css = styledCss;\r\n\r\nexport type Theme = typeof MainTheme & typeof additionalArgs;\r\nexport type ComponentProps<T = {}> = ThemedStyledProps<T, Theme>;\r\nconst styled = baseStyled as ThemedStyledInterface<Theme>;\r\nexport default styled;\r\n","import Axios from \"axios\";\nimport { Arr, ArrayChunk, isFulfilledPromise } from \"..\";\nimport DeepReadonly from \"../DeepReadonly\";\nimport { ScryCard, ScryCardIdentifier, ScryCardImageUris, ScryCardSymbol, ScryManaCost, ScrySet } from \"./Types\";\n\ntype List<T = any> = {\n    data: T[];\n};\n\nconst Api = (() => {\n    let endpoint = Axios.create({\n        baseURL: \"https://api.scryfall.com\",\n        responseType: \"json\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n    });\n\n    return {\n        endpoint,\n        Symbology: {\n            All: () => endpoint.get<List<ScryCardSymbol>>(\"/symbology\").then(r => r.data.data),\n            ParseMana: (cost: string) =>\n                endpoint\n                    .get<ScryManaCost>(\"/symbology/parse-mana\", { params: { cost } })\n                    .then(r => r.data),\n        },\n        Cards: {\n            Autocomplete: (q: string) =>\n                endpoint\n                    .get<List<string>>(\"/cards/autocomplete\", { params: { q, include_extras: true } })\n                    .then(r => r.data.data),\n            Named: (fuzzy: string) =>\n                endpoint\n                    .get<ScryCard>(\"/cards/named\", { params: { fuzzy } })\n                    .then(r => r.data),\n            Collection: (cards: ScryCardIdentifier[]) =>\n                (cards?.length ?? 0) <= 0\n                    ? Promise.resolve([])\n                    : Promise.allSettled(\n                        ArrayChunk(cards, 75).map(identifiers => endpoint.post<List<ScryCard>>(\"/cards/collection\", { identifiers }))\n                    ).then(r => r.filter(isFulfilledPromise).flatMap(v => v.value.data.data)),\n        },\n        Sets: {\n            All: () => endpoint.get<List<ScrySet>>(\"/sets\").then(r => r.data.data),\n        },\n    };\n})();\n\nconst getImage = (card: DeepReadonly<ScryCard>, type: keyof ScryCardImageUris): string | null => {\n    let images: ScryCardImageUris | null | undefined;\n    switch (card.layout) {\n        case \"transform\":\n        case \"double_faced_token\":\n            images = card.card_faces![0].image_uris;\n            break;\n        default:\n            images = card.image_uris;\n    }\n    return images?.[type] ?? null;\n};\n\nconst getPlaceholder = (cardName: string): string => `https://via.placeholder.com/146x204?text=${cardName.replace(/\\s/, \"+\")}`;\n\nconst getColorIdentity = (...cards: DeepReadonly<ScryCard>[]): string =>\n    cards\n        .filter(Arr.NotNull)\n        .flatMap(c => c.color_identity)\n        .filter(Arr.Unique)\n        .map(c => `{${c}}`)\n        .join(\"\");\n\nconst Scry = {\n    ...Api,\n    getImage,\n    getPlaceholder,\n    getColorIdentity,\n};\nexport default Scry;\n","import { CircularProgress, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { AppletContent } from \"./Styled/Grid\";\r\nimport styled from \"./Styled/Theme\";\r\n\r\nconst Body = styled(AppletContent)`\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst MarginedTypography = styled(Typography)`\r\n    margin-top: ${p => p.theme.spacing(2)}px;\r\n`;\r\n\r\nconst Loading: React.FC = () => (\r\n    <Body>\r\n        <CircularProgress size={60} />\r\n        <MarginedTypography variant=\"h6\">\r\n            Loading...\r\n        </MarginedTypography>\r\n    </Body>\r\n);\r\nexport default Loading;\r\n","import { faGoogle } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faClipboard, faCompressAlt, faDiceD20, faExpandAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport styled from \"./Theme\";\r\n\r\nconst IconWrap = styled.div`\r\n    width: 24px;\r\n    height: 24px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const CompressIcon: React.FC = () => (\r\n    <IconWrap>\r\n        <FontAwesomeIcon icon={faCompressAlt} />\r\n    </IconWrap>\r\n);\r\n\r\nexport const ExpandIcon: React.FC = () => (\r\n    <IconWrap>\r\n        <FontAwesomeIcon icon={faExpandAlt} />\r\n    </IconWrap>\r\n);\r\n\r\nexport const GoogleIcon: React.FC = () => (\r\n    <IconWrap>\r\n        <FontAwesomeIcon icon={faGoogle} />\r\n    </IconWrap>\r\n);\r\n\r\nexport const ClipboardIcon: React.FC = () => (\r\n    <IconWrap>\r\n        <FontAwesomeIcon icon={faClipboard} />\r\n    </IconWrap>\r\n);\r\n\r\nexport const LifecounterIcon: React.FC = () => (\r\n    <IconWrap>\r\n        <FontAwesomeIcon icon={faDiceD20} />\r\n    </IconWrap>\r\n);\r\n","import React from \"react\";\nimport DeepReadonly from \"../Utility/DeepReadonly\";\nimport { ScryCard, ScryCardSymbol, ScrySet } from \"../Utility/Scry/Types\";\nimport { Action } from \"./Actions\";\nimport { GoogleProfile } from \"../Utility/GoogleApi\";\n\nexport enum DeckName {\n    Collection = \"_collection\",\n    Wishlist = \"_wishlist\",\n}\n\nexport const getDeckName = (name: string) => {\n    if (name === DeckName.Collection) return \"Collection\";\n    if (name === DeckName.Wishlist) return \"Wishlist\";\n    return name;\n};\n\nexport enum SectionName {\n    Default = \"_default\",\n    Sideboard = \"Sideboard\",\n    Maybeboard = \"Maybeboard\",\n}\n\nexport const EmptyCards = (...sections: string[]): DeckCards => sections.reduce((obj, s) => ({ ...obj, [s]: {} }), { [SectionName.Default]: {} });\n\nexport type DeckCardList = DeepReadonly<{\n    [cardName: string]: DeckCard;\n}>;\n\nexport type DeckCards = DeepReadonly<{\n    [SectionName.Default]: DeckCardList;\n    [section: string]: DeckCardList;\n}>;\n\nexport type DeckCard = DeepReadonly<{\n    amount: number;\n    name: string;\n    comment?: string;\n}>;\n\nexport type DeckProps = Omit<Deck, \"cards\">;\n\nexport type Deck = DeepReadonly<{\n    name: string;\n    previewUrl?: string;\n    cards: DeckCards;\n    isDirty?: boolean;\n}>;\n\nexport type FileIds = DeepReadonly<{\n    [DeckName.Collection]: string;\n    [DeckName.Wishlist]: string;\n    [deckName: string]: string;\n}>;\n\nexport type Decks = DeepReadonly<{\n    [DeckName.Collection]: Deck;\n    [DeckName.Wishlist]: Deck;\n    [deckName: string]: Deck;\n}>;\n\nexport type CardList = DeepReadonly<{\n    [cardName: string]: ScryCard;\n}>;\n\nexport type SymbolList = DeepReadonly<{\n    [symbol: string]: ScryCardSymbol;\n}>;\n\nexport type SetList = DeepReadonly<{\n    [setName: string]: ScrySet;\n}>;\n\nexport type AppStateT = DeepReadonly<{\n    files: FileIds;\n    decks: Decks;\n    cardList: CardList;\n    symbolList: SymbolList;\n    setList: SetList;\n    selectedDeck: string;\n}>;\n\nexport const initialState: AppStateT = {\n    files: {\n        [DeckName.Collection]: \"\",\n        [DeckName.Wishlist]: \"\",\n    },\n    decks: {\n        [DeckName.Collection]: { name: DeckName.Collection, cards: EmptyCards() },\n        [DeckName.Wishlist]: { name: DeckName.Wishlist, cards: EmptyCards() },\n    },\n    cardList: {},\n    symbolList: {},\n    setList: {},\n    selectedDeck: DeckName.Collection,\n};\n\nexport const AppState = React.createContext<[AppStateT, React.Dispatch<Action>]>([initialState, undefined as any]);\n\nexport type LoginStateT = {\n    profile?: GoogleProfile;\n    signOut: () => void;\n};\n\nexport const LoginState = React.createContext<LoginStateT>({ signOut: () => {} });\n"],"sourceRoot":""}